#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SQOnlineServices

#include "Basic.hpp"

#include "SQOnlineServices_structs.hpp"
#include "Engine_structs.hpp"
#include "OnlineSubsystemUtils_structs.hpp"


namespace SDK::Params
{

// Function SQOnlineServices.SQOnlineServicesOnlineUser.GetPlatform
// 0x0010 (0x0010 - 0x0000)
struct SQOnlineServicesOnlineUser_GetPlatform final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQOnlineServicesOnlineUser_GetPlatform) == 0x000008, "Wrong alignment on SQOnlineServicesOnlineUser_GetPlatform");
static_assert(sizeof(SQOnlineServicesOnlineUser_GetPlatform) == 0x000010, "Wrong size on SQOnlineServicesOnlineUser_GetPlatform");
static_assert(offsetof(SQOnlineServicesOnlineUser_GetPlatform, ReturnValue) == 0x000000, "Member 'SQOnlineServicesOnlineUser_GetPlatform::ReturnValue' has a wrong offset!");

// Function SQOnlineServices.SQOnlineServicesOnlineUser.GetUserAvatar
// 0x0008 (0x0008 - 0x0000)
struct SQOnlineServicesOnlineUser_GetUserAvatar final
{
public:
	class UTexture*                               DefaultTexture;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQOnlineServicesOnlineUser_GetUserAvatar) == 0x000008, "Wrong alignment on SQOnlineServicesOnlineUser_GetUserAvatar");
static_assert(sizeof(SQOnlineServicesOnlineUser_GetUserAvatar) == 0x000008, "Wrong size on SQOnlineServicesOnlineUser_GetUserAvatar");
static_assert(offsetof(SQOnlineServicesOnlineUser_GetUserAvatar, DefaultTexture) == 0x000000, "Member 'SQOnlineServicesOnlineUser_GetUserAvatar::DefaultTexture' has a wrong offset!");

// Function SQOnlineServices.SQOnlineServicesOnlineUser.IsReady
// 0x0001 (0x0001 - 0x0000)
struct SQOnlineServicesOnlineUser_IsReady final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQOnlineServicesOnlineUser_IsReady) == 0x000001, "Wrong alignment on SQOnlineServicesOnlineUser_IsReady");
static_assert(sizeof(SQOnlineServicesOnlineUser_IsReady) == 0x000001, "Wrong size on SQOnlineServicesOnlineUser_IsReady");
static_assert(offsetof(SQOnlineServicesOnlineUser_IsReady, ReturnValue) == 0x000000, "Member 'SQOnlineServicesOnlineUser_IsReady::ReturnValue' has a wrong offset!");

// Function SQOnlineServices.SQOnlineServicesOnlineUser.GetRealName
// 0x0010 (0x0010 - 0x0000)
struct SQOnlineServicesOnlineUser_GetRealName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQOnlineServicesOnlineUser_GetRealName) == 0x000008, "Wrong alignment on SQOnlineServicesOnlineUser_GetRealName");
static_assert(sizeof(SQOnlineServicesOnlineUser_GetRealName) == 0x000010, "Wrong size on SQOnlineServicesOnlineUser_GetRealName");
static_assert(offsetof(SQOnlineServicesOnlineUser_GetRealName, ReturnValue) == 0x000000, "Member 'SQOnlineServicesOnlineUser_GetRealName::ReturnValue' has a wrong offset!");

// Function SQOnlineServices.SQOnlineServicesOnlineUser.GetRelatedIds
// 0x0010 (0x0010 - 0x0000)
struct SQOnlineServicesOnlineUser_GetRelatedIds final
{
public:
	TArray<class FString>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQOnlineServicesOnlineUser_GetRelatedIds) == 0x000008, "Wrong alignment on SQOnlineServicesOnlineUser_GetRelatedIds");
static_assert(sizeof(SQOnlineServicesOnlineUser_GetRelatedIds) == 0x000010, "Wrong size on SQOnlineServicesOnlineUser_GetRelatedIds");
static_assert(offsetof(SQOnlineServicesOnlineUser_GetRelatedIds, ReturnValue) == 0x000000, "Member 'SQOnlineServicesOnlineUser_GetRelatedIds::ReturnValue' has a wrong offset!");

// Function SQOnlineServices.SQOnlineServicesOnlineUser.GetSteamID
// 0x0010 (0x0010 - 0x0000)
struct SQOnlineServicesOnlineUser_GetSteamID final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQOnlineServicesOnlineUser_GetSteamID) == 0x000008, "Wrong alignment on SQOnlineServicesOnlineUser_GetSteamID");
static_assert(sizeof(SQOnlineServicesOnlineUser_GetSteamID) == 0x000010, "Wrong size on SQOnlineServicesOnlineUser_GetSteamID");
static_assert(offsetof(SQOnlineServicesOnlineUser_GetSteamID, ReturnValue) == 0x000000, "Member 'SQOnlineServicesOnlineUser_GetSteamID::ReturnValue' has a wrong offset!");

// Function SQOnlineServices.SQOnlineServicesOnlineUser.GetUniqueID
// 0x0028 (0x0028 - 0x0000)
struct SQOnlineServicesOnlineUser_GetUniqueID final
{
public:
	struct FUniqueNetIdRepl                       ReturnValue;                                       // 0x0000(0x0028)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQOnlineServicesOnlineUser_GetUniqueID) == 0x000008, "Wrong alignment on SQOnlineServicesOnlineUser_GetUniqueID");
static_assert(sizeof(SQOnlineServicesOnlineUser_GetUniqueID) == 0x000028, "Wrong size on SQOnlineServicesOnlineUser_GetUniqueID");
static_assert(offsetof(SQOnlineServicesOnlineUser_GetUniqueID, ReturnValue) == 0x000000, "Member 'SQOnlineServicesOnlineUser_GetUniqueID::ReturnValue' has a wrong offset!");

// Function SQOnlineServices.SQOnlineServicesOnlineUser.GetUniqueIDString
// 0x0010 (0x0010 - 0x0000)
struct SQOnlineServicesOnlineUser_GetUniqueIDString final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQOnlineServicesOnlineUser_GetUniqueIDString) == 0x000008, "Wrong alignment on SQOnlineServicesOnlineUser_GetUniqueIDString");
static_assert(sizeof(SQOnlineServicesOnlineUser_GetUniqueIDString) == 0x000010, "Wrong size on SQOnlineServicesOnlineUser_GetUniqueIDString");
static_assert(offsetof(SQOnlineServicesOnlineUser_GetUniqueIDString, ReturnValue) == 0x000000, "Member 'SQOnlineServicesOnlineUser_GetUniqueIDString::ReturnValue' has a wrong offset!");

// Function SQOnlineServices.SQOnlineServicesOnlineUser.GetUserName
// 0x0010 (0x0010 - 0x0000)
struct SQOnlineServicesOnlineUser_GetUserName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQOnlineServicesOnlineUser_GetUserName) == 0x000008, "Wrong alignment on SQOnlineServicesOnlineUser_GetUserName");
static_assert(sizeof(SQOnlineServicesOnlineUser_GetUserName) == 0x000010, "Wrong size on SQOnlineServicesOnlineUser_GetUserName");
static_assert(offsetof(SQOnlineServicesOnlineUser_GetUserName, ReturnValue) == 0x000000, "Member 'SQOnlineServicesOnlineUser_GetUserName::ReturnValue' has a wrong offset!");

// Function SQOnlineServices.SQOnlineServicesFriends.FindFriendSession
// 0x0008 (0x0008 - 0x0000)
struct SQOnlineServicesFriends_FindFriendSession final
{
public:
	const class USQOnlineServicesFriendUser*      User;                                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQOnlineServicesFriends_FindFriendSession) == 0x000008, "Wrong alignment on SQOnlineServicesFriends_FindFriendSession");
static_assert(sizeof(SQOnlineServicesFriends_FindFriendSession) == 0x000008, "Wrong size on SQOnlineServicesFriends_FindFriendSession");
static_assert(offsetof(SQOnlineServicesFriends_FindFriendSession, User) == 0x000000, "Member 'SQOnlineServicesFriends_FindFriendSession::User' has a wrong offset!");

// Function SQOnlineServices.SQOnlineServicesFriends.GetCachedFriendsList
// 0x0010 (0x0010 - 0x0000)
struct SQOnlineServicesFriends_GetCachedFriendsList final
{
public:
	TArray<class USQOnlineServicesFriendUser*>    ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQOnlineServicesFriends_GetCachedFriendsList) == 0x000008, "Wrong alignment on SQOnlineServicesFriends_GetCachedFriendsList");
static_assert(sizeof(SQOnlineServicesFriends_GetCachedFriendsList) == 0x000010, "Wrong size on SQOnlineServicesFriends_GetCachedFriendsList");
static_assert(offsetof(SQOnlineServicesFriends_GetCachedFriendsList, ReturnValue) == 0x000000, "Member 'SQOnlineServicesFriends_GetCachedFriendsList::ReturnValue' has a wrong offset!");

// Function SQOnlineServices.SQOnlineServicesFriends.IsFriend
// 0x0030 (0x0030 - 0x0000)
struct SQOnlineServicesFriends_IsFriend final
{
public:
	struct FUniqueNetIdRepl                       FriendId;                                          // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SQOnlineServicesFriends_IsFriend) == 0x000008, "Wrong alignment on SQOnlineServicesFriends_IsFriend");
static_assert(sizeof(SQOnlineServicesFriends_IsFriend) == 0x000030, "Wrong size on SQOnlineServicesFriends_IsFriend");
static_assert(offsetof(SQOnlineServicesFriends_IsFriend, FriendId) == 0x000000, "Member 'SQOnlineServicesFriends_IsFriend::FriendId' has a wrong offset!");
static_assert(offsetof(SQOnlineServicesFriends_IsFriend, ReturnValue) == 0x000028, "Member 'SQOnlineServicesFriends_IsFriend::ReturnValue' has a wrong offset!");

// Function SQOnlineServices.SQOnlineServicesFriends.RequestUpdateFriendsList
// 0x0001 (0x0001 - 0x0000)
struct SQOnlineServicesFriends_RequestUpdateFriendsList final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQOnlineServicesFriends_RequestUpdateFriendsList) == 0x000001, "Wrong alignment on SQOnlineServicesFriends_RequestUpdateFriendsList");
static_assert(sizeof(SQOnlineServicesFriends_RequestUpdateFriendsList) == 0x000001, "Wrong size on SQOnlineServicesFriends_RequestUpdateFriendsList");
static_assert(offsetof(SQOnlineServicesFriends_RequestUpdateFriendsList, ReturnValue) == 0x000000, "Member 'SQOnlineServicesFriends_RequestUpdateFriendsList::ReturnValue' has a wrong offset!");

// Function SQOnlineServices.SQOnlineServicesFriendUser.IsFriendInSession
// 0x0110 (0x0110 - 0x0000)
struct SQOnlineServicesFriendUser_IsFriendInSession final
{
public:
	struct FBlueprintSessionResult                Session;                                           // 0x0000(0x0108)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0108(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SQOnlineServicesFriendUser_IsFriendInSession) == 0x000008, "Wrong alignment on SQOnlineServicesFriendUser_IsFriendInSession");
static_assert(sizeof(SQOnlineServicesFriendUser_IsFriendInSession) == 0x000110, "Wrong size on SQOnlineServicesFriendUser_IsFriendInSession");
static_assert(offsetof(SQOnlineServicesFriendUser_IsFriendInSession, Session) == 0x000000, "Member 'SQOnlineServicesFriendUser_IsFriendInSession::Session' has a wrong offset!");
static_assert(offsetof(SQOnlineServicesFriendUser_IsFriendInSession, ReturnValue) == 0x000108, "Member 'SQOnlineServicesFriendUser_IsFriendInSession::ReturnValue' has a wrong offset!");

// Function SQOnlineServices.SQOnlineServicesFriendUser.UpdateCachedPresence
// 0x0001 (0x0001 - 0x0000)
struct SQOnlineServicesFriendUser_UpdateCachedPresence final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQOnlineServicesFriendUser_UpdateCachedPresence) == 0x000001, "Wrong alignment on SQOnlineServicesFriendUser_UpdateCachedPresence");
static_assert(sizeof(SQOnlineServicesFriendUser_UpdateCachedPresence) == 0x000001, "Wrong size on SQOnlineServicesFriendUser_UpdateCachedPresence");
static_assert(offsetof(SQOnlineServicesFriendUser_UpdateCachedPresence, ReturnValue) == 0x000000, "Member 'SQOnlineServicesFriendUser_UpdateCachedPresence::ReturnValue' has a wrong offset!");

// Function SQOnlineServices.SQOnlineServicesFriendUser.GetInviteStatus
// 0x0001 (0x0001 - 0x0000)
struct SQOnlineServicesFriendUser_GetInviteStatus final
{
public:
	ESQInviteStatus                               ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQOnlineServicesFriendUser_GetInviteStatus) == 0x000001, "Wrong alignment on SQOnlineServicesFriendUser_GetInviteStatus");
static_assert(sizeof(SQOnlineServicesFriendUser_GetInviteStatus) == 0x000001, "Wrong size on SQOnlineServicesFriendUser_GetInviteStatus");
static_assert(offsetof(SQOnlineServicesFriendUser_GetInviteStatus, ReturnValue) == 0x000000, "Member 'SQOnlineServicesFriendUser_GetInviteStatus::ReturnValue' has a wrong offset!");

// Function SQOnlineServices.SQOnlineServicesFriendUser.GetIsJoinable
// 0x0001 (0x0001 - 0x0000)
struct SQOnlineServicesFriendUser_GetIsJoinable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQOnlineServicesFriendUser_GetIsJoinable) == 0x000001, "Wrong alignment on SQOnlineServicesFriendUser_GetIsJoinable");
static_assert(sizeof(SQOnlineServicesFriendUser_GetIsJoinable) == 0x000001, "Wrong size on SQOnlineServicesFriendUser_GetIsJoinable");
static_assert(offsetof(SQOnlineServicesFriendUser_GetIsJoinable, ReturnValue) == 0x000000, "Member 'SQOnlineServicesFriendUser_GetIsJoinable::ReturnValue' has a wrong offset!");

// Function SQOnlineServices.SQOnlineServicesFriendUser.GetIsOnline
// 0x0001 (0x0001 - 0x0000)
struct SQOnlineServicesFriendUser_GetIsOnline final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQOnlineServicesFriendUser_GetIsOnline) == 0x000001, "Wrong alignment on SQOnlineServicesFriendUser_GetIsOnline");
static_assert(sizeof(SQOnlineServicesFriendUser_GetIsOnline) == 0x000001, "Wrong size on SQOnlineServicesFriendUser_GetIsOnline");
static_assert(offsetof(SQOnlineServicesFriendUser_GetIsOnline, ReturnValue) == 0x000000, "Member 'SQOnlineServicesFriendUser_GetIsOnline::ReturnValue' has a wrong offset!");

// Function SQOnlineServices.SQOnlineServicesFriendUser.GetIsPlaying
// 0x0001 (0x0001 - 0x0000)
struct SQOnlineServicesFriendUser_GetIsPlaying final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQOnlineServicesFriendUser_GetIsPlaying) == 0x000001, "Wrong alignment on SQOnlineServicesFriendUser_GetIsPlaying");
static_assert(sizeof(SQOnlineServicesFriendUser_GetIsPlaying) == 0x000001, "Wrong size on SQOnlineServicesFriendUser_GetIsPlaying");
static_assert(offsetof(SQOnlineServicesFriendUser_GetIsPlaying, ReturnValue) == 0x000000, "Member 'SQOnlineServicesFriendUser_GetIsPlaying::ReturnValue' has a wrong offset!");

// Function SQOnlineServices.SQOnlineServicesFriendUser.GetIsPlayingThisGame
// 0x0001 (0x0001 - 0x0000)
struct SQOnlineServicesFriendUser_GetIsPlayingThisGame final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQOnlineServicesFriendUser_GetIsPlayingThisGame) == 0x000001, "Wrong alignment on SQOnlineServicesFriendUser_GetIsPlayingThisGame");
static_assert(sizeof(SQOnlineServicesFriendUser_GetIsPlayingThisGame) == 0x000001, "Wrong size on SQOnlineServicesFriendUser_GetIsPlayingThisGame");
static_assert(offsetof(SQOnlineServicesFriendUser_GetIsPlayingThisGame, ReturnValue) == 0x000000, "Member 'SQOnlineServicesFriendUser_GetIsPlayingThisGame::ReturnValue' has a wrong offset!");

// Function SQOnlineServices.SQOnlineServicesFriendUser.GetPresenceFactionID
// 0x0010 (0x0010 - 0x0000)
struct SQOnlineServicesFriendUser_GetPresenceFactionID final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQOnlineServicesFriendUser_GetPresenceFactionID) == 0x000008, "Wrong alignment on SQOnlineServicesFriendUser_GetPresenceFactionID");
static_assert(sizeof(SQOnlineServicesFriendUser_GetPresenceFactionID) == 0x000010, "Wrong size on SQOnlineServicesFriendUser_GetPresenceFactionID");
static_assert(offsetof(SQOnlineServicesFriendUser_GetPresenceFactionID, ReturnValue) == 0x000000, "Member 'SQOnlineServicesFriendUser_GetPresenceFactionID::ReturnValue' has a wrong offset!");

// Function SQOnlineServices.SQOnlineServicesFriendUser.GetPresenceFactionName
// 0x0010 (0x0010 - 0x0000)
struct SQOnlineServicesFriendUser_GetPresenceFactionName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQOnlineServicesFriendUser_GetPresenceFactionName) == 0x000008, "Wrong alignment on SQOnlineServicesFriendUser_GetPresenceFactionName");
static_assert(sizeof(SQOnlineServicesFriendUser_GetPresenceFactionName) == 0x000010, "Wrong size on SQOnlineServicesFriendUser_GetPresenceFactionName");
static_assert(offsetof(SQOnlineServicesFriendUser_GetPresenceFactionName, ReturnValue) == 0x000000, "Member 'SQOnlineServicesFriendUser_GetPresenceFactionName::ReturnValue' has a wrong offset!");

// Function SQOnlineServices.SQOnlineServicesFriendUser.GetPresenceMapName
// 0x0010 (0x0010 - 0x0000)
struct SQOnlineServicesFriendUser_GetPresenceMapName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQOnlineServicesFriendUser_GetPresenceMapName) == 0x000008, "Wrong alignment on SQOnlineServicesFriendUser_GetPresenceMapName");
static_assert(sizeof(SQOnlineServicesFriendUser_GetPresenceMapName) == 0x000010, "Wrong size on SQOnlineServicesFriendUser_GetPresenceMapName");
static_assert(offsetof(SQOnlineServicesFriendUser_GetPresenceMapName, ReturnValue) == 0x000000, "Member 'SQOnlineServicesFriendUser_GetPresenceMapName::ReturnValue' has a wrong offset!");

// Function SQOnlineServices.SQOnlineServicesFriendUser.GetPresencePlayerCount
// 0x0010 (0x0010 - 0x0000)
struct SQOnlineServicesFriendUser_GetPresencePlayerCount final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQOnlineServicesFriendUser_GetPresencePlayerCount) == 0x000008, "Wrong alignment on SQOnlineServicesFriendUser_GetPresencePlayerCount");
static_assert(sizeof(SQOnlineServicesFriendUser_GetPresencePlayerCount) == 0x000010, "Wrong size on SQOnlineServicesFriendUser_GetPresencePlayerCount");
static_assert(offsetof(SQOnlineServicesFriendUser_GetPresencePlayerCount, ReturnValue) == 0x000000, "Member 'SQOnlineServicesFriendUser_GetPresencePlayerCount::ReturnValue' has a wrong offset!");

// Function SQOnlineServices.SQOnlineServicesFriendUser.GetPresenceServerName
// 0x0010 (0x0010 - 0x0000)
struct SQOnlineServicesFriendUser_GetPresenceServerName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQOnlineServicesFriendUser_GetPresenceServerName) == 0x000008, "Wrong alignment on SQOnlineServicesFriendUser_GetPresenceServerName");
static_assert(sizeof(SQOnlineServicesFriendUser_GetPresenceServerName) == 0x000010, "Wrong size on SQOnlineServicesFriendUser_GetPresenceServerName");
static_assert(offsetof(SQOnlineServicesFriendUser_GetPresenceServerName, ReturnValue) == 0x000000, "Member 'SQOnlineServicesFriendUser_GetPresenceServerName::ReturnValue' has a wrong offset!");

// Function SQOnlineServices.SQOnlineServicesFriendUser.GetStatus
// 0x0010 (0x0010 - 0x0000)
struct SQOnlineServicesFriendUser_GetStatus final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQOnlineServicesFriendUser_GetStatus) == 0x000008, "Wrong alignment on SQOnlineServicesFriendUser_GetStatus");
static_assert(sizeof(SQOnlineServicesFriendUser_GetStatus) == 0x000010, "Wrong size on SQOnlineServicesFriendUser_GetStatus");
static_assert(offsetof(SQOnlineServicesFriendUser_GetStatus, ReturnValue) == 0x000000, "Member 'SQOnlineServicesFriendUser_GetStatus::ReturnValue' has a wrong offset!");

// Function SQOnlineServices.SQOnlineServicesParty.GetPartyLeader
// 0x0008 (0x0008 - 0x0000)
struct SQOnlineServicesParty_GetPartyLeader final
{
public:
	class USQOnlineServicesPartyUser*             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQOnlineServicesParty_GetPartyLeader) == 0x000008, "Wrong alignment on SQOnlineServicesParty_GetPartyLeader");
static_assert(sizeof(SQOnlineServicesParty_GetPartyLeader) == 0x000008, "Wrong size on SQOnlineServicesParty_GetPartyLeader");
static_assert(offsetof(SQOnlineServicesParty_GetPartyLeader, ReturnValue) == 0x000000, "Member 'SQOnlineServicesParty_GetPartyLeader::ReturnValue' has a wrong offset!");

// Function SQOnlineServices.SQOnlineServicesParty.GetPartyMembers
// 0x0010 (0x0010 - 0x0000)
struct SQOnlineServicesParty_GetPartyMembers final
{
public:
	TArray<class USQOnlineServicesPartyUser*>     ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQOnlineServicesParty_GetPartyMembers) == 0x000008, "Wrong alignment on SQOnlineServicesParty_GetPartyMembers");
static_assert(sizeof(SQOnlineServicesParty_GetPartyMembers) == 0x000010, "Wrong size on SQOnlineServicesParty_GetPartyMembers");
static_assert(offsetof(SQOnlineServicesParty_GetPartyMembers, ReturnValue) == 0x000000, "Member 'SQOnlineServicesParty_GetPartyMembers::ReturnValue' has a wrong offset!");

// Function SQOnlineServices.SQOnlineServicesParty.IsPartyLeader
// 0x0030 (0x0030 - 0x0000)
struct SQOnlineServicesParty_IsPartyLeader final
{
public:
	struct FUniqueNetIdRepl                       PartyMember;                                       // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SQOnlineServicesParty_IsPartyLeader) == 0x000008, "Wrong alignment on SQOnlineServicesParty_IsPartyLeader");
static_assert(sizeof(SQOnlineServicesParty_IsPartyLeader) == 0x000030, "Wrong size on SQOnlineServicesParty_IsPartyLeader");
static_assert(offsetof(SQOnlineServicesParty_IsPartyLeader, PartyMember) == 0x000000, "Member 'SQOnlineServicesParty_IsPartyLeader::PartyMember' has a wrong offset!");
static_assert(offsetof(SQOnlineServicesParty_IsPartyLeader, ReturnValue) == 0x000028, "Member 'SQOnlineServicesParty_IsPartyLeader::ReturnValue' has a wrong offset!");

// Function SQOnlineServices.SQOnlineServicesParty.IsPartyUserLeader
// 0x0010 (0x0010 - 0x0000)
struct SQOnlineServicesParty_IsPartyUserLeader final
{
public:
	const class USQOnlineServicesPartyUser*       PartyMember;                                       // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SQOnlineServicesParty_IsPartyUserLeader) == 0x000008, "Wrong alignment on SQOnlineServicesParty_IsPartyUserLeader");
static_assert(sizeof(SQOnlineServicesParty_IsPartyUserLeader) == 0x000010, "Wrong size on SQOnlineServicesParty_IsPartyUserLeader");
static_assert(offsetof(SQOnlineServicesParty_IsPartyUserLeader, PartyMember) == 0x000000, "Member 'SQOnlineServicesParty_IsPartyUserLeader::PartyMember' has a wrong offset!");
static_assert(offsetof(SQOnlineServicesParty_IsPartyUserLeader, ReturnValue) == 0x000008, "Member 'SQOnlineServicesParty_IsPartyUserLeader::ReturnValue' has a wrong offset!");

// Function SQOnlineServices.SQOnlineServicesParty.KickPlayer
// 0x0028 (0x0028 - 0x0000)
struct SQOnlineServicesParty_KickPlayer final
{
public:
	struct FUniqueNetIdRepl                       Player;                                            // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQOnlineServicesParty_KickPlayer) == 0x000008, "Wrong alignment on SQOnlineServicesParty_KickPlayer");
static_assert(sizeof(SQOnlineServicesParty_KickPlayer) == 0x000028, "Wrong size on SQOnlineServicesParty_KickPlayer");
static_assert(offsetof(SQOnlineServicesParty_KickPlayer, Player) == 0x000000, "Member 'SQOnlineServicesParty_KickPlayer::Player' has a wrong offset!");

// Function SQOnlineServices.SQOnlineServicesParty.PromoteLeader
// 0x0028 (0x0028 - 0x0000)
struct SQOnlineServicesParty_PromoteLeader final
{
public:
	struct FUniqueNetIdRepl                       Player;                                            // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQOnlineServicesParty_PromoteLeader) == 0x000008, "Wrong alignment on SQOnlineServicesParty_PromoteLeader");
static_assert(sizeof(SQOnlineServicesParty_PromoteLeader) == 0x000028, "Wrong size on SQOnlineServicesParty_PromoteLeader");
static_assert(offsetof(SQOnlineServicesParty_PromoteLeader, Player) == 0x000000, "Member 'SQOnlineServicesParty_PromoteLeader::Player' has a wrong offset!");

// Function SQOnlineServices.SQOnlineServicesRecentUser.GetLastSeenString
// 0x0010 (0x0010 - 0x0000)
struct SQOnlineServicesRecentUser_GetLastSeenString final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQOnlineServicesRecentUser_GetLastSeenString) == 0x000008, "Wrong alignment on SQOnlineServicesRecentUser_GetLastSeenString");
static_assert(sizeof(SQOnlineServicesRecentUser_GetLastSeenString) == 0x000010, "Wrong size on SQOnlineServicesRecentUser_GetLastSeenString");
static_assert(offsetof(SQOnlineServicesRecentUser_GetLastSeenString, ReturnValue) == 0x000000, "Member 'SQOnlineServicesRecentUser_GetLastSeenString::ReturnValue' has a wrong offset!");

// Function SQOnlineServices.SQOnlineServicesSubsystem.SetPlayerPresence
// 0x0058 (0x0058 - 0x0000)
struct SQOnlineServicesSubsystem_SetPlayerPresence final
{
public:
	class FString                                 ServerName;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Faction;                                           // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 FactionID;                                         // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Map;                                               // 0x0030(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Players;                                           // 0x0040(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisplayDetails;                                   // 0x0050(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SQOnlineServicesSubsystem_SetPlayerPresence) == 0x000008, "Wrong alignment on SQOnlineServicesSubsystem_SetPlayerPresence");
static_assert(sizeof(SQOnlineServicesSubsystem_SetPlayerPresence) == 0x000058, "Wrong size on SQOnlineServicesSubsystem_SetPlayerPresence");
static_assert(offsetof(SQOnlineServicesSubsystem_SetPlayerPresence, ServerName) == 0x000000, "Member 'SQOnlineServicesSubsystem_SetPlayerPresence::ServerName' has a wrong offset!");
static_assert(offsetof(SQOnlineServicesSubsystem_SetPlayerPresence, Faction) == 0x000010, "Member 'SQOnlineServicesSubsystem_SetPlayerPresence::Faction' has a wrong offset!");
static_assert(offsetof(SQOnlineServicesSubsystem_SetPlayerPresence, FactionID) == 0x000020, "Member 'SQOnlineServicesSubsystem_SetPlayerPresence::FactionID' has a wrong offset!");
static_assert(offsetof(SQOnlineServicesSubsystem_SetPlayerPresence, Map) == 0x000030, "Member 'SQOnlineServicesSubsystem_SetPlayerPresence::Map' has a wrong offset!");
static_assert(offsetof(SQOnlineServicesSubsystem_SetPlayerPresence, Players) == 0x000040, "Member 'SQOnlineServicesSubsystem_SetPlayerPresence::Players' has a wrong offset!");
static_assert(offsetof(SQOnlineServicesSubsystem_SetPlayerPresence, bDisplayDetails) == 0x000050, "Member 'SQOnlineServicesSubsystem_SetPlayerPresence::bDisplayDetails' has a wrong offset!");

// Function SQOnlineServices.SQOnlineServicesSubsystem.GetLocalUser
// 0x0008 (0x0008 - 0x0000)
struct SQOnlineServicesSubsystem_GetLocalUser final
{
public:
	class USQOnlineServicesLocalUser*             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQOnlineServicesSubsystem_GetLocalUser) == 0x000008, "Wrong alignment on SQOnlineServicesSubsystem_GetLocalUser");
static_assert(sizeof(SQOnlineServicesSubsystem_GetLocalUser) == 0x000008, "Wrong size on SQOnlineServicesSubsystem_GetLocalUser");
static_assert(offsetof(SQOnlineServicesSubsystem_GetLocalUser, ReturnValue) == 0x000000, "Member 'SQOnlineServicesSubsystem_GetLocalUser::ReturnValue' has a wrong offset!");

}

