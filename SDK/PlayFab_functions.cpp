#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayFab

#include "Basic.hpp"

#include "PlayFab_classes.hpp"
#include "PlayFab_parameters.hpp"


namespace SDK
{

// Function PlayFab.PlayFabAdminAPI.AbortTaskInstance
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminAbortTaskInstanceRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::AbortTaskInstance(const struct FAdminAbortTaskInstanceRequest& Request, TDelegate<void(const struct FAdminEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "AbortTaskInstance");

	Params::PlayFabAdminAPI_AbortTaskInstance Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.AddLocalizedNews
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminAddLocalizedNewsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminAddLocalizedNewsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::AddLocalizedNews(const struct FAdminAddLocalizedNewsRequest& Request, TDelegate<void(const struct FAdminAddLocalizedNewsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "AddLocalizedNews");

	Params::PlayFabAdminAPI_AddLocalizedNews Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.AddNews
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminAddNewsRequest&      Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminAddNewsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::AddNews(const struct FAdminAddNewsRequest& Request, TDelegate<void(const struct FAdminAddNewsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "AddNews");

	Params::PlayFabAdminAPI_AddNews Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.AddPlayerTag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminAddPlayerTagRequest& Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminAddPlayerTagResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::AddPlayerTag(const struct FAdminAddPlayerTagRequest& Request, TDelegate<void(const struct FAdminAddPlayerTagResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "AddPlayerTag");

	Params::PlayFabAdminAPI_AddPlayerTag Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.AddUserVirtualCurrency
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminAddUserVirtualCurrencyRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminModifyUserVirtualCurrencyResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::AddUserVirtualCurrency(const struct FAdminAddUserVirtualCurrencyRequest& Request, TDelegate<void(const struct FAdminModifyUserVirtualCurrencyResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "AddUserVirtualCurrency");

	Params::PlayFabAdminAPI_AddUserVirtualCurrency Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.AddVirtualCurrencyTypes
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminAddVirtualCurrencyTypesRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminBlankResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::AddVirtualCurrencyTypes(const struct FAdminAddVirtualCurrencyTypesRequest& Request, TDelegate<void(const struct FAdminBlankResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "AddVirtualCurrencyTypes");

	Params::PlayFabAdminAPI_AddVirtualCurrencyTypes Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.BanUsers
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminBanUsersRequest&     Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminBanUsersResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::BanUsers(const struct FAdminBanUsersRequest& Request, TDelegate<void(const struct FAdminBanUsersResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "BanUsers");

	Params::PlayFabAdminAPI_BanUsers Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.CheckLimitedEditionItemAvailability
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminCheckLimitedEditionItemAvailabilityRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminCheckLimitedEditionItemAvailabilityResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::CheckLimitedEditionItemAvailability(const struct FAdminCheckLimitedEditionItemAvailabilityRequest& Request, TDelegate<void(const struct FAdminCheckLimitedEditionItemAvailabilityResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "CheckLimitedEditionItemAvailability");

	Params::PlayFabAdminAPI_CheckLimitedEditionItemAvailability Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.CreateActionsOnPlayersInSegmentTask
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminCreateActionsOnPlayerSegmentTaskRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminCreateTaskResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::CreateActionsOnPlayersInSegmentTask(const struct FAdminCreateActionsOnPlayerSegmentTaskRequest& Request, TDelegate<void(const struct FAdminCreateTaskResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "CreateActionsOnPlayersInSegmentTask");

	Params::PlayFabAdminAPI_CreateActionsOnPlayersInSegmentTask Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.CreateCloudScriptTask
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminCreateCloudScriptTaskRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminCreateTaskResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::CreateCloudScriptTask(const struct FAdminCreateCloudScriptTaskRequest& Request, TDelegate<void(const struct FAdminCreateTaskResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "CreateCloudScriptTask");

	Params::PlayFabAdminAPI_CreateCloudScriptTask Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.CreateInsightsScheduledScalingTask
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminCreateInsightsScheduledScalingTaskRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminCreateTaskResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::CreateInsightsScheduledScalingTask(const struct FAdminCreateInsightsScheduledScalingTaskRequest& Request, TDelegate<void(const struct FAdminCreateTaskResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "CreateInsightsScheduledScalingTask");

	Params::PlayFabAdminAPI_CreateInsightsScheduledScalingTask Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.CreateOpenIdConnection
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminCreateOpenIdConnectionRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::CreateOpenIdConnection(const struct FAdminCreateOpenIdConnectionRequest& Request, TDelegate<void(const struct FAdminEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "CreateOpenIdConnection");

	Params::PlayFabAdminAPI_CreateOpenIdConnection Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.CreatePlayerSharedSecret
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminCreatePlayerSharedSecretRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminCreatePlayerSharedSecretResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::CreatePlayerSharedSecret(const struct FAdminCreatePlayerSharedSecretRequest& Request, TDelegate<void(const struct FAdminCreatePlayerSharedSecretResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "CreatePlayerSharedSecret");

	Params::PlayFabAdminAPI_CreatePlayerSharedSecret Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.CreatePlayerStatisticDefinition
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminCreatePlayerStatisticDefinitionRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminCreatePlayerStatisticDefinitionResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::CreatePlayerStatisticDefinition(const struct FAdminCreatePlayerStatisticDefinitionRequest& Request, TDelegate<void(const struct FAdminCreatePlayerStatisticDefinitionResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "CreatePlayerStatisticDefinition");

	Params::PlayFabAdminAPI_CreatePlayerStatisticDefinition Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.CreateSegment
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminCreateSegmentRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminCreateSegmentResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::CreateSegment(const struct FAdminCreateSegmentRequest& Request, TDelegate<void(const struct FAdminCreateSegmentResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "CreateSegment");

	Params::PlayFabAdminAPI_CreateSegment Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.DeleteContent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminDeleteContentRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminBlankResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::DeleteContent(const struct FAdminDeleteContentRequest& Request, TDelegate<void(const struct FAdminBlankResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "DeleteContent");

	Params::PlayFabAdminAPI_DeleteContent Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.DeleteMasterPlayerAccount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminDeleteMasterPlayerAccountRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminDeleteMasterPlayerAccountResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::DeleteMasterPlayerAccount(const struct FAdminDeleteMasterPlayerAccountRequest& Request, TDelegate<void(const struct FAdminDeleteMasterPlayerAccountResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "DeleteMasterPlayerAccount");

	Params::PlayFabAdminAPI_DeleteMasterPlayerAccount Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.DeleteMembershipSubscription
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminDeleteMembershipSubscriptionRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminDeleteMembershipSubscriptionResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::DeleteMembershipSubscription(const struct FAdminDeleteMembershipSubscriptionRequest& Request, TDelegate<void(const struct FAdminDeleteMembershipSubscriptionResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "DeleteMembershipSubscription");

	Params::PlayFabAdminAPI_DeleteMembershipSubscription Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.DeleteOpenIdConnection
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminDeleteOpenIdConnectionRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::DeleteOpenIdConnection(const struct FAdminDeleteOpenIdConnectionRequest& Request, TDelegate<void(const struct FAdminEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "DeleteOpenIdConnection");

	Params::PlayFabAdminAPI_DeleteOpenIdConnection Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.DeletePlayer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminDeletePlayerRequest& Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminDeletePlayerResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::DeletePlayer(const struct FAdminDeletePlayerRequest& Request, TDelegate<void(const struct FAdminDeletePlayerResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "DeletePlayer");

	Params::PlayFabAdminAPI_DeletePlayer Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.DeletePlayerSharedSecret
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminDeletePlayerSharedSecretRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminDeletePlayerSharedSecretResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::DeletePlayerSharedSecret(const struct FAdminDeletePlayerSharedSecretRequest& Request, TDelegate<void(const struct FAdminDeletePlayerSharedSecretResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "DeletePlayerSharedSecret");

	Params::PlayFabAdminAPI_DeletePlayerSharedSecret Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.DeleteSegment
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminDeleteSegmentRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminDeleteSegmentsResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::DeleteSegment(const struct FAdminDeleteSegmentRequest& Request, TDelegate<void(const struct FAdminDeleteSegmentsResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "DeleteSegment");

	Params::PlayFabAdminAPI_DeleteSegment Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.DeleteStore
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminDeleteStoreRequest&  Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminDeleteStoreResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::DeleteStore(const struct FAdminDeleteStoreRequest& Request, TDelegate<void(const struct FAdminDeleteStoreResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "DeleteStore");

	Params::PlayFabAdminAPI_DeleteStore Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.DeleteTask
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminDeleteTaskRequest&   Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::DeleteTask(const struct FAdminDeleteTaskRequest& Request, TDelegate<void(const struct FAdminEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "DeleteTask");

	Params::PlayFabAdminAPI_DeleteTask Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.DeleteTitle
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminDeleteTitleRequest&  Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminDeleteTitleResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::DeleteTitle(const struct FAdminDeleteTitleRequest& Request, TDelegate<void(const struct FAdminDeleteTitleResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "DeleteTitle");

	Params::PlayFabAdminAPI_DeleteTitle Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.DeleteTitleDataOverride
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminDeleteTitleDataOverrideRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminDeleteTitleDataOverrideResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::DeleteTitleDataOverride(const struct FAdminDeleteTitleDataOverrideRequest& Request, TDelegate<void(const struct FAdminDeleteTitleDataOverrideResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "DeleteTitleDataOverride");

	Params::PlayFabAdminAPI_DeleteTitleDataOverride Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.ExportMasterPlayerData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminExportMasterPlayerDataRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminExportMasterPlayerDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::ExportMasterPlayerData(const struct FAdminExportMasterPlayerDataRequest& Request, TDelegate<void(const struct FAdminExportMasterPlayerDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "ExportMasterPlayerData");

	Params::PlayFabAdminAPI_ExportMasterPlayerData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.ExportPlayersInSegment
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminExportPlayersInSegmentRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminExportPlayersInSegmentResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::ExportPlayersInSegment(const struct FAdminExportPlayersInSegmentRequest& Request, TDelegate<void(const struct FAdminExportPlayersInSegmentResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "ExportPlayersInSegment");

	Params::PlayFabAdminAPI_ExportPlayersInSegment Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.GetActionsOnPlayersInSegmentTaskInstance
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminGetTaskInstanceRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminGetActionsOnPlayersInSegmentTaskInstanceResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::GetActionsOnPlayersInSegmentTaskInstance(const struct FAdminGetTaskInstanceRequest& Request, TDelegate<void(const struct FAdminGetActionsOnPlayersInSegmentTaskInstanceResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "GetActionsOnPlayersInSegmentTaskInstance");

	Params::PlayFabAdminAPI_GetActionsOnPlayersInSegmentTaskInstance Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.GetAllSegments
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminGetAllSegmentsRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminGetAllSegmentsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::GetAllSegments(const struct FAdminGetAllSegmentsRequest& Request, TDelegate<void(const struct FAdminGetAllSegmentsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "GetAllSegments");

	Params::PlayFabAdminAPI_GetAllSegments Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.GetCatalogItems
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminGetCatalogItemsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminGetCatalogItemsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::GetCatalogItems(const struct FAdminGetCatalogItemsRequest& Request, TDelegate<void(const struct FAdminGetCatalogItemsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "GetCatalogItems");

	Params::PlayFabAdminAPI_GetCatalogItems Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.GetCloudScriptRevision
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminGetCloudScriptRevisionRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminGetCloudScriptRevisionResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::GetCloudScriptRevision(const struct FAdminGetCloudScriptRevisionRequest& Request, TDelegate<void(const struct FAdminGetCloudScriptRevisionResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "GetCloudScriptRevision");

	Params::PlayFabAdminAPI_GetCloudScriptRevision Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.GetCloudScriptTaskInstance
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminGetTaskInstanceRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminGetCloudScriptTaskInstanceResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::GetCloudScriptTaskInstance(const struct FAdminGetTaskInstanceRequest& Request, TDelegate<void(const struct FAdminGetCloudScriptTaskInstanceResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "GetCloudScriptTaskInstance");

	Params::PlayFabAdminAPI_GetCloudScriptTaskInstance Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.GetCloudScriptVersions
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminGetCloudScriptVersionsRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminGetCloudScriptVersionsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::GetCloudScriptVersions(const struct FAdminGetCloudScriptVersionsRequest& Request, TDelegate<void(const struct FAdminGetCloudScriptVersionsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "GetCloudScriptVersions");

	Params::PlayFabAdminAPI_GetCloudScriptVersions Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.GetContentList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminGetContentListRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminGetContentListResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::GetContentList(const struct FAdminGetContentListRequest& Request, TDelegate<void(const struct FAdminGetContentListResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "GetContentList");

	Params::PlayFabAdminAPI_GetContentList Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.GetContentUploadUrl
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminGetContentUploadUrlRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminGetContentUploadUrlResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::GetContentUploadUrl(const struct FAdminGetContentUploadUrlRequest& Request, TDelegate<void(const struct FAdminGetContentUploadUrlResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "GetContentUploadUrl");

	Params::PlayFabAdminAPI_GetContentUploadUrl Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.GetDataReport
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminGetDataReportRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminGetDataReportResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::GetDataReport(const struct FAdminGetDataReportRequest& Request, TDelegate<void(const struct FAdminGetDataReportResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "GetDataReport");

	Params::PlayFabAdminAPI_GetDataReport Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.GetMatchmakerGameInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminGetMatchmakerGameInfoRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminGetMatchmakerGameInfoResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::GetMatchmakerGameInfo(const struct FAdminGetMatchmakerGameInfoRequest& Request, TDelegate<void(const struct FAdminGetMatchmakerGameInfoResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "GetMatchmakerGameInfo");

	Params::PlayFabAdminAPI_GetMatchmakerGameInfo Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.GetMatchmakerGameModes
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminGetMatchmakerGameModesRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminGetMatchmakerGameModesResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::GetMatchmakerGameModes(const struct FAdminGetMatchmakerGameModesRequest& Request, TDelegate<void(const struct FAdminGetMatchmakerGameModesResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "GetMatchmakerGameModes");

	Params::PlayFabAdminAPI_GetMatchmakerGameModes Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.GetPlayedTitleList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminGetPlayedTitleListRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminGetPlayedTitleListResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::GetPlayedTitleList(const struct FAdminGetPlayedTitleListRequest& Request, TDelegate<void(const struct FAdminGetPlayedTitleListResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "GetPlayedTitleList");

	Params::PlayFabAdminAPI_GetPlayedTitleList Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.GetPlayerIdFromAuthToken
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminGetPlayerIdFromAuthTokenRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminGetPlayerIdFromAuthTokenResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::GetPlayerIdFromAuthToken(const struct FAdminGetPlayerIdFromAuthTokenRequest& Request, TDelegate<void(const struct FAdminGetPlayerIdFromAuthTokenResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "GetPlayerIdFromAuthToken");

	Params::PlayFabAdminAPI_GetPlayerIdFromAuthToken Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.GetPlayerProfile
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminGetPlayerProfileRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminGetPlayerProfileResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::GetPlayerProfile(const struct FAdminGetPlayerProfileRequest& Request, TDelegate<void(const struct FAdminGetPlayerProfileResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "GetPlayerProfile");

	Params::PlayFabAdminAPI_GetPlayerProfile Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.GetPlayerSegments
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminGetPlayersSegmentsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminGetPlayerSegmentsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::GetPlayerSegments(const struct FAdminGetPlayersSegmentsRequest& Request, TDelegate<void(const struct FAdminGetPlayerSegmentsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "GetPlayerSegments");

	Params::PlayFabAdminAPI_GetPlayerSegments Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.GetPlayerSharedSecrets
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminGetPlayerSharedSecretsRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminGetPlayerSharedSecretsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::GetPlayerSharedSecrets(const struct FAdminGetPlayerSharedSecretsRequest& Request, TDelegate<void(const struct FAdminGetPlayerSharedSecretsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "GetPlayerSharedSecrets");

	Params::PlayFabAdminAPI_GetPlayerSharedSecrets Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.GetPlayersInSegment
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminGetPlayersInSegmentRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminGetPlayersInSegmentResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::GetPlayersInSegment(const struct FAdminGetPlayersInSegmentRequest& Request, TDelegate<void(const struct FAdminGetPlayersInSegmentResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "GetPlayersInSegment");

	Params::PlayFabAdminAPI_GetPlayersInSegment Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.GetPlayerStatisticDefinitions
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminGetPlayerStatisticDefinitionsRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminGetPlayerStatisticDefinitionsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::GetPlayerStatisticDefinitions(const struct FAdminGetPlayerStatisticDefinitionsRequest& Request, TDelegate<void(const struct FAdminGetPlayerStatisticDefinitionsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "GetPlayerStatisticDefinitions");

	Params::PlayFabAdminAPI_GetPlayerStatisticDefinitions Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.GetPlayerStatisticVersions
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminGetPlayerStatisticVersionsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminGetPlayerStatisticVersionsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::GetPlayerStatisticVersions(const struct FAdminGetPlayerStatisticVersionsRequest& Request, TDelegate<void(const struct FAdminGetPlayerStatisticVersionsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "GetPlayerStatisticVersions");

	Params::PlayFabAdminAPI_GetPlayerStatisticVersions Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.GetPlayerTags
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminGetPlayerTagsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminGetPlayerTagsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::GetPlayerTags(const struct FAdminGetPlayerTagsRequest& Request, TDelegate<void(const struct FAdminGetPlayerTagsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "GetPlayerTags");

	Params::PlayFabAdminAPI_GetPlayerTags Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.GetPolicy
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminGetPolicyRequest&    Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminGetPolicyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::GetPolicy(const struct FAdminGetPolicyRequest& Request, TDelegate<void(const struct FAdminGetPolicyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "GetPolicy");

	Params::PlayFabAdminAPI_GetPolicy Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.GetPublisherData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminGetPublisherDataRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminGetPublisherDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::GetPublisherData(const struct FAdminGetPublisherDataRequest& Request, TDelegate<void(const struct FAdminGetPublisherDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "GetPublisherData");

	Params::PlayFabAdminAPI_GetPublisherData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.GetRandomResultTables
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminGetRandomResultTablesRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminGetRandomResultTablesResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::GetRandomResultTables(const struct FAdminGetRandomResultTablesRequest& Request, TDelegate<void(const struct FAdminGetRandomResultTablesResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "GetRandomResultTables");

	Params::PlayFabAdminAPI_GetRandomResultTables Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.GetSegmentExport
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminGetPlayersInSegmentExportRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminGetPlayersInSegmentExportResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::GetSegmentExport(const struct FAdminGetPlayersInSegmentExportRequest& Request, TDelegate<void(const struct FAdminGetPlayersInSegmentExportResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "GetSegmentExport");

	Params::PlayFabAdminAPI_GetSegmentExport Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.GetSegments
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminGetSegmentsRequest&  Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminGetSegmentsResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::GetSegments(const struct FAdminGetSegmentsRequest& Request, TDelegate<void(const struct FAdminGetSegmentsResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "GetSegments");

	Params::PlayFabAdminAPI_GetSegments Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.GetStoreItems
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminGetStoreItemsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminGetStoreItemsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::GetStoreItems(const struct FAdminGetStoreItemsRequest& Request, TDelegate<void(const struct FAdminGetStoreItemsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "GetStoreItems");

	Params::PlayFabAdminAPI_GetStoreItems Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.GetTaskInstances
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminGetTaskInstancesRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminGetTaskInstancesResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::GetTaskInstances(const struct FAdminGetTaskInstancesRequest& Request, TDelegate<void(const struct FAdminGetTaskInstancesResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "GetTaskInstances");

	Params::PlayFabAdminAPI_GetTaskInstances Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.GetTasks
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminGetTasksRequest&     Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminGetTasksResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::GetTasks(const struct FAdminGetTasksRequest& Request, TDelegate<void(const struct FAdminGetTasksResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "GetTasks");

	Params::PlayFabAdminAPI_GetTasks Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.GetTitleData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminGetTitleDataRequest& Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminGetTitleDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::GetTitleData(const struct FAdminGetTitleDataRequest& Request, TDelegate<void(const struct FAdminGetTitleDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "GetTitleData");

	Params::PlayFabAdminAPI_GetTitleData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.GetTitleInternalData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminGetTitleDataRequest& Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminGetTitleDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::GetTitleInternalData(const struct FAdminGetTitleDataRequest& Request, TDelegate<void(const struct FAdminGetTitleDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "GetTitleInternalData");

	Params::PlayFabAdminAPI_GetTitleInternalData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.GetUserAccountInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminLookupUserAccountInfoRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminLookupUserAccountInfoResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::GetUserAccountInfo(const struct FAdminLookupUserAccountInfoRequest& Request, TDelegate<void(const struct FAdminLookupUserAccountInfoResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "GetUserAccountInfo");

	Params::PlayFabAdminAPI_GetUserAccountInfo Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.GetUserBans
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminGetUserBansRequest&  Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminGetUserBansResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::GetUserBans(const struct FAdminGetUserBansRequest& Request, TDelegate<void(const struct FAdminGetUserBansResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "GetUserBans");

	Params::PlayFabAdminAPI_GetUserBans Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.GetUserData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminGetUserDataRequest&  Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminGetUserDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::GetUserData(const struct FAdminGetUserDataRequest& Request, TDelegate<void(const struct FAdminGetUserDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "GetUserData");

	Params::PlayFabAdminAPI_GetUserData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.GetUserInternalData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminGetUserDataRequest&  Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminGetUserDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::GetUserInternalData(const struct FAdminGetUserDataRequest& Request, TDelegate<void(const struct FAdminGetUserDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "GetUserInternalData");

	Params::PlayFabAdminAPI_GetUserInternalData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.GetUserInventory
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminGetUserInventoryRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminGetUserInventoryResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::GetUserInventory(const struct FAdminGetUserInventoryRequest& Request, TDelegate<void(const struct FAdminGetUserInventoryResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "GetUserInventory");

	Params::PlayFabAdminAPI_GetUserInventory Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.GetUserPublisherData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminGetUserDataRequest&  Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminGetUserDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::GetUserPublisherData(const struct FAdminGetUserDataRequest& Request, TDelegate<void(const struct FAdminGetUserDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "GetUserPublisherData");

	Params::PlayFabAdminAPI_GetUserPublisherData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.GetUserPublisherInternalData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminGetUserDataRequest&  Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminGetUserDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::GetUserPublisherInternalData(const struct FAdminGetUserDataRequest& Request, TDelegate<void(const struct FAdminGetUserDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "GetUserPublisherInternalData");

	Params::PlayFabAdminAPI_GetUserPublisherInternalData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.GetUserPublisherReadOnlyData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminGetUserDataRequest&  Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminGetUserDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::GetUserPublisherReadOnlyData(const struct FAdminGetUserDataRequest& Request, TDelegate<void(const struct FAdminGetUserDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "GetUserPublisherReadOnlyData");

	Params::PlayFabAdminAPI_GetUserPublisherReadOnlyData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.GetUserReadOnlyData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminGetUserDataRequest&  Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminGetUserDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::GetUserReadOnlyData(const struct FAdminGetUserDataRequest& Request, TDelegate<void(const struct FAdminGetUserDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "GetUserReadOnlyData");

	Params::PlayFabAdminAPI_GetUserReadOnlyData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.GrantItemsToUsers
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminGrantItemsToUsersRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminGrantItemsToUsersResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::GrantItemsToUsers(const struct FAdminGrantItemsToUsersRequest& Request, TDelegate<void(const struct FAdminGrantItemsToUsersResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "GrantItemsToUsers");

	Params::PlayFabAdminAPI_GrantItemsToUsers Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.IncrementLimitedEditionItemAvailability
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminIncrementLimitedEditionItemAvailabilityRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminIncrementLimitedEditionItemAvailabilityResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::IncrementLimitedEditionItemAvailability(const struct FAdminIncrementLimitedEditionItemAvailabilityRequest& Request, TDelegate<void(const struct FAdminIncrementLimitedEditionItemAvailabilityResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "IncrementLimitedEditionItemAvailability");

	Params::PlayFabAdminAPI_IncrementLimitedEditionItemAvailability Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.IncrementPlayerStatisticVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminIncrementPlayerStatisticVersionRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminIncrementPlayerStatisticVersionResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::IncrementPlayerStatisticVersion(const struct FAdminIncrementPlayerStatisticVersionRequest& Request, TDelegate<void(const struct FAdminIncrementPlayerStatisticVersionResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "IncrementPlayerStatisticVersion");

	Params::PlayFabAdminAPI_IncrementPlayerStatisticVersion Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.ListOpenIdConnection
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminListOpenIdConnectionRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminListOpenIdConnectionResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::ListOpenIdConnection(const struct FAdminListOpenIdConnectionRequest& Request, TDelegate<void(const struct FAdminListOpenIdConnectionResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "ListOpenIdConnection");

	Params::PlayFabAdminAPI_ListOpenIdConnection Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.ListVirtualCurrencyTypes
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminListVirtualCurrencyTypesRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminListVirtualCurrencyTypesResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::ListVirtualCurrencyTypes(const struct FAdminListVirtualCurrencyTypesRequest& Request, TDelegate<void(const struct FAdminListVirtualCurrencyTypesResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "ListVirtualCurrencyTypes");

	Params::PlayFabAdminAPI_ListVirtualCurrencyTypes Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.ModifyServerBuild
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminModifyServerBuildRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminModifyServerBuildResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::ModifyServerBuild(const struct FAdminModifyServerBuildRequest& Request, TDelegate<void(const struct FAdminModifyServerBuildResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "ModifyServerBuild");

	Params::PlayFabAdminAPI_ModifyServerBuild Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.RefundPurchase
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminRefundPurchaseRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminRefundPurchaseResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::RefundPurchase(const struct FAdminRefundPurchaseRequest& Request, TDelegate<void(const struct FAdminRefundPurchaseResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "RefundPurchase");

	Params::PlayFabAdminAPI_RefundPurchase Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.RemovePlayerTag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminRemovePlayerTagRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminRemovePlayerTagResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::RemovePlayerTag(const struct FAdminRemovePlayerTagRequest& Request, TDelegate<void(const struct FAdminRemovePlayerTagResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "RemovePlayerTag");

	Params::PlayFabAdminAPI_RemovePlayerTag Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.RemoveVirtualCurrencyTypes
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminRemoveVirtualCurrencyTypesRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminBlankResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::RemoveVirtualCurrencyTypes(const struct FAdminRemoveVirtualCurrencyTypesRequest& Request, TDelegate<void(const struct FAdminBlankResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "RemoveVirtualCurrencyTypes");

	Params::PlayFabAdminAPI_RemoveVirtualCurrencyTypes Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.ResetCharacterStatistics
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminResetCharacterStatisticsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminResetCharacterStatisticsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::ResetCharacterStatistics(const struct FAdminResetCharacterStatisticsRequest& Request, TDelegate<void(const struct FAdminResetCharacterStatisticsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "ResetCharacterStatistics");

	Params::PlayFabAdminAPI_ResetCharacterStatistics Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.ResetPassword
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminResetPasswordRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminResetPasswordResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::ResetPassword(const struct FAdminResetPasswordRequest& Request, TDelegate<void(const struct FAdminResetPasswordResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "ResetPassword");

	Params::PlayFabAdminAPI_ResetPassword Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.ResetUserStatistics
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminResetUserStatisticsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminResetUserStatisticsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::ResetUserStatistics(const struct FAdminResetUserStatisticsRequest& Request, TDelegate<void(const struct FAdminResetUserStatisticsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "ResetUserStatistics");

	Params::PlayFabAdminAPI_ResetUserStatistics Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.ResolvePurchaseDispute
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminResolvePurchaseDisputeRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminResolvePurchaseDisputeResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::ResolvePurchaseDispute(const struct FAdminResolvePurchaseDisputeRequest& Request, TDelegate<void(const struct FAdminResolvePurchaseDisputeResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "ResolvePurchaseDispute");

	Params::PlayFabAdminAPI_ResolvePurchaseDispute Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.RevokeAllBansForUser
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminRevokeAllBansForUserRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminRevokeAllBansForUserResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::RevokeAllBansForUser(const struct FAdminRevokeAllBansForUserRequest& Request, TDelegate<void(const struct FAdminRevokeAllBansForUserResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "RevokeAllBansForUser");

	Params::PlayFabAdminAPI_RevokeAllBansForUser Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.RevokeBans
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminRevokeBansRequest&   Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminRevokeBansResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::RevokeBans(const struct FAdminRevokeBansRequest& Request, TDelegate<void(const struct FAdminRevokeBansResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "RevokeBans");

	Params::PlayFabAdminAPI_RevokeBans Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.RevokeInventoryItem
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminRevokeInventoryItemRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminRevokeInventoryResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::RevokeInventoryItem(const struct FAdminRevokeInventoryItemRequest& Request, TDelegate<void(const struct FAdminRevokeInventoryResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "RevokeInventoryItem");

	Params::PlayFabAdminAPI_RevokeInventoryItem Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.RevokeInventoryItems
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminRevokeInventoryItemsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminRevokeInventoryItemsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::RevokeInventoryItems(const struct FAdminRevokeInventoryItemsRequest& Request, TDelegate<void(const struct FAdminRevokeInventoryItemsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "RevokeInventoryItems");

	Params::PlayFabAdminAPI_RevokeInventoryItems Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.RunTask
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminRunTaskRequest&      Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminRunTaskResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::RunTask(const struct FAdminRunTaskRequest& Request, TDelegate<void(const struct FAdminRunTaskResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "RunTask");

	Params::PlayFabAdminAPI_RunTask Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.SendAccountRecoveryEmail
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminSendAccountRecoveryEmailRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminSendAccountRecoveryEmailResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::SendAccountRecoveryEmail(const struct FAdminSendAccountRecoveryEmailRequest& Request, TDelegate<void(const struct FAdminSendAccountRecoveryEmailResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "SendAccountRecoveryEmail");

	Params::PlayFabAdminAPI_SendAccountRecoveryEmail Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.SetCatalogItems
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminUpdateCatalogItemsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminUpdateCatalogItemsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::SetCatalogItems(const struct FAdminUpdateCatalogItemsRequest& Request, TDelegate<void(const struct FAdminUpdateCatalogItemsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "SetCatalogItems");

	Params::PlayFabAdminAPI_SetCatalogItems Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.SetMembershipOverride
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminSetMembershipOverrideRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminSetMembershipOverrideResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::SetMembershipOverride(const struct FAdminSetMembershipOverrideRequest& Request, TDelegate<void(const struct FAdminSetMembershipOverrideResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "SetMembershipOverride");

	Params::PlayFabAdminAPI_SetMembershipOverride Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.SetPlayerSecret
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminSetPlayerSecretRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminSetPlayerSecretResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::SetPlayerSecret(const struct FAdminSetPlayerSecretRequest& Request, TDelegate<void(const struct FAdminSetPlayerSecretResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "SetPlayerSecret");

	Params::PlayFabAdminAPI_SetPlayerSecret Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.SetPublishedRevision
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminSetPublishedRevisionRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminSetPublishedRevisionResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::SetPublishedRevision(const struct FAdminSetPublishedRevisionRequest& Request, TDelegate<void(const struct FAdminSetPublishedRevisionResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "SetPublishedRevision");

	Params::PlayFabAdminAPI_SetPublishedRevision Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.SetPublisherData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminSetPublisherDataRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminSetPublisherDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::SetPublisherData(const struct FAdminSetPublisherDataRequest& Request, TDelegate<void(const struct FAdminSetPublisherDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "SetPublisherData");

	Params::PlayFabAdminAPI_SetPublisherData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.SetStoreItems
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminUpdateStoreItemsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminUpdateStoreItemsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::SetStoreItems(const struct FAdminUpdateStoreItemsRequest& Request, TDelegate<void(const struct FAdminUpdateStoreItemsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "SetStoreItems");

	Params::PlayFabAdminAPI_SetStoreItems Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.SetTitleData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminSetTitleDataRequest& Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminSetTitleDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::SetTitleData(const struct FAdminSetTitleDataRequest& Request, TDelegate<void(const struct FAdminSetTitleDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "SetTitleData");

	Params::PlayFabAdminAPI_SetTitleData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.SetTitleDataAndOverrides
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminSetTitleDataAndOverridesRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminSetTitleDataAndOverridesResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::SetTitleDataAndOverrides(const struct FAdminSetTitleDataAndOverridesRequest& Request, TDelegate<void(const struct FAdminSetTitleDataAndOverridesResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "SetTitleDataAndOverrides");

	Params::PlayFabAdminAPI_SetTitleDataAndOverrides Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.SetTitleInternalData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminSetTitleDataRequest& Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminSetTitleDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::SetTitleInternalData(const struct FAdminSetTitleDataRequest& Request, TDelegate<void(const struct FAdminSetTitleDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "SetTitleInternalData");

	Params::PlayFabAdminAPI_SetTitleInternalData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.SetupPushNotification
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminSetupPushNotificationRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminSetupPushNotificationResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::SetupPushNotification(const struct FAdminSetupPushNotificationRequest& Request, TDelegate<void(const struct FAdminSetupPushNotificationResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "SetupPushNotification");

	Params::PlayFabAdminAPI_SetupPushNotification Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.SubtractUserVirtualCurrency
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminSubtractUserVirtualCurrencyRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminModifyUserVirtualCurrencyResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::SubtractUserVirtualCurrency(const struct FAdminSubtractUserVirtualCurrencyRequest& Request, TDelegate<void(const struct FAdminModifyUserVirtualCurrencyResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "SubtractUserVirtualCurrency");

	Params::PlayFabAdminAPI_SubtractUserVirtualCurrency Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.UpdateBans
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminUpdateBansRequest&   Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminUpdateBansResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::UpdateBans(const struct FAdminUpdateBansRequest& Request, TDelegate<void(const struct FAdminUpdateBansResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "UpdateBans");

	Params::PlayFabAdminAPI_UpdateBans Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.UpdateCatalogItems
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminUpdateCatalogItemsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminUpdateCatalogItemsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::UpdateCatalogItems(const struct FAdminUpdateCatalogItemsRequest& Request, TDelegate<void(const struct FAdminUpdateCatalogItemsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "UpdateCatalogItems");

	Params::PlayFabAdminAPI_UpdateCatalogItems Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.UpdateCloudScript
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminUpdateCloudScriptRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminUpdateCloudScriptResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::UpdateCloudScript(const struct FAdminUpdateCloudScriptRequest& Request, TDelegate<void(const struct FAdminUpdateCloudScriptResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "UpdateCloudScript");

	Params::PlayFabAdminAPI_UpdateCloudScript Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.UpdateOpenIdConnection
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminUpdateOpenIdConnectionRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::UpdateOpenIdConnection(const struct FAdminUpdateOpenIdConnectionRequest& Request, TDelegate<void(const struct FAdminEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "UpdateOpenIdConnection");

	Params::PlayFabAdminAPI_UpdateOpenIdConnection Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.UpdatePlayerSharedSecret
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminUpdatePlayerSharedSecretRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminUpdatePlayerSharedSecretResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::UpdatePlayerSharedSecret(const struct FAdminUpdatePlayerSharedSecretRequest& Request, TDelegate<void(const struct FAdminUpdatePlayerSharedSecretResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "UpdatePlayerSharedSecret");

	Params::PlayFabAdminAPI_UpdatePlayerSharedSecret Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.UpdatePlayerStatisticDefinition
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminUpdatePlayerStatisticDefinitionRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminUpdatePlayerStatisticDefinitionResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::UpdatePlayerStatisticDefinition(const struct FAdminUpdatePlayerStatisticDefinitionRequest& Request, TDelegate<void(const struct FAdminUpdatePlayerStatisticDefinitionResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "UpdatePlayerStatisticDefinition");

	Params::PlayFabAdminAPI_UpdatePlayerStatisticDefinition Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.UpdatePolicy
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminUpdatePolicyRequest& Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminUpdatePolicyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::UpdatePolicy(const struct FAdminUpdatePolicyRequest& Request, TDelegate<void(const struct FAdminUpdatePolicyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "UpdatePolicy");

	Params::PlayFabAdminAPI_UpdatePolicy Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.UpdateRandomResultTables
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminUpdateRandomResultTablesRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminUpdateRandomResultTablesResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::UpdateRandomResultTables(const struct FAdminUpdateRandomResultTablesRequest& Request, TDelegate<void(const struct FAdminUpdateRandomResultTablesResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "UpdateRandomResultTables");

	Params::PlayFabAdminAPI_UpdateRandomResultTables Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.UpdateSegment
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminUpdateSegmentRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminUpdateSegmentResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::UpdateSegment(const struct FAdminUpdateSegmentRequest& Request, TDelegate<void(const struct FAdminUpdateSegmentResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "UpdateSegment");

	Params::PlayFabAdminAPI_UpdateSegment Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.UpdateStoreItems
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminUpdateStoreItemsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminUpdateStoreItemsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::UpdateStoreItems(const struct FAdminUpdateStoreItemsRequest& Request, TDelegate<void(const struct FAdminUpdateStoreItemsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "UpdateStoreItems");

	Params::PlayFabAdminAPI_UpdateStoreItems Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.UpdateTask
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminUpdateTaskRequest&   Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::UpdateTask(const struct FAdminUpdateTaskRequest& Request, TDelegate<void(const struct FAdminEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "UpdateTask");

	Params::PlayFabAdminAPI_UpdateTask Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.UpdateUserData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminUpdateUserDataRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminUpdateUserDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::UpdateUserData(const struct FAdminUpdateUserDataRequest& Request, TDelegate<void(const struct FAdminUpdateUserDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "UpdateUserData");

	Params::PlayFabAdminAPI_UpdateUserData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.UpdateUserInternalData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminUpdateUserInternalDataRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminUpdateUserDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::UpdateUserInternalData(const struct FAdminUpdateUserInternalDataRequest& Request, TDelegate<void(const struct FAdminUpdateUserDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "UpdateUserInternalData");

	Params::PlayFabAdminAPI_UpdateUserInternalData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.UpdateUserPublisherData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminUpdateUserDataRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminUpdateUserDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::UpdateUserPublisherData(const struct FAdminUpdateUserDataRequest& Request, TDelegate<void(const struct FAdminUpdateUserDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "UpdateUserPublisherData");

	Params::PlayFabAdminAPI_UpdateUserPublisherData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.UpdateUserPublisherInternalData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminUpdateUserInternalDataRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminUpdateUserDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::UpdateUserPublisherInternalData(const struct FAdminUpdateUserInternalDataRequest& Request, TDelegate<void(const struct FAdminUpdateUserDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "UpdateUserPublisherInternalData");

	Params::PlayFabAdminAPI_UpdateUserPublisherInternalData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.UpdateUserPublisherReadOnlyData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminUpdateUserDataRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminUpdateUserDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::UpdateUserPublisherReadOnlyData(const struct FAdminUpdateUserDataRequest& Request, TDelegate<void(const struct FAdminUpdateUserDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "UpdateUserPublisherReadOnlyData");

	Params::PlayFabAdminAPI_UpdateUserPublisherReadOnlyData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.UpdateUserReadOnlyData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminUpdateUserDataRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminUpdateUserDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::UpdateUserReadOnlyData(const struct FAdminUpdateUserDataRequest& Request, TDelegate<void(const struct FAdminUpdateUserDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "UpdateUserReadOnlyData");

	Params::PlayFabAdminAPI_UpdateUserReadOnlyData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.UpdateUserTitleDisplayName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAdminUpdateUserTitleDisplayNameRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAdminUpdateUserTitleDisplayNameResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAdminAPI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAdminAPI* UPlayFabAdminAPI::UpdateUserTitleDisplayName(const struct FAdminUpdateUserTitleDisplayNameRequest& Request, TDelegate<void(const struct FAdminUpdateUserTitleDisplayNameResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminAPI", "UpdateUserTitleDisplayName");

	Params::PlayFabAdminAPI_UpdateUserTitleDisplayName Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminAPI.HelperAbortTaskInstance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperAbortTaskInstance(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperAbortTaskInstance");

	Params::PlayFabAdminAPI_HelperAbortTaskInstance Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperAddLocalizedNews
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperAddLocalizedNews(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperAddLocalizedNews");

	Params::PlayFabAdminAPI_HelperAddLocalizedNews Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperAddNews
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperAddNews(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperAddNews");

	Params::PlayFabAdminAPI_HelperAddNews Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperAddPlayerTag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperAddPlayerTag(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperAddPlayerTag");

	Params::PlayFabAdminAPI_HelperAddPlayerTag Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperAddUserVirtualCurrency
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperAddUserVirtualCurrency(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperAddUserVirtualCurrency");

	Params::PlayFabAdminAPI_HelperAddUserVirtualCurrency Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperAddVirtualCurrencyTypes
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperAddVirtualCurrencyTypes(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperAddVirtualCurrencyTypes");

	Params::PlayFabAdminAPI_HelperAddVirtualCurrencyTypes Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperBanUsers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperBanUsers(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperBanUsers");

	Params::PlayFabAdminAPI_HelperBanUsers Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperCheckLimitedEditionItemAvailability
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperCheckLimitedEditionItemAvailability(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperCheckLimitedEditionItemAvailability");

	Params::PlayFabAdminAPI_HelperCheckLimitedEditionItemAvailability Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperCreateActionsOnPlayersInSegmentTask
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperCreateActionsOnPlayersInSegmentTask(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperCreateActionsOnPlayersInSegmentTask");

	Params::PlayFabAdminAPI_HelperCreateActionsOnPlayersInSegmentTask Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperCreateCloudScriptTask
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperCreateCloudScriptTask(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperCreateCloudScriptTask");

	Params::PlayFabAdminAPI_HelperCreateCloudScriptTask Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperCreateInsightsScheduledScalingTask
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperCreateInsightsScheduledScalingTask(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperCreateInsightsScheduledScalingTask");

	Params::PlayFabAdminAPI_HelperCreateInsightsScheduledScalingTask Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperCreateOpenIdConnection
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperCreateOpenIdConnection(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperCreateOpenIdConnection");

	Params::PlayFabAdminAPI_HelperCreateOpenIdConnection Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperCreatePlayerSharedSecret
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperCreatePlayerSharedSecret(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperCreatePlayerSharedSecret");

	Params::PlayFabAdminAPI_HelperCreatePlayerSharedSecret Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperCreatePlayerStatisticDefinition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperCreatePlayerStatisticDefinition(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperCreatePlayerStatisticDefinition");

	Params::PlayFabAdminAPI_HelperCreatePlayerStatisticDefinition Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperCreateSegment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperCreateSegment(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperCreateSegment");

	Params::PlayFabAdminAPI_HelperCreateSegment Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperDeleteContent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperDeleteContent(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperDeleteContent");

	Params::PlayFabAdminAPI_HelperDeleteContent Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperDeleteMasterPlayerAccount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperDeleteMasterPlayerAccount(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperDeleteMasterPlayerAccount");

	Params::PlayFabAdminAPI_HelperDeleteMasterPlayerAccount Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperDeleteMembershipSubscription
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperDeleteMembershipSubscription(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperDeleteMembershipSubscription");

	Params::PlayFabAdminAPI_HelperDeleteMembershipSubscription Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperDeleteOpenIdConnection
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperDeleteOpenIdConnection(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperDeleteOpenIdConnection");

	Params::PlayFabAdminAPI_HelperDeleteOpenIdConnection Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperDeletePlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperDeletePlayer(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperDeletePlayer");

	Params::PlayFabAdminAPI_HelperDeletePlayer Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperDeletePlayerSharedSecret
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperDeletePlayerSharedSecret(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperDeletePlayerSharedSecret");

	Params::PlayFabAdminAPI_HelperDeletePlayerSharedSecret Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperDeleteSegment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperDeleteSegment(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperDeleteSegment");

	Params::PlayFabAdminAPI_HelperDeleteSegment Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperDeleteStore
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperDeleteStore(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperDeleteStore");

	Params::PlayFabAdminAPI_HelperDeleteStore Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperDeleteTask
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperDeleteTask(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperDeleteTask");

	Params::PlayFabAdminAPI_HelperDeleteTask Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperDeleteTitle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperDeleteTitle(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperDeleteTitle");

	Params::PlayFabAdminAPI_HelperDeleteTitle Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperDeleteTitleDataOverride
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperDeleteTitleDataOverride(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperDeleteTitleDataOverride");

	Params::PlayFabAdminAPI_HelperDeleteTitleDataOverride Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperExportMasterPlayerData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperExportMasterPlayerData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperExportMasterPlayerData");

	Params::PlayFabAdminAPI_HelperExportMasterPlayerData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperExportPlayersInSegment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperExportPlayersInSegment(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperExportPlayersInSegment");

	Params::PlayFabAdminAPI_HelperExportPlayersInSegment Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperGetActionsOnPlayersInSegmentTaskInstance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperGetActionsOnPlayersInSegmentTaskInstance(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperGetActionsOnPlayersInSegmentTaskInstance");

	Params::PlayFabAdminAPI_HelperGetActionsOnPlayersInSegmentTaskInstance Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperGetAllSegments
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperGetAllSegments(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperGetAllSegments");

	Params::PlayFabAdminAPI_HelperGetAllSegments Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperGetCatalogItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperGetCatalogItems(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperGetCatalogItems");

	Params::PlayFabAdminAPI_HelperGetCatalogItems Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperGetCloudScriptRevision
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperGetCloudScriptRevision(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperGetCloudScriptRevision");

	Params::PlayFabAdminAPI_HelperGetCloudScriptRevision Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperGetCloudScriptTaskInstance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperGetCloudScriptTaskInstance(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperGetCloudScriptTaskInstance");

	Params::PlayFabAdminAPI_HelperGetCloudScriptTaskInstance Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperGetCloudScriptVersions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperGetCloudScriptVersions(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperGetCloudScriptVersions");

	Params::PlayFabAdminAPI_HelperGetCloudScriptVersions Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperGetContentList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperGetContentList(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperGetContentList");

	Params::PlayFabAdminAPI_HelperGetContentList Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperGetContentUploadUrl
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperGetContentUploadUrl(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperGetContentUploadUrl");

	Params::PlayFabAdminAPI_HelperGetContentUploadUrl Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperGetDataReport
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperGetDataReport(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperGetDataReport");

	Params::PlayFabAdminAPI_HelperGetDataReport Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperGetMatchmakerGameInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperGetMatchmakerGameInfo(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperGetMatchmakerGameInfo");

	Params::PlayFabAdminAPI_HelperGetMatchmakerGameInfo Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperGetMatchmakerGameModes
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperGetMatchmakerGameModes(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperGetMatchmakerGameModes");

	Params::PlayFabAdminAPI_HelperGetMatchmakerGameModes Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperGetPlayedTitleList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperGetPlayedTitleList(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperGetPlayedTitleList");

	Params::PlayFabAdminAPI_HelperGetPlayedTitleList Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperGetPlayerIdFromAuthToken
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperGetPlayerIdFromAuthToken(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperGetPlayerIdFromAuthToken");

	Params::PlayFabAdminAPI_HelperGetPlayerIdFromAuthToken Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperGetPlayerProfile
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperGetPlayerProfile(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperGetPlayerProfile");

	Params::PlayFabAdminAPI_HelperGetPlayerProfile Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperGetPlayerSegments
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperGetPlayerSegments(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperGetPlayerSegments");

	Params::PlayFabAdminAPI_HelperGetPlayerSegments Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperGetPlayerSharedSecrets
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperGetPlayerSharedSecrets(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperGetPlayerSharedSecrets");

	Params::PlayFabAdminAPI_HelperGetPlayerSharedSecrets Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperGetPlayersInSegment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperGetPlayersInSegment(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperGetPlayersInSegment");

	Params::PlayFabAdminAPI_HelperGetPlayersInSegment Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperGetPlayerStatisticDefinitions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperGetPlayerStatisticDefinitions(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperGetPlayerStatisticDefinitions");

	Params::PlayFabAdminAPI_HelperGetPlayerStatisticDefinitions Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperGetPlayerStatisticVersions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperGetPlayerStatisticVersions(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperGetPlayerStatisticVersions");

	Params::PlayFabAdminAPI_HelperGetPlayerStatisticVersions Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperGetPlayerTags
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperGetPlayerTags(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperGetPlayerTags");

	Params::PlayFabAdminAPI_HelperGetPlayerTags Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperGetPolicy
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperGetPolicy(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperGetPolicy");

	Params::PlayFabAdminAPI_HelperGetPolicy Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperGetPublisherData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperGetPublisherData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperGetPublisherData");

	Params::PlayFabAdminAPI_HelperGetPublisherData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperGetRandomResultTables
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperGetRandomResultTables(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperGetRandomResultTables");

	Params::PlayFabAdminAPI_HelperGetRandomResultTables Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperGetSegmentExport
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperGetSegmentExport(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperGetSegmentExport");

	Params::PlayFabAdminAPI_HelperGetSegmentExport Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperGetSegments
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperGetSegments(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperGetSegments");

	Params::PlayFabAdminAPI_HelperGetSegments Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperGetStoreItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperGetStoreItems(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperGetStoreItems");

	Params::PlayFabAdminAPI_HelperGetStoreItems Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperGetTaskInstances
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperGetTaskInstances(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperGetTaskInstances");

	Params::PlayFabAdminAPI_HelperGetTaskInstances Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperGetTasks
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperGetTasks(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperGetTasks");

	Params::PlayFabAdminAPI_HelperGetTasks Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperGetTitleData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperGetTitleData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperGetTitleData");

	Params::PlayFabAdminAPI_HelperGetTitleData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperGetTitleInternalData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperGetTitleInternalData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperGetTitleInternalData");

	Params::PlayFabAdminAPI_HelperGetTitleInternalData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperGetUserAccountInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperGetUserAccountInfo(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperGetUserAccountInfo");

	Params::PlayFabAdminAPI_HelperGetUserAccountInfo Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperGetUserBans
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperGetUserBans(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperGetUserBans");

	Params::PlayFabAdminAPI_HelperGetUserBans Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperGetUserData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperGetUserData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperGetUserData");

	Params::PlayFabAdminAPI_HelperGetUserData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperGetUserInternalData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperGetUserInternalData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperGetUserInternalData");

	Params::PlayFabAdminAPI_HelperGetUserInternalData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperGetUserInventory
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperGetUserInventory(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperGetUserInventory");

	Params::PlayFabAdminAPI_HelperGetUserInventory Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperGetUserPublisherData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperGetUserPublisherData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperGetUserPublisherData");

	Params::PlayFabAdminAPI_HelperGetUserPublisherData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperGetUserPublisherInternalData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperGetUserPublisherInternalData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperGetUserPublisherInternalData");

	Params::PlayFabAdminAPI_HelperGetUserPublisherInternalData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperGetUserPublisherReadOnlyData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperGetUserPublisherReadOnlyData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperGetUserPublisherReadOnlyData");

	Params::PlayFabAdminAPI_HelperGetUserPublisherReadOnlyData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperGetUserReadOnlyData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperGetUserReadOnlyData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperGetUserReadOnlyData");

	Params::PlayFabAdminAPI_HelperGetUserReadOnlyData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperGrantItemsToUsers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperGrantItemsToUsers(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperGrantItemsToUsers");

	Params::PlayFabAdminAPI_HelperGrantItemsToUsers Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperIncrementLimitedEditionItemAvailability
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperIncrementLimitedEditionItemAvailability(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperIncrementLimitedEditionItemAvailability");

	Params::PlayFabAdminAPI_HelperIncrementLimitedEditionItemAvailability Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperIncrementPlayerStatisticVersion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperIncrementPlayerStatisticVersion(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperIncrementPlayerStatisticVersion");

	Params::PlayFabAdminAPI_HelperIncrementPlayerStatisticVersion Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperListOpenIdConnection
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperListOpenIdConnection(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperListOpenIdConnection");

	Params::PlayFabAdminAPI_HelperListOpenIdConnection Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperListVirtualCurrencyTypes
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperListVirtualCurrencyTypes(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperListVirtualCurrencyTypes");

	Params::PlayFabAdminAPI_HelperListVirtualCurrencyTypes Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperModifyServerBuild
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperModifyServerBuild(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperModifyServerBuild");

	Params::PlayFabAdminAPI_HelperModifyServerBuild Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperRefundPurchase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperRefundPurchase(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperRefundPurchase");

	Params::PlayFabAdminAPI_HelperRefundPurchase Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperRemovePlayerTag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperRemovePlayerTag(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperRemovePlayerTag");

	Params::PlayFabAdminAPI_HelperRemovePlayerTag Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperRemoveVirtualCurrencyTypes
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperRemoveVirtualCurrencyTypes(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperRemoveVirtualCurrencyTypes");

	Params::PlayFabAdminAPI_HelperRemoveVirtualCurrencyTypes Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperResetCharacterStatistics
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperResetCharacterStatistics(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperResetCharacterStatistics");

	Params::PlayFabAdminAPI_HelperResetCharacterStatistics Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperResetPassword
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperResetPassword(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperResetPassword");

	Params::PlayFabAdminAPI_HelperResetPassword Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperResetUserStatistics
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperResetUserStatistics(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperResetUserStatistics");

	Params::PlayFabAdminAPI_HelperResetUserStatistics Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperResolvePurchaseDispute
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperResolvePurchaseDispute(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperResolvePurchaseDispute");

	Params::PlayFabAdminAPI_HelperResolvePurchaseDispute Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperRevokeAllBansForUser
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperRevokeAllBansForUser(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperRevokeAllBansForUser");

	Params::PlayFabAdminAPI_HelperRevokeAllBansForUser Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperRevokeBans
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperRevokeBans(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperRevokeBans");

	Params::PlayFabAdminAPI_HelperRevokeBans Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperRevokeInventoryItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperRevokeInventoryItem(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperRevokeInventoryItem");

	Params::PlayFabAdminAPI_HelperRevokeInventoryItem Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperRevokeInventoryItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperRevokeInventoryItems(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperRevokeInventoryItems");

	Params::PlayFabAdminAPI_HelperRevokeInventoryItems Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperRunTask
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperRunTask(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperRunTask");

	Params::PlayFabAdminAPI_HelperRunTask Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperSendAccountRecoveryEmail
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperSendAccountRecoveryEmail(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperSendAccountRecoveryEmail");

	Params::PlayFabAdminAPI_HelperSendAccountRecoveryEmail Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperSetCatalogItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperSetCatalogItems(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperSetCatalogItems");

	Params::PlayFabAdminAPI_HelperSetCatalogItems Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperSetMembershipOverride
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperSetMembershipOverride(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperSetMembershipOverride");

	Params::PlayFabAdminAPI_HelperSetMembershipOverride Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperSetPlayerSecret
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperSetPlayerSecret(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperSetPlayerSecret");

	Params::PlayFabAdminAPI_HelperSetPlayerSecret Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperSetPublishedRevision
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperSetPublishedRevision(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperSetPublishedRevision");

	Params::PlayFabAdminAPI_HelperSetPublishedRevision Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperSetPublisherData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperSetPublisherData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperSetPublisherData");

	Params::PlayFabAdminAPI_HelperSetPublisherData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperSetStoreItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperSetStoreItems(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperSetStoreItems");

	Params::PlayFabAdminAPI_HelperSetStoreItems Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperSetTitleData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperSetTitleData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperSetTitleData");

	Params::PlayFabAdminAPI_HelperSetTitleData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperSetTitleDataAndOverrides
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperSetTitleDataAndOverrides(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperSetTitleDataAndOverrides");

	Params::PlayFabAdminAPI_HelperSetTitleDataAndOverrides Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperSetTitleInternalData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperSetTitleInternalData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperSetTitleInternalData");

	Params::PlayFabAdminAPI_HelperSetTitleInternalData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperSetupPushNotification
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperSetupPushNotification(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperSetupPushNotification");

	Params::PlayFabAdminAPI_HelperSetupPushNotification Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperSubtractUserVirtualCurrency
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperSubtractUserVirtualCurrency(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperSubtractUserVirtualCurrency");

	Params::PlayFabAdminAPI_HelperSubtractUserVirtualCurrency Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperUpdateBans
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperUpdateBans(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperUpdateBans");

	Params::PlayFabAdminAPI_HelperUpdateBans Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperUpdateCatalogItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperUpdateCatalogItems(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperUpdateCatalogItems");

	Params::PlayFabAdminAPI_HelperUpdateCatalogItems Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperUpdateCloudScript
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperUpdateCloudScript(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperUpdateCloudScript");

	Params::PlayFabAdminAPI_HelperUpdateCloudScript Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperUpdateOpenIdConnection
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperUpdateOpenIdConnection(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperUpdateOpenIdConnection");

	Params::PlayFabAdminAPI_HelperUpdateOpenIdConnection Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperUpdatePlayerSharedSecret
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperUpdatePlayerSharedSecret(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperUpdatePlayerSharedSecret");

	Params::PlayFabAdminAPI_HelperUpdatePlayerSharedSecret Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperUpdatePlayerStatisticDefinition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperUpdatePlayerStatisticDefinition(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperUpdatePlayerStatisticDefinition");

	Params::PlayFabAdminAPI_HelperUpdatePlayerStatisticDefinition Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperUpdatePolicy
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperUpdatePolicy(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperUpdatePolicy");

	Params::PlayFabAdminAPI_HelperUpdatePolicy Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperUpdateRandomResultTables
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperUpdateRandomResultTables(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperUpdateRandomResultTables");

	Params::PlayFabAdminAPI_HelperUpdateRandomResultTables Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperUpdateSegment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperUpdateSegment(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperUpdateSegment");

	Params::PlayFabAdminAPI_HelperUpdateSegment Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperUpdateStoreItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperUpdateStoreItems(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperUpdateStoreItems");

	Params::PlayFabAdminAPI_HelperUpdateStoreItems Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperUpdateTask
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperUpdateTask(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperUpdateTask");

	Params::PlayFabAdminAPI_HelperUpdateTask Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperUpdateUserData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperUpdateUserData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperUpdateUserData");

	Params::PlayFabAdminAPI_HelperUpdateUserData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperUpdateUserInternalData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperUpdateUserInternalData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperUpdateUserInternalData");

	Params::PlayFabAdminAPI_HelperUpdateUserInternalData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperUpdateUserPublisherData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperUpdateUserPublisherData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperUpdateUserPublisherData");

	Params::PlayFabAdminAPI_HelperUpdateUserPublisherData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperUpdateUserPublisherInternalData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperUpdateUserPublisherInternalData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperUpdateUserPublisherInternalData");

	Params::PlayFabAdminAPI_HelperUpdateUserPublisherInternalData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperUpdateUserPublisherReadOnlyData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperUpdateUserPublisherReadOnlyData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperUpdateUserPublisherReadOnlyData");

	Params::PlayFabAdminAPI_HelperUpdateUserPublisherReadOnlyData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperUpdateUserReadOnlyData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperUpdateUserReadOnlyData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperUpdateUserReadOnlyData");

	Params::PlayFabAdminAPI_HelperUpdateUserReadOnlyData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminAPI.HelperUpdateUserTitleDisplayName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAdminAPI::HelperUpdateUserTitleDisplayName(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAdminAPI", "HelperUpdateUserTitleDisplayName");

	Params::PlayFabAdminAPI_HelperUpdateUserTitleDisplayName Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeAddLocalizedNewsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminAddLocalizedNewsResult     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAdminAddLocalizedNewsResult UPlayFabAdminModelDecoder::decodeAddLocalizedNewsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeAddLocalizedNewsResultResponse");

	Params::PlayFabAdminModelDecoder_decodeAddLocalizedNewsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeAddNewsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminAddNewsResult              ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminAddNewsResult UPlayFabAdminModelDecoder::decodeAddNewsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeAddNewsResultResponse");

	Params::PlayFabAdminModelDecoder_decodeAddNewsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeAddPlayerTagResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminAddPlayerTagResult         ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAdminAddPlayerTagResult UPlayFabAdminModelDecoder::decodeAddPlayerTagResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeAddPlayerTagResultResponse");

	Params::PlayFabAdminModelDecoder_decodeAddPlayerTagResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeBanUsersResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminBanUsersResult             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminBanUsersResult UPlayFabAdminModelDecoder::decodeBanUsersResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeBanUsersResultResponse");

	Params::PlayFabAdminModelDecoder_decodeBanUsersResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeBlankResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminBlankResult                ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAdminBlankResult UPlayFabAdminModelDecoder::decodeBlankResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeBlankResultResponse");

	Params::PlayFabAdminModelDecoder_decodeBlankResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeCheckLimitedEditionItemAvailabilityResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminCheckLimitedEditionItemAvailabilityResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAdminCheckLimitedEditionItemAvailabilityResult UPlayFabAdminModelDecoder::decodeCheckLimitedEditionItemAvailabilityResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeCheckLimitedEditionItemAvailabilityResultResponse");

	Params::PlayFabAdminModelDecoder_decodeCheckLimitedEditionItemAvailabilityResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeCreatePlayerSharedSecretResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminCreatePlayerSharedSecretResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminCreatePlayerSharedSecretResult UPlayFabAdminModelDecoder::decodeCreatePlayerSharedSecretResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeCreatePlayerSharedSecretResultResponse");

	Params::PlayFabAdminModelDecoder_decodeCreatePlayerSharedSecretResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeCreatePlayerStatisticDefinitionResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminCreatePlayerStatisticDefinitionResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAdminCreatePlayerStatisticDefinitionResult UPlayFabAdminModelDecoder::decodeCreatePlayerStatisticDefinitionResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeCreatePlayerStatisticDefinitionResultResponse");

	Params::PlayFabAdminModelDecoder_decodeCreatePlayerStatisticDefinitionResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeCreateSegmentResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminCreateSegmentResponse      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminCreateSegmentResponse UPlayFabAdminModelDecoder::decodeCreateSegmentResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeCreateSegmentResponseResponse");

	Params::PlayFabAdminModelDecoder_decodeCreateSegmentResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeCreateTaskResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminCreateTaskResult           ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminCreateTaskResult UPlayFabAdminModelDecoder::decodeCreateTaskResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeCreateTaskResultResponse");

	Params::PlayFabAdminModelDecoder_decodeCreateTaskResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeDeleteMasterPlayerAccountResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminDeleteMasterPlayerAccountResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminDeleteMasterPlayerAccountResult UPlayFabAdminModelDecoder::decodeDeleteMasterPlayerAccountResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeDeleteMasterPlayerAccountResultResponse");

	Params::PlayFabAdminModelDecoder_decodeDeleteMasterPlayerAccountResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeDeleteMembershipSubscriptionResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminDeleteMembershipSubscriptionResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAdminDeleteMembershipSubscriptionResult UPlayFabAdminModelDecoder::decodeDeleteMembershipSubscriptionResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeDeleteMembershipSubscriptionResultResponse");

	Params::PlayFabAdminModelDecoder_decodeDeleteMembershipSubscriptionResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeDeletePlayerResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminDeletePlayerResult         ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAdminDeletePlayerResult UPlayFabAdminModelDecoder::decodeDeletePlayerResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeDeletePlayerResultResponse");

	Params::PlayFabAdminModelDecoder_decodeDeletePlayerResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeDeletePlayerSharedSecretResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminDeletePlayerSharedSecretResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAdminDeletePlayerSharedSecretResult UPlayFabAdminModelDecoder::decodeDeletePlayerSharedSecretResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeDeletePlayerSharedSecretResultResponse");

	Params::PlayFabAdminModelDecoder_decodeDeletePlayerSharedSecretResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeDeleteSegmentsResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminDeleteSegmentsResponse     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminDeleteSegmentsResponse UPlayFabAdminModelDecoder::decodeDeleteSegmentsResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeDeleteSegmentsResponseResponse");

	Params::PlayFabAdminModelDecoder_decodeDeleteSegmentsResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeDeleteStoreResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminDeleteStoreResult          ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAdminDeleteStoreResult UPlayFabAdminModelDecoder::decodeDeleteStoreResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeDeleteStoreResultResponse");

	Params::PlayFabAdminModelDecoder_decodeDeleteStoreResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeDeleteTitleDataOverrideResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminDeleteTitleDataOverrideResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAdminDeleteTitleDataOverrideResult UPlayFabAdminModelDecoder::decodeDeleteTitleDataOverrideResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeDeleteTitleDataOverrideResultResponse");

	Params::PlayFabAdminModelDecoder_decodeDeleteTitleDataOverrideResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeDeleteTitleResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminDeleteTitleResult          ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAdminDeleteTitleResult UPlayFabAdminModelDecoder::decodeDeleteTitleResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeDeleteTitleResultResponse");

	Params::PlayFabAdminModelDecoder_decodeDeleteTitleResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeEmptyResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminEmptyResponse              ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAdminEmptyResponse UPlayFabAdminModelDecoder::decodeEmptyResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeEmptyResponseResponse");

	Params::PlayFabAdminModelDecoder_decodeEmptyResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeExportMasterPlayerDataResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminExportMasterPlayerDataResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminExportMasterPlayerDataResult UPlayFabAdminModelDecoder::decodeExportMasterPlayerDataResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeExportMasterPlayerDataResultResponse");

	Params::PlayFabAdminModelDecoder_decodeExportMasterPlayerDataResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeExportPlayersInSegmentResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminExportPlayersInSegmentResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminExportPlayersInSegmentResult UPlayFabAdminModelDecoder::decodeExportPlayersInSegmentResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeExportPlayersInSegmentResultResponse");

	Params::PlayFabAdminModelDecoder_decodeExportPlayersInSegmentResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeGetActionsOnPlayersInSegmentTaskInstanceResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminGetActionsOnPlayersInSegmentTaskInstanceResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAdminGetActionsOnPlayersInSegmentTaskInstanceResult UPlayFabAdminModelDecoder::decodeGetActionsOnPlayersInSegmentTaskInstanceResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeGetActionsOnPlayersInSegmentTaskInstanceResultResponse");

	Params::PlayFabAdminModelDecoder_decodeGetActionsOnPlayersInSegmentTaskInstanceResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeGetAllSegmentsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminGetAllSegmentsResult       ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminGetAllSegmentsResult UPlayFabAdminModelDecoder::decodeGetAllSegmentsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeGetAllSegmentsResultResponse");

	Params::PlayFabAdminModelDecoder_decodeGetAllSegmentsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeGetCatalogItemsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminGetCatalogItemsResult      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminGetCatalogItemsResult UPlayFabAdminModelDecoder::decodeGetCatalogItemsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeGetCatalogItemsResultResponse");

	Params::PlayFabAdminModelDecoder_decodeGetCatalogItemsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeGetCloudScriptRevisionResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminGetCloudScriptRevisionResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminGetCloudScriptRevisionResult UPlayFabAdminModelDecoder::decodeGetCloudScriptRevisionResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeGetCloudScriptRevisionResultResponse");

	Params::PlayFabAdminModelDecoder_decodeGetCloudScriptRevisionResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeGetCloudScriptTaskInstanceResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminGetCloudScriptTaskInstanceResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAdminGetCloudScriptTaskInstanceResult UPlayFabAdminModelDecoder::decodeGetCloudScriptTaskInstanceResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeGetCloudScriptTaskInstanceResultResponse");

	Params::PlayFabAdminModelDecoder_decodeGetCloudScriptTaskInstanceResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeGetCloudScriptVersionsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminGetCloudScriptVersionsResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminGetCloudScriptVersionsResult UPlayFabAdminModelDecoder::decodeGetCloudScriptVersionsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeGetCloudScriptVersionsResultResponse");

	Params::PlayFabAdminModelDecoder_decodeGetCloudScriptVersionsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeGetContentListResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminGetContentListResult       ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminGetContentListResult UPlayFabAdminModelDecoder::decodeGetContentListResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeGetContentListResultResponse");

	Params::PlayFabAdminModelDecoder_decodeGetContentListResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeGetContentUploadUrlResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminGetContentUploadUrlResult  ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminGetContentUploadUrlResult UPlayFabAdminModelDecoder::decodeGetContentUploadUrlResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeGetContentUploadUrlResultResponse");

	Params::PlayFabAdminModelDecoder_decodeGetContentUploadUrlResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeGetDataReportResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminGetDataReportResult        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminGetDataReportResult UPlayFabAdminModelDecoder::decodeGetDataReportResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeGetDataReportResultResponse");

	Params::PlayFabAdminModelDecoder_decodeGetDataReportResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeGetMatchmakerGameInfoResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminGetMatchmakerGameInfoResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminGetMatchmakerGameInfoResult UPlayFabAdminModelDecoder::decodeGetMatchmakerGameInfoResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeGetMatchmakerGameInfoResultResponse");

	Params::PlayFabAdminModelDecoder_decodeGetMatchmakerGameInfoResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeGetMatchmakerGameModesResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminGetMatchmakerGameModesResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminGetMatchmakerGameModesResult UPlayFabAdminModelDecoder::decodeGetMatchmakerGameModesResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeGetMatchmakerGameModesResultResponse");

	Params::PlayFabAdminModelDecoder_decodeGetMatchmakerGameModesResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeGetPlayedTitleListResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminGetPlayedTitleListResult   ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminGetPlayedTitleListResult UPlayFabAdminModelDecoder::decodeGetPlayedTitleListResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeGetPlayedTitleListResultResponse");

	Params::PlayFabAdminModelDecoder_decodeGetPlayedTitleListResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeGetPlayerIdFromAuthTokenResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminGetPlayerIdFromAuthTokenResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminGetPlayerIdFromAuthTokenResult UPlayFabAdminModelDecoder::decodeGetPlayerIdFromAuthTokenResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeGetPlayerIdFromAuthTokenResultResponse");

	Params::PlayFabAdminModelDecoder_decodeGetPlayerIdFromAuthTokenResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeGetPlayerProfileResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminGetPlayerProfileResult     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAdminGetPlayerProfileResult UPlayFabAdminModelDecoder::decodeGetPlayerProfileResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeGetPlayerProfileResultResponse");

	Params::PlayFabAdminModelDecoder_decodeGetPlayerProfileResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeGetPlayerSegmentsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminGetPlayerSegmentsResult    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminGetPlayerSegmentsResult UPlayFabAdminModelDecoder::decodeGetPlayerSegmentsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeGetPlayerSegmentsResultResponse");

	Params::PlayFabAdminModelDecoder_decodeGetPlayerSegmentsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeGetPlayerSharedSecretsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminGetPlayerSharedSecretsResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminGetPlayerSharedSecretsResult UPlayFabAdminModelDecoder::decodeGetPlayerSharedSecretsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeGetPlayerSharedSecretsResultResponse");

	Params::PlayFabAdminModelDecoder_decodeGetPlayerSharedSecretsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeGetPlayersInSegmentExportResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminGetPlayersInSegmentExportResponseReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminGetPlayersInSegmentExportResponse UPlayFabAdminModelDecoder::decodeGetPlayersInSegmentExportResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeGetPlayersInSegmentExportResponseResponse");

	Params::PlayFabAdminModelDecoder_decodeGetPlayersInSegmentExportResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeGetPlayersInSegmentResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminGetPlayersInSegmentResult  ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminGetPlayersInSegmentResult UPlayFabAdminModelDecoder::decodeGetPlayersInSegmentResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeGetPlayersInSegmentResultResponse");

	Params::PlayFabAdminModelDecoder_decodeGetPlayersInSegmentResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeGetPlayerStatisticDefinitionsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminGetPlayerStatisticDefinitionsResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminGetPlayerStatisticDefinitionsResult UPlayFabAdminModelDecoder::decodeGetPlayerStatisticDefinitionsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeGetPlayerStatisticDefinitionsResultResponse");

	Params::PlayFabAdminModelDecoder_decodeGetPlayerStatisticDefinitionsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeGetPlayerStatisticVersionsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminGetPlayerStatisticVersionsResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminGetPlayerStatisticVersionsResult UPlayFabAdminModelDecoder::decodeGetPlayerStatisticVersionsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeGetPlayerStatisticVersionsResultResponse");

	Params::PlayFabAdminModelDecoder_decodeGetPlayerStatisticVersionsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeGetPlayerTagsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminGetPlayerTagsResult        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminGetPlayerTagsResult UPlayFabAdminModelDecoder::decodeGetPlayerTagsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeGetPlayerTagsResultResponse");

	Params::PlayFabAdminModelDecoder_decodeGetPlayerTagsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeGetPolicyResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminGetPolicyResponse          ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminGetPolicyResponse UPlayFabAdminModelDecoder::decodeGetPolicyResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeGetPolicyResponseResponse");

	Params::PlayFabAdminModelDecoder_decodeGetPolicyResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeGetPublisherDataResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminGetPublisherDataResult     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAdminGetPublisherDataResult UPlayFabAdminModelDecoder::decodeGetPublisherDataResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeGetPublisherDataResultResponse");

	Params::PlayFabAdminModelDecoder_decodeGetPublisherDataResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeGetRandomResultTablesResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminGetRandomResultTablesResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAdminGetRandomResultTablesResult UPlayFabAdminModelDecoder::decodeGetRandomResultTablesResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeGetRandomResultTablesResultResponse");

	Params::PlayFabAdminModelDecoder_decodeGetRandomResultTablesResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeGetSegmentsResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminGetSegmentsResponse        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminGetSegmentsResponse UPlayFabAdminModelDecoder::decodeGetSegmentsResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeGetSegmentsResponseResponse");

	Params::PlayFabAdminModelDecoder_decodeGetSegmentsResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeGetStoreItemsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminGetStoreItemsResult        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminGetStoreItemsResult UPlayFabAdminModelDecoder::decodeGetStoreItemsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeGetStoreItemsResultResponse");

	Params::PlayFabAdminModelDecoder_decodeGetStoreItemsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeGetTaskInstancesResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminGetTaskInstancesResult     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminGetTaskInstancesResult UPlayFabAdminModelDecoder::decodeGetTaskInstancesResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeGetTaskInstancesResultResponse");

	Params::PlayFabAdminModelDecoder_decodeGetTaskInstancesResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeGetTasksResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminGetTasksResult             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminGetTasksResult UPlayFabAdminModelDecoder::decodeGetTasksResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeGetTasksResultResponse");

	Params::PlayFabAdminModelDecoder_decodeGetTasksResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeGetTitleDataResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminGetTitleDataResult         ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAdminGetTitleDataResult UPlayFabAdminModelDecoder::decodeGetTitleDataResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeGetTitleDataResultResponse");

	Params::PlayFabAdminModelDecoder_decodeGetTitleDataResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeGetUserBansResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminGetUserBansResult          ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminGetUserBansResult UPlayFabAdminModelDecoder::decodeGetUserBansResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeGetUserBansResultResponse");

	Params::PlayFabAdminModelDecoder_decodeGetUserBansResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeGetUserDataResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminGetUserDataResult          ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminGetUserDataResult UPlayFabAdminModelDecoder::decodeGetUserDataResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeGetUserDataResultResponse");

	Params::PlayFabAdminModelDecoder_decodeGetUserDataResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeGetUserInventoryResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminGetUserInventoryResult     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminGetUserInventoryResult UPlayFabAdminModelDecoder::decodeGetUserInventoryResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeGetUserInventoryResultResponse");

	Params::PlayFabAdminModelDecoder_decodeGetUserInventoryResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeGrantItemsToUsersResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminGrantItemsToUsersResult    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminGrantItemsToUsersResult UPlayFabAdminModelDecoder::decodeGrantItemsToUsersResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeGrantItemsToUsersResultResponse");

	Params::PlayFabAdminModelDecoder_decodeGrantItemsToUsersResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeIncrementLimitedEditionItemAvailabilityResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminIncrementLimitedEditionItemAvailabilityResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAdminIncrementLimitedEditionItemAvailabilityResult UPlayFabAdminModelDecoder::decodeIncrementLimitedEditionItemAvailabilityResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeIncrementLimitedEditionItemAvailabilityResultResponse");

	Params::PlayFabAdminModelDecoder_decodeIncrementLimitedEditionItemAvailabilityResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeIncrementPlayerStatisticVersionResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminIncrementPlayerStatisticVersionResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAdminIncrementPlayerStatisticVersionResult UPlayFabAdminModelDecoder::decodeIncrementPlayerStatisticVersionResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeIncrementPlayerStatisticVersionResultResponse");

	Params::PlayFabAdminModelDecoder_decodeIncrementPlayerStatisticVersionResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeListOpenIdConnectionResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminListOpenIdConnectionResponseReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminListOpenIdConnectionResponse UPlayFabAdminModelDecoder::decodeListOpenIdConnectionResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeListOpenIdConnectionResponseResponse");

	Params::PlayFabAdminModelDecoder_decodeListOpenIdConnectionResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeListVirtualCurrencyTypesResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminListVirtualCurrencyTypesResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminListVirtualCurrencyTypesResult UPlayFabAdminModelDecoder::decodeListVirtualCurrencyTypesResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeListVirtualCurrencyTypesResultResponse");

	Params::PlayFabAdminModelDecoder_decodeListVirtualCurrencyTypesResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeLookupUserAccountInfoResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminLookupUserAccountInfoResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAdminLookupUserAccountInfoResult UPlayFabAdminModelDecoder::decodeLookupUserAccountInfoResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeLookupUserAccountInfoResultResponse");

	Params::PlayFabAdminModelDecoder_decodeLookupUserAccountInfoResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeModifyServerBuildResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminModifyServerBuildResult    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminModifyServerBuildResult UPlayFabAdminModelDecoder::decodeModifyServerBuildResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeModifyServerBuildResultResponse");

	Params::PlayFabAdminModelDecoder_decodeModifyServerBuildResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeModifyUserVirtualCurrencyResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminModifyUserVirtualCurrencyResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminModifyUserVirtualCurrencyResult UPlayFabAdminModelDecoder::decodeModifyUserVirtualCurrencyResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeModifyUserVirtualCurrencyResultResponse");

	Params::PlayFabAdminModelDecoder_decodeModifyUserVirtualCurrencyResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeRefundPurchaseResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminRefundPurchaseResponse     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminRefundPurchaseResponse UPlayFabAdminModelDecoder::decodeRefundPurchaseResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeRefundPurchaseResponseResponse");

	Params::PlayFabAdminModelDecoder_decodeRefundPurchaseResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeRemovePlayerTagResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminRemovePlayerTagResult      ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAdminRemovePlayerTagResult UPlayFabAdminModelDecoder::decodeRemovePlayerTagResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeRemovePlayerTagResultResponse");

	Params::PlayFabAdminModelDecoder_decodeRemovePlayerTagResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeResetCharacterStatisticsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminResetCharacterStatisticsResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAdminResetCharacterStatisticsResult UPlayFabAdminModelDecoder::decodeResetCharacterStatisticsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeResetCharacterStatisticsResultResponse");

	Params::PlayFabAdminModelDecoder_decodeResetCharacterStatisticsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeResetPasswordResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminResetPasswordResult        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAdminResetPasswordResult UPlayFabAdminModelDecoder::decodeResetPasswordResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeResetPasswordResultResponse");

	Params::PlayFabAdminModelDecoder_decodeResetPasswordResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeResetUserStatisticsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminResetUserStatisticsResult  ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAdminResetUserStatisticsResult UPlayFabAdminModelDecoder::decodeResetUserStatisticsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeResetUserStatisticsResultResponse");

	Params::PlayFabAdminModelDecoder_decodeResetUserStatisticsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeResolvePurchaseDisputeResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminResolvePurchaseDisputeResponseReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminResolvePurchaseDisputeResponse UPlayFabAdminModelDecoder::decodeResolvePurchaseDisputeResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeResolvePurchaseDisputeResponseResponse");

	Params::PlayFabAdminModelDecoder_decodeResolvePurchaseDisputeResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeRevokeAllBansForUserResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminRevokeAllBansForUserResult ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminRevokeAllBansForUserResult UPlayFabAdminModelDecoder::decodeRevokeAllBansForUserResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeRevokeAllBansForUserResultResponse");

	Params::PlayFabAdminModelDecoder_decodeRevokeAllBansForUserResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeRevokeBansResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminRevokeBansResult           ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminRevokeBansResult UPlayFabAdminModelDecoder::decodeRevokeBansResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeRevokeBansResultResponse");

	Params::PlayFabAdminModelDecoder_decodeRevokeBansResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeRevokeInventoryItemsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminRevokeInventoryItemsResult ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminRevokeInventoryItemsResult UPlayFabAdminModelDecoder::decodeRevokeInventoryItemsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeRevokeInventoryItemsResultResponse");

	Params::PlayFabAdminModelDecoder_decodeRevokeInventoryItemsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeRevokeInventoryResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminRevokeInventoryResult      ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAdminRevokeInventoryResult UPlayFabAdminModelDecoder::decodeRevokeInventoryResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeRevokeInventoryResultResponse");

	Params::PlayFabAdminModelDecoder_decodeRevokeInventoryResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeRunTaskResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminRunTaskResult              ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminRunTaskResult UPlayFabAdminModelDecoder::decodeRunTaskResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeRunTaskResultResponse");

	Params::PlayFabAdminModelDecoder_decodeRunTaskResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeSendAccountRecoveryEmailResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminSendAccountRecoveryEmailResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAdminSendAccountRecoveryEmailResult UPlayFabAdminModelDecoder::decodeSendAccountRecoveryEmailResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeSendAccountRecoveryEmailResultResponse");

	Params::PlayFabAdminModelDecoder_decodeSendAccountRecoveryEmailResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeSetMembershipOverrideResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminSetMembershipOverrideResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAdminSetMembershipOverrideResult UPlayFabAdminModelDecoder::decodeSetMembershipOverrideResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeSetMembershipOverrideResultResponse");

	Params::PlayFabAdminModelDecoder_decodeSetMembershipOverrideResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeSetPlayerSecretResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminSetPlayerSecretResult      ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAdminSetPlayerSecretResult UPlayFabAdminModelDecoder::decodeSetPlayerSecretResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeSetPlayerSecretResultResponse");

	Params::PlayFabAdminModelDecoder_decodeSetPlayerSecretResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeSetPublishedRevisionResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminSetPublishedRevisionResult ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAdminSetPublishedRevisionResult UPlayFabAdminModelDecoder::decodeSetPublishedRevisionResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeSetPublishedRevisionResultResponse");

	Params::PlayFabAdminModelDecoder_decodeSetPublishedRevisionResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeSetPublisherDataResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminSetPublisherDataResult     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAdminSetPublisherDataResult UPlayFabAdminModelDecoder::decodeSetPublisherDataResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeSetPublisherDataResultResponse");

	Params::PlayFabAdminModelDecoder_decodeSetPublisherDataResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeSetTitleDataAndOverridesResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminSetTitleDataAndOverridesResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAdminSetTitleDataAndOverridesResult UPlayFabAdminModelDecoder::decodeSetTitleDataAndOverridesResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeSetTitleDataAndOverridesResultResponse");

	Params::PlayFabAdminModelDecoder_decodeSetTitleDataAndOverridesResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeSetTitleDataResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminSetTitleDataResult         ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAdminSetTitleDataResult UPlayFabAdminModelDecoder::decodeSetTitleDataResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeSetTitleDataResultResponse");

	Params::PlayFabAdminModelDecoder_decodeSetTitleDataResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeSetupPushNotificationResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminSetupPushNotificationResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminSetupPushNotificationResult UPlayFabAdminModelDecoder::decodeSetupPushNotificationResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeSetupPushNotificationResultResponse");

	Params::PlayFabAdminModelDecoder_decodeSetupPushNotificationResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeUpdateBansResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminUpdateBansResult           ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminUpdateBansResult UPlayFabAdminModelDecoder::decodeUpdateBansResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeUpdateBansResultResponse");

	Params::PlayFabAdminModelDecoder_decodeUpdateBansResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeUpdateCatalogItemsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminUpdateCatalogItemsResult   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAdminUpdateCatalogItemsResult UPlayFabAdminModelDecoder::decodeUpdateCatalogItemsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeUpdateCatalogItemsResultResponse");

	Params::PlayFabAdminModelDecoder_decodeUpdateCatalogItemsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeUpdateCloudScriptResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminUpdateCloudScriptResult    ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAdminUpdateCloudScriptResult UPlayFabAdminModelDecoder::decodeUpdateCloudScriptResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeUpdateCloudScriptResultResponse");

	Params::PlayFabAdminModelDecoder_decodeUpdateCloudScriptResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeUpdatePlayerSharedSecretResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminUpdatePlayerSharedSecretResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAdminUpdatePlayerSharedSecretResult UPlayFabAdminModelDecoder::decodeUpdatePlayerSharedSecretResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeUpdatePlayerSharedSecretResultResponse");

	Params::PlayFabAdminModelDecoder_decodeUpdatePlayerSharedSecretResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeUpdatePlayerStatisticDefinitionResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminUpdatePlayerStatisticDefinitionResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAdminUpdatePlayerStatisticDefinitionResult UPlayFabAdminModelDecoder::decodeUpdatePlayerStatisticDefinitionResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeUpdatePlayerStatisticDefinitionResultResponse");

	Params::PlayFabAdminModelDecoder_decodeUpdatePlayerStatisticDefinitionResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeUpdatePolicyResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminUpdatePolicyResponse       ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminUpdatePolicyResponse UPlayFabAdminModelDecoder::decodeUpdatePolicyResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeUpdatePolicyResponseResponse");

	Params::PlayFabAdminModelDecoder_decodeUpdatePolicyResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeUpdateRandomResultTablesResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminUpdateRandomResultTablesResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAdminUpdateRandomResultTablesResult UPlayFabAdminModelDecoder::decodeUpdateRandomResultTablesResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeUpdateRandomResultTablesResultResponse");

	Params::PlayFabAdminModelDecoder_decodeUpdateRandomResultTablesResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeUpdateSegmentResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminUpdateSegmentResponse      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminUpdateSegmentResponse UPlayFabAdminModelDecoder::decodeUpdateSegmentResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeUpdateSegmentResponseResponse");

	Params::PlayFabAdminModelDecoder_decodeUpdateSegmentResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeUpdateStoreItemsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminUpdateStoreItemsResult     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAdminUpdateStoreItemsResult UPlayFabAdminModelDecoder::decodeUpdateStoreItemsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeUpdateStoreItemsResultResponse");

	Params::PlayFabAdminModelDecoder_decodeUpdateStoreItemsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeUpdateUserDataResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminUpdateUserDataResult       ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAdminUpdateUserDataResult UPlayFabAdminModelDecoder::decodeUpdateUserDataResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeUpdateUserDataResultResponse");

	Params::PlayFabAdminModelDecoder_decodeUpdateUserDataResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAdminModelDecoder.decodeUpdateUserTitleDisplayNameResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAdminUpdateUserTitleDisplayNameResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAdminUpdateUserTitleDisplayNameResult UPlayFabAdminModelDecoder::decodeUpdateUserTitleDisplayNameResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAdminModelDecoder", "decodeUpdateUserTitleDisplayNameResultResponse");

	Params::PlayFabAdminModelDecoder_decodeUpdateUserTitleDisplayNameResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAuthenticationAPI.Delete
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAuthenticationDeleteRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAuthenticationEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAuthenticationAPI*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAuthenticationAPI* UPlayFabAuthenticationAPI::Delete(const struct FAuthenticationDeleteRequest& Request, TDelegate<void(const struct FAuthenticationEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAuthenticationAPI", "Delete");

	Params::PlayFabAuthenticationAPI_Delete Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAuthenticationAPI.GetEntityToken
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAuthenticationGetEntityTokenRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAuthenticationGetEntityTokenResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAuthenticationAPI*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAuthenticationAPI* UPlayFabAuthenticationAPI::GetEntityToken(const struct FAuthenticationGetEntityTokenRequest& Request, TDelegate<void(const struct FAuthenticationGetEntityTokenResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAuthenticationAPI", "GetEntityToken");

	Params::PlayFabAuthenticationAPI_GetEntityToken Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAuthenticationAPI.ValidateEntityToken
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FAuthenticationValidateEntityTokenRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FAuthenticationValidateEntityTokenResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabAuthenticationAPI*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabAuthenticationAPI* UPlayFabAuthenticationAPI::ValidateEntityToken(const struct FAuthenticationValidateEntityTokenRequest& Request, TDelegate<void(const struct FAuthenticationValidateEntityTokenResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAuthenticationAPI", "ValidateEntityToken");

	Params::PlayFabAuthenticationAPI_ValidateEntityToken Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAuthenticationAPI.HelperDelete
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAuthenticationAPI::HelperDelete(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAuthenticationAPI", "HelperDelete");

	Params::PlayFabAuthenticationAPI_HelperDelete Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAuthenticationAPI.HelperGetEntityToken
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAuthenticationAPI::HelperGetEntityToken(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAuthenticationAPI", "HelperGetEntityToken");

	Params::PlayFabAuthenticationAPI_HelperGetEntityToken Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAuthenticationAPI.HelperValidateEntityToken
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabAuthenticationAPI::HelperValidateEntityToken(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabAuthenticationAPI", "HelperValidateEntityToken");

	Params::PlayFabAuthenticationAPI_HelperValidateEntityToken Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabAuthenticationModelDecoder.decodeEmptyResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAuthenticationEmptyResponse     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAuthenticationEmptyResponse UPlayFabAuthenticationModelDecoder::decodeEmptyResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAuthenticationModelDecoder", "decodeEmptyResponseResponse");

	Params::PlayFabAuthenticationModelDecoder_decodeEmptyResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAuthenticationModelDecoder.decodeGetEntityTokenResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAuthenticationGetEntityTokenResponseReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAuthenticationGetEntityTokenResponse UPlayFabAuthenticationModelDecoder::decodeGetEntityTokenResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAuthenticationModelDecoder", "decodeGetEntityTokenResponseResponse");

	Params::PlayFabAuthenticationModelDecoder_decodeGetEntityTokenResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabAuthenticationModelDecoder.decodeValidateEntityTokenResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAuthenticationValidateEntityTokenResponseReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAuthenticationValidateEntityTokenResponse UPlayFabAuthenticationModelDecoder::decodeValidateEntityTokenResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabAuthenticationModelDecoder", "decodeValidateEntityTokenResponseResponse");

	Params::PlayFabAuthenticationModelDecoder_decodeValidateEntityTokenResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.AcceptTrade
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientAcceptTradeRequest& Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientAcceptTradeResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::AcceptTrade(const struct FClientAcceptTradeRequest& Request, TDelegate<void(const struct FClientAcceptTradeResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "AcceptTrade");

	Params::PlayFabClientAPI_AcceptTrade Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.AddFriend
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientAddFriendRequest&   Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientAddFriendResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::AddFriend(const struct FClientAddFriendRequest& Request, TDelegate<void(const struct FClientAddFriendResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "AddFriend");

	Params::PlayFabClientAPI_AddFriend Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.AddGenericID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientAddGenericIDRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientAddGenericIDResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::AddGenericID(const struct FClientAddGenericIDRequest& Request, TDelegate<void(const struct FClientAddGenericIDResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "AddGenericID");

	Params::PlayFabClientAPI_AddGenericID Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.AddOrUpdateContactEmail
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientAddOrUpdateContactEmailRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientAddOrUpdateContactEmailResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::AddOrUpdateContactEmail(const struct FClientAddOrUpdateContactEmailRequest& Request, TDelegate<void(const struct FClientAddOrUpdateContactEmailResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "AddOrUpdateContactEmail");

	Params::PlayFabClientAPI_AddOrUpdateContactEmail Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.AddSharedGroupMembers
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientAddSharedGroupMembersRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientAddSharedGroupMembersResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::AddSharedGroupMembers(const struct FClientAddSharedGroupMembersRequest& Request, TDelegate<void(const struct FClientAddSharedGroupMembersResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "AddSharedGroupMembers");

	Params::PlayFabClientAPI_AddSharedGroupMembers Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.AddUsernamePassword
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientAddUsernamePasswordRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientAddUsernamePasswordResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::AddUsernamePassword(const struct FClientAddUsernamePasswordRequest& Request, TDelegate<void(const struct FClientAddUsernamePasswordResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "AddUsernamePassword");

	Params::PlayFabClientAPI_AddUsernamePassword Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.AddUserVirtualCurrency
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientAddUserVirtualCurrencyRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientModifyUserVirtualCurrencyResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::AddUserVirtualCurrency(const struct FClientAddUserVirtualCurrencyRequest& Request, TDelegate<void(const struct FClientModifyUserVirtualCurrencyResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "AddUserVirtualCurrency");

	Params::PlayFabClientAPI_AddUserVirtualCurrency Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.AndroidDevicePushNotificationRegistration
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientAndroidDevicePushNotificationRegistrationRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientAndroidDevicePushNotificationRegistrationResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::AndroidDevicePushNotificationRegistration(const struct FClientAndroidDevicePushNotificationRegistrationRequest& Request, TDelegate<void(const struct FClientAndroidDevicePushNotificationRegistrationResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "AndroidDevicePushNotificationRegistration");

	Params::PlayFabClientAPI_AndroidDevicePushNotificationRegistration Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.AttributeInstall
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientAttributeInstallRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientAttributeInstallResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::AttributeInstall(const struct FClientAttributeInstallRequest& Request, TDelegate<void(const struct FClientAttributeInstallResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "AttributeInstall");

	Params::PlayFabClientAPI_AttributeInstall Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.CancelTrade
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientCancelTradeRequest& Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientCancelTradeResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::CancelTrade(const struct FClientCancelTradeRequest& Request, TDelegate<void(const struct FClientCancelTradeResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "CancelTrade");

	Params::PlayFabClientAPI_CancelTrade Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.ConfirmPurchase
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientConfirmPurchaseRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientConfirmPurchaseResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::ConfirmPurchase(const struct FClientConfirmPurchaseRequest& Request, TDelegate<void(const struct FClientConfirmPurchaseResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "ConfirmPurchase");

	Params::PlayFabClientAPI_ConfirmPurchase Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.ConsumeItem
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientConsumeItemRequest& Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientConsumeItemResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::ConsumeItem(const struct FClientConsumeItemRequest& Request, TDelegate<void(const struct FClientConsumeItemResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "ConsumeItem");

	Params::PlayFabClientAPI_ConsumeItem Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.ConsumeMicrosoftStoreEntitlements
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientConsumeMicrosoftStoreEntitlementsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientConsumeMicrosoftStoreEntitlementsResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::ConsumeMicrosoftStoreEntitlements(const struct FClientConsumeMicrosoftStoreEntitlementsRequest& Request, TDelegate<void(const struct FClientConsumeMicrosoftStoreEntitlementsResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "ConsumeMicrosoftStoreEntitlements");

	Params::PlayFabClientAPI_ConsumeMicrosoftStoreEntitlements Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.ConsumePS5Entitlements
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientConsumePS5EntitlementsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientConsumePS5EntitlementsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::ConsumePS5Entitlements(const struct FClientConsumePS5EntitlementsRequest& Request, TDelegate<void(const struct FClientConsumePS5EntitlementsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "ConsumePS5Entitlements");

	Params::PlayFabClientAPI_ConsumePS5Entitlements Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.ConsumePSNEntitlements
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientConsumePSNEntitlementsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientConsumePSNEntitlementsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::ConsumePSNEntitlements(const struct FClientConsumePSNEntitlementsRequest& Request, TDelegate<void(const struct FClientConsumePSNEntitlementsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "ConsumePSNEntitlements");

	Params::PlayFabClientAPI_ConsumePSNEntitlements Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.ConsumeXboxEntitlements
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientConsumeXboxEntitlementsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientConsumeXboxEntitlementsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::ConsumeXboxEntitlements(const struct FClientConsumeXboxEntitlementsRequest& Request, TDelegate<void(const struct FClientConsumeXboxEntitlementsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "ConsumeXboxEntitlements");

	Params::PlayFabClientAPI_ConsumeXboxEntitlements Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.CreateSharedGroup
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientCreateSharedGroupRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientCreateSharedGroupResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::CreateSharedGroup(const struct FClientCreateSharedGroupRequest& Request, TDelegate<void(const struct FClientCreateSharedGroupResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "CreateSharedGroup");

	Params::PlayFabClientAPI_CreateSharedGroup Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.ExecuteCloudScript
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientExecuteCloudScriptRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientExecuteCloudScriptResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::ExecuteCloudScript(const struct FClientExecuteCloudScriptRequest& Request, TDelegate<void(const struct FClientExecuteCloudScriptResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "ExecuteCloudScript");

	Params::PlayFabClientAPI_ExecuteCloudScript Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetAccountInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetAccountInfoRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetAccountInfoResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetAccountInfo(const struct FClientGetAccountInfoRequest& Request, TDelegate<void(const struct FClientGetAccountInfoResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetAccountInfo");

	Params::PlayFabClientAPI_GetAccountInfo Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetAdPlacements
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetAdPlacementsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetAdPlacementsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetAdPlacements(const struct FClientGetAdPlacementsRequest& Request, TDelegate<void(const struct FClientGetAdPlacementsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetAdPlacements");

	Params::PlayFabClientAPI_GetAdPlacements Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetAllUsersCharacters
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientListUsersCharactersRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientListUsersCharactersResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetAllUsersCharacters(const struct FClientListUsersCharactersRequest& Request, TDelegate<void(const struct FClientListUsersCharactersResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetAllUsersCharacters");

	Params::PlayFabClientAPI_GetAllUsersCharacters Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetCatalogItems
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetCatalogItemsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetCatalogItemsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetCatalogItems(const struct FClientGetCatalogItemsRequest& Request, TDelegate<void(const struct FClientGetCatalogItemsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetCatalogItems");

	Params::PlayFabClientAPI_GetCatalogItems Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetCharacterData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetCharacterDataRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetCharacterDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetCharacterData(const struct FClientGetCharacterDataRequest& Request, TDelegate<void(const struct FClientGetCharacterDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetCharacterData");

	Params::PlayFabClientAPI_GetCharacterData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetCharacterInventory
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetCharacterInventoryRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetCharacterInventoryResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetCharacterInventory(const struct FClientGetCharacterInventoryRequest& Request, TDelegate<void(const struct FClientGetCharacterInventoryResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetCharacterInventory");

	Params::PlayFabClientAPI_GetCharacterInventory Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetCharacterLeaderboard
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetCharacterLeaderboardRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetCharacterLeaderboardResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetCharacterLeaderboard(const struct FClientGetCharacterLeaderboardRequest& Request, TDelegate<void(const struct FClientGetCharacterLeaderboardResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetCharacterLeaderboard");

	Params::PlayFabClientAPI_GetCharacterLeaderboard Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetCharacterReadOnlyData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetCharacterDataRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetCharacterDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetCharacterReadOnlyData(const struct FClientGetCharacterDataRequest& Request, TDelegate<void(const struct FClientGetCharacterDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetCharacterReadOnlyData");

	Params::PlayFabClientAPI_GetCharacterReadOnlyData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetCharacterStatistics
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetCharacterStatisticsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetCharacterStatisticsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetCharacterStatistics(const struct FClientGetCharacterStatisticsRequest& Request, TDelegate<void(const struct FClientGetCharacterStatisticsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetCharacterStatistics");

	Params::PlayFabClientAPI_GetCharacterStatistics Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetContentDownloadUrl
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetContentDownloadUrlRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetContentDownloadUrlResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetContentDownloadUrl(const struct FClientGetContentDownloadUrlRequest& Request, TDelegate<void(const struct FClientGetContentDownloadUrlResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetContentDownloadUrl");

	Params::PlayFabClientAPI_GetContentDownloadUrl Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetCurrentGames
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientCurrentGamesRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientCurrentGamesResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetCurrentGames(const struct FClientCurrentGamesRequest& Request, TDelegate<void(const struct FClientCurrentGamesResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetCurrentGames");

	Params::PlayFabClientAPI_GetCurrentGames Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetFriendLeaderboard
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetFriendLeaderboardRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetLeaderboardResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetFriendLeaderboard(const struct FClientGetFriendLeaderboardRequest& Request, TDelegate<void(const struct FClientGetLeaderboardResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetFriendLeaderboard");

	Params::PlayFabClientAPI_GetFriendLeaderboard Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetFriendLeaderboardAroundPlayer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetFriendLeaderboardAroundPlayerRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetFriendLeaderboardAroundPlayerResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetFriendLeaderboardAroundPlayer(const struct FClientGetFriendLeaderboardAroundPlayerRequest& Request, TDelegate<void(const struct FClientGetFriendLeaderboardAroundPlayerResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetFriendLeaderboardAroundPlayer");

	Params::PlayFabClientAPI_GetFriendLeaderboardAroundPlayer Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetFriendsList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetFriendsListRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetFriendsListResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetFriendsList(const struct FClientGetFriendsListRequest& Request, TDelegate<void(const struct FClientGetFriendsListResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetFriendsList");

	Params::PlayFabClientAPI_GetFriendsList Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetGameServerRegions
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGameServerRegionsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGameServerRegionsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetGameServerRegions(const struct FClientGameServerRegionsRequest& Request, TDelegate<void(const struct FClientGameServerRegionsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetGameServerRegions");

	Params::PlayFabClientAPI_GetGameServerRegions Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetLeaderboard
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetLeaderboardRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetLeaderboardResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetLeaderboard(const struct FClientGetLeaderboardRequest& Request, TDelegate<void(const struct FClientGetLeaderboardResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetLeaderboard");

	Params::PlayFabClientAPI_GetLeaderboard Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetLeaderboardAroundCharacter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetLeaderboardAroundCharacterRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetLeaderboardAroundCharacterResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetLeaderboardAroundCharacter(const struct FClientGetLeaderboardAroundCharacterRequest& Request, TDelegate<void(const struct FClientGetLeaderboardAroundCharacterResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetLeaderboardAroundCharacter");

	Params::PlayFabClientAPI_GetLeaderboardAroundCharacter Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetLeaderboardAroundPlayer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetLeaderboardAroundPlayerRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetLeaderboardAroundPlayerResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetLeaderboardAroundPlayer(const struct FClientGetLeaderboardAroundPlayerRequest& Request, TDelegate<void(const struct FClientGetLeaderboardAroundPlayerResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetLeaderboardAroundPlayer");

	Params::PlayFabClientAPI_GetLeaderboardAroundPlayer Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetLeaderboardForUserCharacters
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetLeaderboardForUsersCharactersRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetLeaderboardForUsersCharactersResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetLeaderboardForUserCharacters(const struct FClientGetLeaderboardForUsersCharactersRequest& Request, TDelegate<void(const struct FClientGetLeaderboardForUsersCharactersResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetLeaderboardForUserCharacters");

	Params::PlayFabClientAPI_GetLeaderboardForUserCharacters Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetPaymentToken
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetPaymentTokenRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetPaymentTokenResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetPaymentToken(const struct FClientGetPaymentTokenRequest& Request, TDelegate<void(const struct FClientGetPaymentTokenResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetPaymentToken");

	Params::PlayFabClientAPI_GetPaymentToken Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetPhotonAuthenticationToken
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetPhotonAuthenticationTokenRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetPhotonAuthenticationTokenResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetPhotonAuthenticationToken(const struct FClientGetPhotonAuthenticationTokenRequest& Request, TDelegate<void(const struct FClientGetPhotonAuthenticationTokenResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetPhotonAuthenticationToken");

	Params::PlayFabClientAPI_GetPhotonAuthenticationToken Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetPlayerCombinedInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetPlayerCombinedInfoRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetPlayerCombinedInfoResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetPlayerCombinedInfo(const struct FClientGetPlayerCombinedInfoRequest& Request, TDelegate<void(const struct FClientGetPlayerCombinedInfoResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetPlayerCombinedInfo");

	Params::PlayFabClientAPI_GetPlayerCombinedInfo Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetPlayerProfile
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetPlayerProfileRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetPlayerProfileResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetPlayerProfile(const struct FClientGetPlayerProfileRequest& Request, TDelegate<void(const struct FClientGetPlayerProfileResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetPlayerProfile");

	Params::PlayFabClientAPI_GetPlayerProfile Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetPlayerSegments
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetPlayerSegmentsRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetPlayerSegmentsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetPlayerSegments(const struct FClientGetPlayerSegmentsRequest& Request, TDelegate<void(const struct FClientGetPlayerSegmentsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetPlayerSegments");

	Params::PlayFabClientAPI_GetPlayerSegments Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetPlayerStatistics
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetPlayerStatisticsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetPlayerStatisticsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetPlayerStatistics(const struct FClientGetPlayerStatisticsRequest& Request, TDelegate<void(const struct FClientGetPlayerStatisticsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetPlayerStatistics");

	Params::PlayFabClientAPI_GetPlayerStatistics Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetPlayerStatisticVersions
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetPlayerStatisticVersionsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetPlayerStatisticVersionsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetPlayerStatisticVersions(const struct FClientGetPlayerStatisticVersionsRequest& Request, TDelegate<void(const struct FClientGetPlayerStatisticVersionsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetPlayerStatisticVersions");

	Params::PlayFabClientAPI_GetPlayerStatisticVersions Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetPlayerTags
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetPlayerTagsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetPlayerTagsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetPlayerTags(const struct FClientGetPlayerTagsRequest& Request, TDelegate<void(const struct FClientGetPlayerTagsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetPlayerTags");

	Params::PlayFabClientAPI_GetPlayerTags Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetPlayerTrades
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetPlayerTradesRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetPlayerTradesResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetPlayerTrades(const struct FClientGetPlayerTradesRequest& Request, TDelegate<void(const struct FClientGetPlayerTradesResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetPlayerTrades");

	Params::PlayFabClientAPI_GetPlayerTrades Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetPlayFabIDsFromFacebookIDs
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetPlayFabIDsFromFacebookIDsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetPlayFabIDsFromFacebookIDsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetPlayFabIDsFromFacebookIDs(const struct FClientGetPlayFabIDsFromFacebookIDsRequest& Request, TDelegate<void(const struct FClientGetPlayFabIDsFromFacebookIDsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetPlayFabIDsFromFacebookIDs");

	Params::PlayFabClientAPI_GetPlayFabIDsFromFacebookIDs Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetPlayFabIDsFromFacebookInstantGamesIds
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetPlayFabIDsFromFacebookInstantGamesIdsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetPlayFabIDsFromFacebookInstantGamesIdsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetPlayFabIDsFromFacebookInstantGamesIds(const struct FClientGetPlayFabIDsFromFacebookInstantGamesIdsRequest& Request, TDelegate<void(const struct FClientGetPlayFabIDsFromFacebookInstantGamesIdsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetPlayFabIDsFromFacebookInstantGamesIds");

	Params::PlayFabClientAPI_GetPlayFabIDsFromFacebookInstantGamesIds Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetPlayFabIDsFromGameCenterIDs
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetPlayFabIDsFromGameCenterIDsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetPlayFabIDsFromGameCenterIDsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetPlayFabIDsFromGameCenterIDs(const struct FClientGetPlayFabIDsFromGameCenterIDsRequest& Request, TDelegate<void(const struct FClientGetPlayFabIDsFromGameCenterIDsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetPlayFabIDsFromGameCenterIDs");

	Params::PlayFabClientAPI_GetPlayFabIDsFromGameCenterIDs Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetPlayFabIDsFromGenericIDs
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetPlayFabIDsFromGenericIDsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetPlayFabIDsFromGenericIDsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetPlayFabIDsFromGenericIDs(const struct FClientGetPlayFabIDsFromGenericIDsRequest& Request, TDelegate<void(const struct FClientGetPlayFabIDsFromGenericIDsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetPlayFabIDsFromGenericIDs");

	Params::PlayFabClientAPI_GetPlayFabIDsFromGenericIDs Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetPlayFabIDsFromGoogleIDs
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetPlayFabIDsFromGoogleIDsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetPlayFabIDsFromGoogleIDsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetPlayFabIDsFromGoogleIDs(const struct FClientGetPlayFabIDsFromGoogleIDsRequest& Request, TDelegate<void(const struct FClientGetPlayFabIDsFromGoogleIDsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetPlayFabIDsFromGoogleIDs");

	Params::PlayFabClientAPI_GetPlayFabIDsFromGoogleIDs Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetPlayFabIDsFromGooglePlayGamesPlayerIDs
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetPlayFabIDsFromGooglePlayGamesPlayerIDsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetPlayFabIDsFromGooglePlayGamesPlayerIDsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetPlayFabIDsFromGooglePlayGamesPlayerIDs(const struct FClientGetPlayFabIDsFromGooglePlayGamesPlayerIDsRequest& Request, TDelegate<void(const struct FClientGetPlayFabIDsFromGooglePlayGamesPlayerIDsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetPlayFabIDsFromGooglePlayGamesPlayerIDs");

	Params::PlayFabClientAPI_GetPlayFabIDsFromGooglePlayGamesPlayerIDs Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetPlayFabIDsFromKongregateIDs
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetPlayFabIDsFromKongregateIDsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetPlayFabIDsFromKongregateIDsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetPlayFabIDsFromKongregateIDs(const struct FClientGetPlayFabIDsFromKongregateIDsRequest& Request, TDelegate<void(const struct FClientGetPlayFabIDsFromKongregateIDsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetPlayFabIDsFromKongregateIDs");

	Params::PlayFabClientAPI_GetPlayFabIDsFromKongregateIDs Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetPlayFabIDsFromNintendoServiceAccountIds
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetPlayFabIDsFromNintendoServiceAccountIdsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetPlayFabIDsFromNintendoServiceAccountIdsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetPlayFabIDsFromNintendoServiceAccountIds(const struct FClientGetPlayFabIDsFromNintendoServiceAccountIdsRequest& Request, TDelegate<void(const struct FClientGetPlayFabIDsFromNintendoServiceAccountIdsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetPlayFabIDsFromNintendoServiceAccountIds");

	Params::PlayFabClientAPI_GetPlayFabIDsFromNintendoServiceAccountIds Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetPlayFabIDsFromNintendoSwitchDeviceIds
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetPlayFabIDsFromNintendoSwitchDeviceIdsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetPlayFabIDsFromNintendoSwitchDeviceIdsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetPlayFabIDsFromNintendoSwitchDeviceIds(const struct FClientGetPlayFabIDsFromNintendoSwitchDeviceIdsRequest& Request, TDelegate<void(const struct FClientGetPlayFabIDsFromNintendoSwitchDeviceIdsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetPlayFabIDsFromNintendoSwitchDeviceIds");

	Params::PlayFabClientAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetPlayFabIDsFromPSNAccountIDs
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetPlayFabIDsFromPSNAccountIDsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetPlayFabIDsFromPSNAccountIDsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetPlayFabIDsFromPSNAccountIDs(const struct FClientGetPlayFabIDsFromPSNAccountIDsRequest& Request, TDelegate<void(const struct FClientGetPlayFabIDsFromPSNAccountIDsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetPlayFabIDsFromPSNAccountIDs");

	Params::PlayFabClientAPI_GetPlayFabIDsFromPSNAccountIDs Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetPlayFabIDsFromSteamIDs
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetPlayFabIDsFromSteamIDsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetPlayFabIDsFromSteamIDsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetPlayFabIDsFromSteamIDs(const struct FClientGetPlayFabIDsFromSteamIDsRequest& Request, TDelegate<void(const struct FClientGetPlayFabIDsFromSteamIDsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetPlayFabIDsFromSteamIDs");

	Params::PlayFabClientAPI_GetPlayFabIDsFromSteamIDs Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetPlayFabIDsFromTwitchIDs
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetPlayFabIDsFromTwitchIDsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetPlayFabIDsFromTwitchIDsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetPlayFabIDsFromTwitchIDs(const struct FClientGetPlayFabIDsFromTwitchIDsRequest& Request, TDelegate<void(const struct FClientGetPlayFabIDsFromTwitchIDsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetPlayFabIDsFromTwitchIDs");

	Params::PlayFabClientAPI_GetPlayFabIDsFromTwitchIDs Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetPlayFabIDsFromXboxLiveIDs
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetPlayFabIDsFromXboxLiveIDsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetPlayFabIDsFromXboxLiveIDsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetPlayFabIDsFromXboxLiveIDs(const struct FClientGetPlayFabIDsFromXboxLiveIDsRequest& Request, TDelegate<void(const struct FClientGetPlayFabIDsFromXboxLiveIDsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetPlayFabIDsFromXboxLiveIDs");

	Params::PlayFabClientAPI_GetPlayFabIDsFromXboxLiveIDs Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetPublisherData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetPublisherDataRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetPublisherDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetPublisherData(const struct FClientGetPublisherDataRequest& Request, TDelegate<void(const struct FClientGetPublisherDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetPublisherData");

	Params::PlayFabClientAPI_GetPublisherData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetPurchase
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetPurchaseRequest& Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetPurchaseResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetPurchase(const struct FClientGetPurchaseRequest& Request, TDelegate<void(const struct FClientGetPurchaseResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetPurchase");

	Params::PlayFabClientAPI_GetPurchase Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetSharedGroupData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetSharedGroupDataRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetSharedGroupDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetSharedGroupData(const struct FClientGetSharedGroupDataRequest& Request, TDelegate<void(const struct FClientGetSharedGroupDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetSharedGroupData");

	Params::PlayFabClientAPI_GetSharedGroupData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetStoreItems
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetStoreItemsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetStoreItemsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetStoreItems(const struct FClientGetStoreItemsRequest& Request, TDelegate<void(const struct FClientGetStoreItemsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetStoreItems");

	Params::PlayFabClientAPI_GetStoreItems Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetTime
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetTimeRequest&     Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetTimeResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetTime(const struct FClientGetTimeRequest& Request, TDelegate<void(const struct FClientGetTimeResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetTime");

	Params::PlayFabClientAPI_GetTime Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetTitleData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetTitleDataRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetTitleDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetTitleData(const struct FClientGetTitleDataRequest& Request, TDelegate<void(const struct FClientGetTitleDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetTitleData");

	Params::PlayFabClientAPI_GetTitleData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetTitleNews
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetTitleNewsRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetTitleNewsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetTitleNews(const struct FClientGetTitleNewsRequest& Request, TDelegate<void(const struct FClientGetTitleNewsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetTitleNews");

	Params::PlayFabClientAPI_GetTitleNews Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetTitlePublicKey
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetTitlePublicKeyRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetTitlePublicKeyResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetTitlePublicKey(const struct FClientGetTitlePublicKeyRequest& Request, TDelegate<void(const struct FClientGetTitlePublicKeyResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetTitlePublicKey");

	Params::PlayFabClientAPI_GetTitlePublicKey Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetTradeStatus
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetTradeStatusRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetTradeStatusResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetTradeStatus(const struct FClientGetTradeStatusRequest& Request, TDelegate<void(const struct FClientGetTradeStatusResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetTradeStatus");

	Params::PlayFabClientAPI_GetTradeStatus Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetUserData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetUserDataRequest& Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetUserDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetUserData(const struct FClientGetUserDataRequest& Request, TDelegate<void(const struct FClientGetUserDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetUserData");

	Params::PlayFabClientAPI_GetUserData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetUserInventory
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetUserInventoryRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetUserInventoryResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetUserInventory(const struct FClientGetUserInventoryRequest& Request, TDelegate<void(const struct FClientGetUserInventoryResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetUserInventory");

	Params::PlayFabClientAPI_GetUserInventory Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetUserPublisherData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetUserDataRequest& Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetUserDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetUserPublisherData(const struct FClientGetUserDataRequest& Request, TDelegate<void(const struct FClientGetUserDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetUserPublisherData");

	Params::PlayFabClientAPI_GetUserPublisherData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetUserPublisherReadOnlyData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetUserDataRequest& Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetUserDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetUserPublisherReadOnlyData(const struct FClientGetUserDataRequest& Request, TDelegate<void(const struct FClientGetUserDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetUserPublisherReadOnlyData");

	Params::PlayFabClientAPI_GetUserPublisherReadOnlyData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GetUserReadOnlyData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGetUserDataRequest& Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGetUserDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GetUserReadOnlyData(const struct FClientGetUserDataRequest& Request, TDelegate<void(const struct FClientGetUserDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GetUserReadOnlyData");

	Params::PlayFabClientAPI_GetUserReadOnlyData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.GrantCharacterToUser
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientGrantCharacterToUserRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientGrantCharacterToUserResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::GrantCharacterToUser(const struct FClientGrantCharacterToUserRequest& Request, TDelegate<void(const struct FClientGrantCharacterToUserResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "GrantCharacterToUser");

	Params::PlayFabClientAPI_GrantCharacterToUser Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.LinkAndroidDeviceID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientLinkAndroidDeviceIDRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientLinkAndroidDeviceIDResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::LinkAndroidDeviceID(const struct FClientLinkAndroidDeviceIDRequest& Request, TDelegate<void(const struct FClientLinkAndroidDeviceIDResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "LinkAndroidDeviceID");

	Params::PlayFabClientAPI_LinkAndroidDeviceID Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.LinkApple
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientLinkAppleRequest&   Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientEmptyResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::LinkApple(const struct FClientLinkAppleRequest& Request, TDelegate<void(const struct FClientEmptyResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "LinkApple");

	Params::PlayFabClientAPI_LinkApple Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.LinkCustomID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientLinkCustomIDRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientLinkCustomIDResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::LinkCustomID(const struct FClientLinkCustomIDRequest& Request, TDelegate<void(const struct FClientLinkCustomIDResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "LinkCustomID");

	Params::PlayFabClientAPI_LinkCustomID Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.LinkFacebookAccount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientLinkFacebookAccountRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientLinkFacebookAccountResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::LinkFacebookAccount(const struct FClientLinkFacebookAccountRequest& Request, TDelegate<void(const struct FClientLinkFacebookAccountResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "LinkFacebookAccount");

	Params::PlayFabClientAPI_LinkFacebookAccount Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.LinkFacebookInstantGamesId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientLinkFacebookInstantGamesIdRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientLinkFacebookInstantGamesIdResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::LinkFacebookInstantGamesId(const struct FClientLinkFacebookInstantGamesIdRequest& Request, TDelegate<void(const struct FClientLinkFacebookInstantGamesIdResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "LinkFacebookInstantGamesId");

	Params::PlayFabClientAPI_LinkFacebookInstantGamesId Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.LinkGameCenterAccount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientLinkGameCenterAccountRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientLinkGameCenterAccountResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::LinkGameCenterAccount(const struct FClientLinkGameCenterAccountRequest& Request, TDelegate<void(const struct FClientLinkGameCenterAccountResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "LinkGameCenterAccount");

	Params::PlayFabClientAPI_LinkGameCenterAccount Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.LinkGoogleAccount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientLinkGoogleAccountRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientLinkGoogleAccountResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::LinkGoogleAccount(const struct FClientLinkGoogleAccountRequest& Request, TDelegate<void(const struct FClientLinkGoogleAccountResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "LinkGoogleAccount");

	Params::PlayFabClientAPI_LinkGoogleAccount Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.LinkGooglePlayGamesServicesAccount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientLinkGooglePlayGamesServicesAccountRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientLinkGooglePlayGamesServicesAccountResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::LinkGooglePlayGamesServicesAccount(const struct FClientLinkGooglePlayGamesServicesAccountRequest& Request, TDelegate<void(const struct FClientLinkGooglePlayGamesServicesAccountResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "LinkGooglePlayGamesServicesAccount");

	Params::PlayFabClientAPI_LinkGooglePlayGamesServicesAccount Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.LinkIOSDeviceID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientLinkIOSDeviceIDRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientLinkIOSDeviceIDResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::LinkIOSDeviceID(const struct FClientLinkIOSDeviceIDRequest& Request, TDelegate<void(const struct FClientLinkIOSDeviceIDResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "LinkIOSDeviceID");

	Params::PlayFabClientAPI_LinkIOSDeviceID Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.LinkKongregate
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientLinkKongregateAccountRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientLinkKongregateAccountResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::LinkKongregate(const struct FClientLinkKongregateAccountRequest& Request, TDelegate<void(const struct FClientLinkKongregateAccountResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "LinkKongregate");

	Params::PlayFabClientAPI_LinkKongregate Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.LinkNintendoServiceAccount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientLinkNintendoServiceAccountRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientEmptyResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::LinkNintendoServiceAccount(const struct FClientLinkNintendoServiceAccountRequest& Request, TDelegate<void(const struct FClientEmptyResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "LinkNintendoServiceAccount");

	Params::PlayFabClientAPI_LinkNintendoServiceAccount Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.LinkNintendoSwitchDeviceId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientLinkNintendoSwitchDeviceIdRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientLinkNintendoSwitchDeviceIdResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::LinkNintendoSwitchDeviceId(const struct FClientLinkNintendoSwitchDeviceIdRequest& Request, TDelegate<void(const struct FClientLinkNintendoSwitchDeviceIdResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "LinkNintendoSwitchDeviceId");

	Params::PlayFabClientAPI_LinkNintendoSwitchDeviceId Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.LinkOpenIdConnect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientLinkOpenIdConnectRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientEmptyResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::LinkOpenIdConnect(const struct FClientLinkOpenIdConnectRequest& Request, TDelegate<void(const struct FClientEmptyResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "LinkOpenIdConnect");

	Params::PlayFabClientAPI_LinkOpenIdConnect Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.LinkPSNAccount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientLinkPSNAccountRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientLinkPSNAccountResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::LinkPSNAccount(const struct FClientLinkPSNAccountRequest& Request, TDelegate<void(const struct FClientLinkPSNAccountResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "LinkPSNAccount");

	Params::PlayFabClientAPI_LinkPSNAccount Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.LinkSteamAccount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientLinkSteamAccountRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientLinkSteamAccountResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::LinkSteamAccount(const struct FClientLinkSteamAccountRequest& Request, TDelegate<void(const struct FClientLinkSteamAccountResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "LinkSteamAccount");

	Params::PlayFabClientAPI_LinkSteamAccount Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.LinkTwitch
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientLinkTwitchAccountRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientLinkTwitchAccountResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::LinkTwitch(const struct FClientLinkTwitchAccountRequest& Request, TDelegate<void(const struct FClientLinkTwitchAccountResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "LinkTwitch");

	Params::PlayFabClientAPI_LinkTwitch Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.LinkXboxAccount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientLinkXboxAccountRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientLinkXboxAccountResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::LinkXboxAccount(const struct FClientLinkXboxAccountRequest& Request, TDelegate<void(const struct FClientLinkXboxAccountResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "LinkXboxAccount");

	Params::PlayFabClientAPI_LinkXboxAccount Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.LoginWithAndroidDeviceID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientLoginWithAndroidDeviceIDRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::LoginWithAndroidDeviceID(const struct FClientLoginWithAndroidDeviceIDRequest& Request, TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "LoginWithAndroidDeviceID");

	Params::PlayFabClientAPI_LoginWithAndroidDeviceID Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.LoginWithApple
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientLoginWithAppleRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::LoginWithApple(const struct FClientLoginWithAppleRequest& Request, TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "LoginWithApple");

	Params::PlayFabClientAPI_LoginWithApple Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.LoginWithCustomID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientLoginWithCustomIDRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::LoginWithCustomID(const struct FClientLoginWithCustomIDRequest& Request, TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "LoginWithCustomID");

	Params::PlayFabClientAPI_LoginWithCustomID Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.LoginWithEmailAddress
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientLoginWithEmailAddressRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::LoginWithEmailAddress(const struct FClientLoginWithEmailAddressRequest& Request, TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "LoginWithEmailAddress");

	Params::PlayFabClientAPI_LoginWithEmailAddress Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.LoginWithFacebook
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientLoginWithFacebookRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::LoginWithFacebook(const struct FClientLoginWithFacebookRequest& Request, TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "LoginWithFacebook");

	Params::PlayFabClientAPI_LoginWithFacebook Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.LoginWithFacebookInstantGamesId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientLoginWithFacebookInstantGamesIdRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::LoginWithFacebookInstantGamesId(const struct FClientLoginWithFacebookInstantGamesIdRequest& Request, TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "LoginWithFacebookInstantGamesId");

	Params::PlayFabClientAPI_LoginWithFacebookInstantGamesId Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.LoginWithGameCenter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientLoginWithGameCenterRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::LoginWithGameCenter(const struct FClientLoginWithGameCenterRequest& Request, TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "LoginWithGameCenter");

	Params::PlayFabClientAPI_LoginWithGameCenter Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.LoginWithGoogleAccount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientLoginWithGoogleAccountRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::LoginWithGoogleAccount(const struct FClientLoginWithGoogleAccountRequest& Request, TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "LoginWithGoogleAccount");

	Params::PlayFabClientAPI_LoginWithGoogleAccount Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.LoginWithGooglePlayGamesServices
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientLoginWithGooglePlayGamesServicesRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::LoginWithGooglePlayGamesServices(const struct FClientLoginWithGooglePlayGamesServicesRequest& Request, TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "LoginWithGooglePlayGamesServices");

	Params::PlayFabClientAPI_LoginWithGooglePlayGamesServices Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.LoginWithIOSDeviceID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientLoginWithIOSDeviceIDRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::LoginWithIOSDeviceID(const struct FClientLoginWithIOSDeviceIDRequest& Request, TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "LoginWithIOSDeviceID");

	Params::PlayFabClientAPI_LoginWithIOSDeviceID Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.LoginWithKongregate
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientLoginWithKongregateRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::LoginWithKongregate(const struct FClientLoginWithKongregateRequest& Request, TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "LoginWithKongregate");

	Params::PlayFabClientAPI_LoginWithKongregate Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.LoginWithNintendoServiceAccount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientLoginWithNintendoServiceAccountRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::LoginWithNintendoServiceAccount(const struct FClientLoginWithNintendoServiceAccountRequest& Request, TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "LoginWithNintendoServiceAccount");

	Params::PlayFabClientAPI_LoginWithNintendoServiceAccount Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.LoginWithNintendoSwitchDeviceId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientLoginWithNintendoSwitchDeviceIdRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::LoginWithNintendoSwitchDeviceId(const struct FClientLoginWithNintendoSwitchDeviceIdRequest& Request, TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "LoginWithNintendoSwitchDeviceId");

	Params::PlayFabClientAPI_LoginWithNintendoSwitchDeviceId Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.LoginWithOpenIdConnect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientLoginWithOpenIdConnectRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::LoginWithOpenIdConnect(const struct FClientLoginWithOpenIdConnectRequest& Request, TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "LoginWithOpenIdConnect");

	Params::PlayFabClientAPI_LoginWithOpenIdConnect Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.LoginWithPlayFab
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientLoginWithPlayFabRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::LoginWithPlayFab(const struct FClientLoginWithPlayFabRequest& Request, TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "LoginWithPlayFab");

	Params::PlayFabClientAPI_LoginWithPlayFab Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.LoginWithPSN
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientLoginWithPSNRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::LoginWithPSN(const struct FClientLoginWithPSNRequest& Request, TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "LoginWithPSN");

	Params::PlayFabClientAPI_LoginWithPSN Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.LoginWithSteam
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientLoginWithSteamRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::LoginWithSteam(const struct FClientLoginWithSteamRequest& Request, TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "LoginWithSteam");

	Params::PlayFabClientAPI_LoginWithSteam Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.LoginWithTwitch
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientLoginWithTwitchRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::LoginWithTwitch(const struct FClientLoginWithTwitchRequest& Request, TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "LoginWithTwitch");

	Params::PlayFabClientAPI_LoginWithTwitch Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.LoginWithXbox
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientLoginWithXboxRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::LoginWithXbox(const struct FClientLoginWithXboxRequest& Request, TDelegate<void(const struct FClientLoginResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "LoginWithXbox");

	Params::PlayFabClientAPI_LoginWithXbox Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.Matchmake
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientMatchmakeRequest&   Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientMatchmakeResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::Matchmake(const struct FClientMatchmakeRequest& Request, TDelegate<void(const struct FClientMatchmakeResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "Matchmake");

	Params::PlayFabClientAPI_Matchmake Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.OpenTrade
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientOpenTradeRequest&   Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientOpenTradeResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::OpenTrade(const struct FClientOpenTradeRequest& Request, TDelegate<void(const struct FClientOpenTradeResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "OpenTrade");

	Params::PlayFabClientAPI_OpenTrade Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.PayForPurchase
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientPayForPurchaseRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientPayForPurchaseResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::PayForPurchase(const struct FClientPayForPurchaseRequest& Request, TDelegate<void(const struct FClientPayForPurchaseResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "PayForPurchase");

	Params::PlayFabClientAPI_PayForPurchase Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.PurchaseItem
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientPurchaseItemRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientPurchaseItemResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::PurchaseItem(const struct FClientPurchaseItemRequest& Request, TDelegate<void(const struct FClientPurchaseItemResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "PurchaseItem");

	Params::PlayFabClientAPI_PurchaseItem Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.RedeemCoupon
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientRedeemCouponRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientRedeemCouponResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::RedeemCoupon(const struct FClientRedeemCouponRequest& Request, TDelegate<void(const struct FClientRedeemCouponResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "RedeemCoupon");

	Params::PlayFabClientAPI_RedeemCoupon Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.RefreshPSNAuthToken
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientRefreshPSNAuthTokenRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::RefreshPSNAuthToken(const struct FClientRefreshPSNAuthTokenRequest& Request, TDelegate<void(const struct FClientEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "RefreshPSNAuthToken");

	Params::PlayFabClientAPI_RefreshPSNAuthToken Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.RegisterForIOSPushNotification
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientRegisterForIOSPushNotificationRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientRegisterForIOSPushNotificationResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::RegisterForIOSPushNotification(const struct FClientRegisterForIOSPushNotificationRequest& Request, TDelegate<void(const struct FClientRegisterForIOSPushNotificationResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "RegisterForIOSPushNotification");

	Params::PlayFabClientAPI_RegisterForIOSPushNotification Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.RegisterPlayFabUser
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientRegisterPlayFabUserRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientRegisterPlayFabUserResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::RegisterPlayFabUser(const struct FClientRegisterPlayFabUserRequest& Request, TDelegate<void(const struct FClientRegisterPlayFabUserResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "RegisterPlayFabUser");

	Params::PlayFabClientAPI_RegisterPlayFabUser Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.RemoveContactEmail
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientRemoveContactEmailRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientRemoveContactEmailResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::RemoveContactEmail(const struct FClientRemoveContactEmailRequest& Request, TDelegate<void(const struct FClientRemoveContactEmailResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "RemoveContactEmail");

	Params::PlayFabClientAPI_RemoveContactEmail Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.RemoveFriend
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientRemoveFriendRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientRemoveFriendResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::RemoveFriend(const struct FClientRemoveFriendRequest& Request, TDelegate<void(const struct FClientRemoveFriendResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "RemoveFriend");

	Params::PlayFabClientAPI_RemoveFriend Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.RemoveGenericID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientRemoveGenericIDRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientRemoveGenericIDResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::RemoveGenericID(const struct FClientRemoveGenericIDRequest& Request, TDelegate<void(const struct FClientRemoveGenericIDResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "RemoveGenericID");

	Params::PlayFabClientAPI_RemoveGenericID Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.RemoveSharedGroupMembers
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientRemoveSharedGroupMembersRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientRemoveSharedGroupMembersResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::RemoveSharedGroupMembers(const struct FClientRemoveSharedGroupMembersRequest& Request, TDelegate<void(const struct FClientRemoveSharedGroupMembersResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "RemoveSharedGroupMembers");

	Params::PlayFabClientAPI_RemoveSharedGroupMembers Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.ReportAdActivity
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientReportAdActivityRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientReportAdActivityResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::ReportAdActivity(const struct FClientReportAdActivityRequest& Request, TDelegate<void(const struct FClientReportAdActivityResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "ReportAdActivity");

	Params::PlayFabClientAPI_ReportAdActivity Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.ReportDeviceInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientDeviceInfoRequest&  Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::ReportDeviceInfo(const struct FClientDeviceInfoRequest& Request, TDelegate<void(const struct FClientEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "ReportDeviceInfo");

	Params::PlayFabClientAPI_ReportDeviceInfo Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.ReportPlayer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientReportPlayerClientRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientReportPlayerClientResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::ReportPlayer(const struct FClientReportPlayerClientRequest& Request, TDelegate<void(const struct FClientReportPlayerClientResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "ReportPlayer");

	Params::PlayFabClientAPI_ReportPlayer Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.RestoreIOSPurchases
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientRestoreIOSPurchasesRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientRestoreIOSPurchasesResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::RestoreIOSPurchases(const struct FClientRestoreIOSPurchasesRequest& Request, TDelegate<void(const struct FClientRestoreIOSPurchasesResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "RestoreIOSPurchases");

	Params::PlayFabClientAPI_RestoreIOSPurchases Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.RewardAdActivity
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientRewardAdActivityRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientRewardAdActivityResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::RewardAdActivity(const struct FClientRewardAdActivityRequest& Request, TDelegate<void(const struct FClientRewardAdActivityResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "RewardAdActivity");

	Params::PlayFabClientAPI_RewardAdActivity Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.SendAccountRecoveryEmail
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientSendAccountRecoveryEmailRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientSendAccountRecoveryEmailResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::SendAccountRecoveryEmail(const struct FClientSendAccountRecoveryEmailRequest& Request, TDelegate<void(const struct FClientSendAccountRecoveryEmailResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "SendAccountRecoveryEmail");

	Params::PlayFabClientAPI_SendAccountRecoveryEmail Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.SetFriendTags
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientSetFriendTagsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientSetFriendTagsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::SetFriendTags(const struct FClientSetFriendTagsRequest& Request, TDelegate<void(const struct FClientSetFriendTagsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "SetFriendTags");

	Params::PlayFabClientAPI_SetFriendTags Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.SetPlayerSecret
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientSetPlayerSecretRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientSetPlayerSecretResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::SetPlayerSecret(const struct FClientSetPlayerSecretRequest& Request, TDelegate<void(const struct FClientSetPlayerSecretResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "SetPlayerSecret");

	Params::PlayFabClientAPI_SetPlayerSecret Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.StartPurchase
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientStartPurchaseRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientStartPurchaseResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::StartPurchase(const struct FClientStartPurchaseRequest& Request, TDelegate<void(const struct FClientStartPurchaseResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "StartPurchase");

	Params::PlayFabClientAPI_StartPurchase Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.SubtractUserVirtualCurrency
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientSubtractUserVirtualCurrencyRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientModifyUserVirtualCurrencyResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::SubtractUserVirtualCurrency(const struct FClientSubtractUserVirtualCurrencyRequest& Request, TDelegate<void(const struct FClientModifyUserVirtualCurrencyResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "SubtractUserVirtualCurrency");

	Params::PlayFabClientAPI_SubtractUserVirtualCurrency Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.UnlinkAndroidDeviceID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientUnlinkAndroidDeviceIDRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientUnlinkAndroidDeviceIDResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::UnlinkAndroidDeviceID(const struct FClientUnlinkAndroidDeviceIDRequest& Request, TDelegate<void(const struct FClientUnlinkAndroidDeviceIDResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "UnlinkAndroidDeviceID");

	Params::PlayFabClientAPI_UnlinkAndroidDeviceID Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.UnlinkApple
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientUnlinkAppleRequest& Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::UnlinkApple(const struct FClientUnlinkAppleRequest& Request, TDelegate<void(const struct FClientEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "UnlinkApple");

	Params::PlayFabClientAPI_UnlinkApple Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.UnlinkCustomID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientUnlinkCustomIDRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientUnlinkCustomIDResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::UnlinkCustomID(const struct FClientUnlinkCustomIDRequest& Request, TDelegate<void(const struct FClientUnlinkCustomIDResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "UnlinkCustomID");

	Params::PlayFabClientAPI_UnlinkCustomID Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.UnlinkFacebookAccount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientUnlinkFacebookAccountRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientUnlinkFacebookAccountResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::UnlinkFacebookAccount(const struct FClientUnlinkFacebookAccountRequest& Request, TDelegate<void(const struct FClientUnlinkFacebookAccountResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "UnlinkFacebookAccount");

	Params::PlayFabClientAPI_UnlinkFacebookAccount Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.UnlinkFacebookInstantGamesId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientUnlinkFacebookInstantGamesIdRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientUnlinkFacebookInstantGamesIdResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::UnlinkFacebookInstantGamesId(const struct FClientUnlinkFacebookInstantGamesIdRequest& Request, TDelegate<void(const struct FClientUnlinkFacebookInstantGamesIdResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "UnlinkFacebookInstantGamesId");

	Params::PlayFabClientAPI_UnlinkFacebookInstantGamesId Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.UnlinkGameCenterAccount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientUnlinkGameCenterAccountRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientUnlinkGameCenterAccountResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::UnlinkGameCenterAccount(const struct FClientUnlinkGameCenterAccountRequest& Request, TDelegate<void(const struct FClientUnlinkGameCenterAccountResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "UnlinkGameCenterAccount");

	Params::PlayFabClientAPI_UnlinkGameCenterAccount Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.UnlinkGoogleAccount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientUnlinkGoogleAccountRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientUnlinkGoogleAccountResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::UnlinkGoogleAccount(const struct FClientUnlinkGoogleAccountRequest& Request, TDelegate<void(const struct FClientUnlinkGoogleAccountResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "UnlinkGoogleAccount");

	Params::PlayFabClientAPI_UnlinkGoogleAccount Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.UnlinkGooglePlayGamesServicesAccount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientUnlinkGooglePlayGamesServicesAccountRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientUnlinkGooglePlayGamesServicesAccountResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::UnlinkGooglePlayGamesServicesAccount(const struct FClientUnlinkGooglePlayGamesServicesAccountRequest& Request, TDelegate<void(const struct FClientUnlinkGooglePlayGamesServicesAccountResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "UnlinkGooglePlayGamesServicesAccount");

	Params::PlayFabClientAPI_UnlinkGooglePlayGamesServicesAccount Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.UnlinkIOSDeviceID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientUnlinkIOSDeviceIDRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientUnlinkIOSDeviceIDResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::UnlinkIOSDeviceID(const struct FClientUnlinkIOSDeviceIDRequest& Request, TDelegate<void(const struct FClientUnlinkIOSDeviceIDResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "UnlinkIOSDeviceID");

	Params::PlayFabClientAPI_UnlinkIOSDeviceID Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.UnlinkKongregate
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientUnlinkKongregateAccountRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientUnlinkKongregateAccountResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::UnlinkKongregate(const struct FClientUnlinkKongregateAccountRequest& Request, TDelegate<void(const struct FClientUnlinkKongregateAccountResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "UnlinkKongregate");

	Params::PlayFabClientAPI_UnlinkKongregate Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.UnlinkNintendoServiceAccount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientUnlinkNintendoServiceAccountRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::UnlinkNintendoServiceAccount(const struct FClientUnlinkNintendoServiceAccountRequest& Request, TDelegate<void(const struct FClientEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "UnlinkNintendoServiceAccount");

	Params::PlayFabClientAPI_UnlinkNintendoServiceAccount Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.UnlinkNintendoSwitchDeviceId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientUnlinkNintendoSwitchDeviceIdRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientUnlinkNintendoSwitchDeviceIdResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::UnlinkNintendoSwitchDeviceId(const struct FClientUnlinkNintendoSwitchDeviceIdRequest& Request, TDelegate<void(const struct FClientUnlinkNintendoSwitchDeviceIdResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "UnlinkNintendoSwitchDeviceId");

	Params::PlayFabClientAPI_UnlinkNintendoSwitchDeviceId Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.UnlinkOpenIdConnect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientUnlinkOpenIdConnectRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::UnlinkOpenIdConnect(const struct FClientUnlinkOpenIdConnectRequest& Request, TDelegate<void(const struct FClientEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "UnlinkOpenIdConnect");

	Params::PlayFabClientAPI_UnlinkOpenIdConnect Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.UnlinkPSNAccount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientUnlinkPSNAccountRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientUnlinkPSNAccountResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::UnlinkPSNAccount(const struct FClientUnlinkPSNAccountRequest& Request, TDelegate<void(const struct FClientUnlinkPSNAccountResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "UnlinkPSNAccount");

	Params::PlayFabClientAPI_UnlinkPSNAccount Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.UnlinkSteamAccount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientUnlinkSteamAccountRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientUnlinkSteamAccountResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::UnlinkSteamAccount(const struct FClientUnlinkSteamAccountRequest& Request, TDelegate<void(const struct FClientUnlinkSteamAccountResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "UnlinkSteamAccount");

	Params::PlayFabClientAPI_UnlinkSteamAccount Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.UnlinkTwitch
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientUnlinkTwitchAccountRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientUnlinkTwitchAccountResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::UnlinkTwitch(const struct FClientUnlinkTwitchAccountRequest& Request, TDelegate<void(const struct FClientUnlinkTwitchAccountResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "UnlinkTwitch");

	Params::PlayFabClientAPI_UnlinkTwitch Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.UnlinkXboxAccount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientUnlinkXboxAccountRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientUnlinkXboxAccountResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::UnlinkXboxAccount(const struct FClientUnlinkXboxAccountRequest& Request, TDelegate<void(const struct FClientUnlinkXboxAccountResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "UnlinkXboxAccount");

	Params::PlayFabClientAPI_UnlinkXboxAccount Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.UnlockContainerInstance
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientUnlockContainerInstanceRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientUnlockContainerItemResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::UnlockContainerInstance(const struct FClientUnlockContainerInstanceRequest& Request, TDelegate<void(const struct FClientUnlockContainerItemResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "UnlockContainerInstance");

	Params::PlayFabClientAPI_UnlockContainerInstance Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.UnlockContainerItem
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientUnlockContainerItemRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientUnlockContainerItemResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::UnlockContainerItem(const struct FClientUnlockContainerItemRequest& Request, TDelegate<void(const struct FClientUnlockContainerItemResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "UnlockContainerItem");

	Params::PlayFabClientAPI_UnlockContainerItem Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.UpdateAvatarUrl
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientUpdateAvatarUrlRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::UpdateAvatarUrl(const struct FClientUpdateAvatarUrlRequest& Request, TDelegate<void(const struct FClientEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "UpdateAvatarUrl");

	Params::PlayFabClientAPI_UpdateAvatarUrl Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.UpdateCharacterData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientUpdateCharacterDataRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientUpdateCharacterDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::UpdateCharacterData(const struct FClientUpdateCharacterDataRequest& Request, TDelegate<void(const struct FClientUpdateCharacterDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "UpdateCharacterData");

	Params::PlayFabClientAPI_UpdateCharacterData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.UpdateCharacterStatistics
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientUpdateCharacterStatisticsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientUpdateCharacterStatisticsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::UpdateCharacterStatistics(const struct FClientUpdateCharacterStatisticsRequest& Request, TDelegate<void(const struct FClientUpdateCharacterStatisticsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "UpdateCharacterStatistics");

	Params::PlayFabClientAPI_UpdateCharacterStatistics Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.UpdatePlayerStatistics
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientUpdatePlayerStatisticsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientUpdatePlayerStatisticsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::UpdatePlayerStatistics(const struct FClientUpdatePlayerStatisticsRequest& Request, TDelegate<void(const struct FClientUpdatePlayerStatisticsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "UpdatePlayerStatistics");

	Params::PlayFabClientAPI_UpdatePlayerStatistics Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.UpdateSharedGroupData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientUpdateSharedGroupDataRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientUpdateSharedGroupDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::UpdateSharedGroupData(const struct FClientUpdateSharedGroupDataRequest& Request, TDelegate<void(const struct FClientUpdateSharedGroupDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "UpdateSharedGroupData");

	Params::PlayFabClientAPI_UpdateSharedGroupData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.UpdateUserData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientUpdateUserDataRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientUpdateUserDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::UpdateUserData(const struct FClientUpdateUserDataRequest& Request, TDelegate<void(const struct FClientUpdateUserDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "UpdateUserData");

	Params::PlayFabClientAPI_UpdateUserData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.UpdateUserPublisherData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientUpdateUserDataRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientUpdateUserDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::UpdateUserPublisherData(const struct FClientUpdateUserDataRequest& Request, TDelegate<void(const struct FClientUpdateUserDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "UpdateUserPublisherData");

	Params::PlayFabClientAPI_UpdateUserPublisherData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.UpdateUserTitleDisplayName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientUpdateUserTitleDisplayNameRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientUpdateUserTitleDisplayNameResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::UpdateUserTitleDisplayName(const struct FClientUpdateUserTitleDisplayNameRequest& Request, TDelegate<void(const struct FClientUpdateUserTitleDisplayNameResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "UpdateUserTitleDisplayName");

	Params::PlayFabClientAPI_UpdateUserTitleDisplayName Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.ValidateAmazonIAPReceipt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientValidateAmazonReceiptRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientValidateAmazonReceiptResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::ValidateAmazonIAPReceipt(const struct FClientValidateAmazonReceiptRequest& Request, TDelegate<void(const struct FClientValidateAmazonReceiptResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "ValidateAmazonIAPReceipt");

	Params::PlayFabClientAPI_ValidateAmazonIAPReceipt Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.ValidateGooglePlayPurchase
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientValidateGooglePlayPurchaseRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientValidateGooglePlayPurchaseResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::ValidateGooglePlayPurchase(const struct FClientValidateGooglePlayPurchaseRequest& Request, TDelegate<void(const struct FClientValidateGooglePlayPurchaseResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "ValidateGooglePlayPurchase");

	Params::PlayFabClientAPI_ValidateGooglePlayPurchase Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.ValidateIOSReceipt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientValidateIOSReceiptRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientValidateIOSReceiptResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::ValidateIOSReceipt(const struct FClientValidateIOSReceiptRequest& Request, TDelegate<void(const struct FClientValidateIOSReceiptResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "ValidateIOSReceipt");

	Params::PlayFabClientAPI_ValidateIOSReceipt Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.ValidateWindowsStoreReceipt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientValidateWindowsReceiptRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientValidateWindowsReceiptResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::ValidateWindowsStoreReceipt(const struct FClientValidateWindowsReceiptRequest& Request, TDelegate<void(const struct FClientValidateWindowsReceiptResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "ValidateWindowsStoreReceipt");

	Params::PlayFabClientAPI_ValidateWindowsStoreReceipt Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.WriteCharacterEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientWriteClientCharacterEventRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientWriteEventResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::WriteCharacterEvent(const struct FClientWriteClientCharacterEventRequest& Request, TDelegate<void(const struct FClientWriteEventResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "WriteCharacterEvent");

	Params::PlayFabClientAPI_WriteCharacterEvent Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.WritePlayerEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientWriteClientPlayerEventRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientWriteEventResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::WritePlayerEvent(const struct FClientWriteClientPlayerEventRequest& Request, TDelegate<void(const struct FClientWriteEventResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "WritePlayerEvent");

	Params::PlayFabClientAPI_WritePlayerEvent Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.WriteTitleEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FClientWriteTitleEventRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FClientWriteEventResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabClientAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabClientAPI* UPlayFabClientAPI::WriteTitleEvent(const struct FClientWriteTitleEventRequest& Request, TDelegate<void(const struct FClientWriteEventResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientAPI", "WriteTitleEvent");

	Params::PlayFabClientAPI_WriteTitleEvent Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientAPI.HelperAcceptTrade
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperAcceptTrade(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperAcceptTrade");

	Params::PlayFabClientAPI_HelperAcceptTrade Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperAddFriend
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperAddFriend(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperAddFriend");

	Params::PlayFabClientAPI_HelperAddFriend Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperAddGenericID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperAddGenericID(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperAddGenericID");

	Params::PlayFabClientAPI_HelperAddGenericID Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperAddOrUpdateContactEmail
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperAddOrUpdateContactEmail(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperAddOrUpdateContactEmail");

	Params::PlayFabClientAPI_HelperAddOrUpdateContactEmail Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperAddSharedGroupMembers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperAddSharedGroupMembers(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperAddSharedGroupMembers");

	Params::PlayFabClientAPI_HelperAddSharedGroupMembers Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperAddUsernamePassword
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperAddUsernamePassword(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperAddUsernamePassword");

	Params::PlayFabClientAPI_HelperAddUsernamePassword Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperAddUserVirtualCurrency
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperAddUserVirtualCurrency(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperAddUserVirtualCurrency");

	Params::PlayFabClientAPI_HelperAddUserVirtualCurrency Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperAndroidDevicePushNotificationRegistration
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperAndroidDevicePushNotificationRegistration(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperAndroidDevicePushNotificationRegistration");

	Params::PlayFabClientAPI_HelperAndroidDevicePushNotificationRegistration Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperAttributeInstall
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperAttributeInstall(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperAttributeInstall");

	Params::PlayFabClientAPI_HelperAttributeInstall Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperCancelTrade
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperCancelTrade(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperCancelTrade");

	Params::PlayFabClientAPI_HelperCancelTrade Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperConfirmPurchase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperConfirmPurchase(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperConfirmPurchase");

	Params::PlayFabClientAPI_HelperConfirmPurchase Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperConsumeItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperConsumeItem(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperConsumeItem");

	Params::PlayFabClientAPI_HelperConsumeItem Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperConsumeMicrosoftStoreEntitlements
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperConsumeMicrosoftStoreEntitlements(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperConsumeMicrosoftStoreEntitlements");

	Params::PlayFabClientAPI_HelperConsumeMicrosoftStoreEntitlements Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperConsumePS5Entitlements
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperConsumePS5Entitlements(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperConsumePS5Entitlements");

	Params::PlayFabClientAPI_HelperConsumePS5Entitlements Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperConsumePSNEntitlements
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperConsumePSNEntitlements(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperConsumePSNEntitlements");

	Params::PlayFabClientAPI_HelperConsumePSNEntitlements Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperConsumeXboxEntitlements
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperConsumeXboxEntitlements(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperConsumeXboxEntitlements");

	Params::PlayFabClientAPI_HelperConsumeXboxEntitlements Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperCreateSharedGroup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperCreateSharedGroup(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperCreateSharedGroup");

	Params::PlayFabClientAPI_HelperCreateSharedGroup Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperExecuteCloudScript
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperExecuteCloudScript(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperExecuteCloudScript");

	Params::PlayFabClientAPI_HelperExecuteCloudScript Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetAccountInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetAccountInfo(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetAccountInfo");

	Params::PlayFabClientAPI_HelperGetAccountInfo Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetAdPlacements
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetAdPlacements(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetAdPlacements");

	Params::PlayFabClientAPI_HelperGetAdPlacements Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetAllUsersCharacters
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetAllUsersCharacters(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetAllUsersCharacters");

	Params::PlayFabClientAPI_HelperGetAllUsersCharacters Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetCatalogItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetCatalogItems(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetCatalogItems");

	Params::PlayFabClientAPI_HelperGetCatalogItems Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetCharacterData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetCharacterData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetCharacterData");

	Params::PlayFabClientAPI_HelperGetCharacterData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetCharacterInventory
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetCharacterInventory(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetCharacterInventory");

	Params::PlayFabClientAPI_HelperGetCharacterInventory Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetCharacterLeaderboard
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetCharacterLeaderboard(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetCharacterLeaderboard");

	Params::PlayFabClientAPI_HelperGetCharacterLeaderboard Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetCharacterReadOnlyData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetCharacterReadOnlyData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetCharacterReadOnlyData");

	Params::PlayFabClientAPI_HelperGetCharacterReadOnlyData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetCharacterStatistics
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetCharacterStatistics(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetCharacterStatistics");

	Params::PlayFabClientAPI_HelperGetCharacterStatistics Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetContentDownloadUrl
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetContentDownloadUrl(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetContentDownloadUrl");

	Params::PlayFabClientAPI_HelperGetContentDownloadUrl Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetCurrentGames
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetCurrentGames(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetCurrentGames");

	Params::PlayFabClientAPI_HelperGetCurrentGames Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetFriendLeaderboard
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetFriendLeaderboard(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetFriendLeaderboard");

	Params::PlayFabClientAPI_HelperGetFriendLeaderboard Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetFriendLeaderboardAroundPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetFriendLeaderboardAroundPlayer(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetFriendLeaderboardAroundPlayer");

	Params::PlayFabClientAPI_HelperGetFriendLeaderboardAroundPlayer Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetFriendsList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetFriendsList(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetFriendsList");

	Params::PlayFabClientAPI_HelperGetFriendsList Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetGameServerRegions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetGameServerRegions(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetGameServerRegions");

	Params::PlayFabClientAPI_HelperGetGameServerRegions Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetLeaderboard
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetLeaderboard(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetLeaderboard");

	Params::PlayFabClientAPI_HelperGetLeaderboard Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetLeaderboardAroundCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetLeaderboardAroundCharacter(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetLeaderboardAroundCharacter");

	Params::PlayFabClientAPI_HelperGetLeaderboardAroundCharacter Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetLeaderboardAroundPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetLeaderboardAroundPlayer(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetLeaderboardAroundPlayer");

	Params::PlayFabClientAPI_HelperGetLeaderboardAroundPlayer Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetLeaderboardForUserCharacters
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetLeaderboardForUserCharacters(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetLeaderboardForUserCharacters");

	Params::PlayFabClientAPI_HelperGetLeaderboardForUserCharacters Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetPaymentToken
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetPaymentToken(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetPaymentToken");

	Params::PlayFabClientAPI_HelperGetPaymentToken Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetPhotonAuthenticationToken
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetPhotonAuthenticationToken(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetPhotonAuthenticationToken");

	Params::PlayFabClientAPI_HelperGetPhotonAuthenticationToken Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetPlayerCombinedInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetPlayerCombinedInfo(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetPlayerCombinedInfo");

	Params::PlayFabClientAPI_HelperGetPlayerCombinedInfo Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetPlayerProfile
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetPlayerProfile(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetPlayerProfile");

	Params::PlayFabClientAPI_HelperGetPlayerProfile Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetPlayerSegments
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetPlayerSegments(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetPlayerSegments");

	Params::PlayFabClientAPI_HelperGetPlayerSegments Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetPlayerStatistics
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetPlayerStatistics(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetPlayerStatistics");

	Params::PlayFabClientAPI_HelperGetPlayerStatistics Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetPlayerStatisticVersions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetPlayerStatisticVersions(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetPlayerStatisticVersions");

	Params::PlayFabClientAPI_HelperGetPlayerStatisticVersions Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetPlayerTags
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetPlayerTags(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetPlayerTags");

	Params::PlayFabClientAPI_HelperGetPlayerTags Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetPlayerTrades
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetPlayerTrades(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetPlayerTrades");

	Params::PlayFabClientAPI_HelperGetPlayerTrades Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromFacebookIDs
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetPlayFabIDsFromFacebookIDs(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetPlayFabIDsFromFacebookIDs");

	Params::PlayFabClientAPI_HelperGetPlayFabIDsFromFacebookIDs Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromFacebookInstantGamesIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetPlayFabIDsFromFacebookInstantGamesIds(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetPlayFabIDsFromFacebookInstantGamesIds");

	Params::PlayFabClientAPI_HelperGetPlayFabIDsFromFacebookInstantGamesIds Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromGameCenterIDs
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetPlayFabIDsFromGameCenterIDs(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetPlayFabIDsFromGameCenterIDs");

	Params::PlayFabClientAPI_HelperGetPlayFabIDsFromGameCenterIDs Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromGenericIDs
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetPlayFabIDsFromGenericIDs(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetPlayFabIDsFromGenericIDs");

	Params::PlayFabClientAPI_HelperGetPlayFabIDsFromGenericIDs Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromGoogleIDs
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetPlayFabIDsFromGoogleIDs(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetPlayFabIDsFromGoogleIDs");

	Params::PlayFabClientAPI_HelperGetPlayFabIDsFromGoogleIDs Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromGooglePlayGamesPlayerIDs
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetPlayFabIDsFromGooglePlayGamesPlayerIDs(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetPlayFabIDsFromGooglePlayGamesPlayerIDs");

	Params::PlayFabClientAPI_HelperGetPlayFabIDsFromGooglePlayGamesPlayerIDs Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromKongregateIDs
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetPlayFabIDsFromKongregateIDs(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetPlayFabIDsFromKongregateIDs");

	Params::PlayFabClientAPI_HelperGetPlayFabIDsFromKongregateIDs Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromNintendoServiceAccountIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetPlayFabIDsFromNintendoServiceAccountIds(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetPlayFabIDsFromNintendoServiceAccountIds");

	Params::PlayFabClientAPI_HelperGetPlayFabIDsFromNintendoServiceAccountIds Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromNintendoSwitchDeviceIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetPlayFabIDsFromNintendoSwitchDeviceIds(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetPlayFabIDsFromNintendoSwitchDeviceIds");

	Params::PlayFabClientAPI_HelperGetPlayFabIDsFromNintendoSwitchDeviceIds Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromPSNAccountIDs
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetPlayFabIDsFromPSNAccountIDs(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetPlayFabIDsFromPSNAccountIDs");

	Params::PlayFabClientAPI_HelperGetPlayFabIDsFromPSNAccountIDs Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromSteamIDs
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetPlayFabIDsFromSteamIDs(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetPlayFabIDsFromSteamIDs");

	Params::PlayFabClientAPI_HelperGetPlayFabIDsFromSteamIDs Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromTwitchIDs
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetPlayFabIDsFromTwitchIDs(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetPlayFabIDsFromTwitchIDs");

	Params::PlayFabClientAPI_HelperGetPlayFabIDsFromTwitchIDs Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetPlayFabIDsFromXboxLiveIDs
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetPlayFabIDsFromXboxLiveIDs(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetPlayFabIDsFromXboxLiveIDs");

	Params::PlayFabClientAPI_HelperGetPlayFabIDsFromXboxLiveIDs Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetPublisherData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetPublisherData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetPublisherData");

	Params::PlayFabClientAPI_HelperGetPublisherData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetPurchase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetPurchase(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetPurchase");

	Params::PlayFabClientAPI_HelperGetPurchase Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetSharedGroupData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetSharedGroupData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetSharedGroupData");

	Params::PlayFabClientAPI_HelperGetSharedGroupData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetStoreItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetStoreItems(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetStoreItems");

	Params::PlayFabClientAPI_HelperGetStoreItems Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetTime(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetTime");

	Params::PlayFabClientAPI_HelperGetTime Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetTitleData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetTitleData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetTitleData");

	Params::PlayFabClientAPI_HelperGetTitleData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetTitleNews
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetTitleNews(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetTitleNews");

	Params::PlayFabClientAPI_HelperGetTitleNews Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetTitlePublicKey
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetTitlePublicKey(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetTitlePublicKey");

	Params::PlayFabClientAPI_HelperGetTitlePublicKey Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetTradeStatus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetTradeStatus(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetTradeStatus");

	Params::PlayFabClientAPI_HelperGetTradeStatus Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetUserData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetUserData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetUserData");

	Params::PlayFabClientAPI_HelperGetUserData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetUserInventory
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetUserInventory(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetUserInventory");

	Params::PlayFabClientAPI_HelperGetUserInventory Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetUserPublisherData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetUserPublisherData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetUserPublisherData");

	Params::PlayFabClientAPI_HelperGetUserPublisherData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetUserPublisherReadOnlyData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetUserPublisherReadOnlyData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetUserPublisherReadOnlyData");

	Params::PlayFabClientAPI_HelperGetUserPublisherReadOnlyData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGetUserReadOnlyData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGetUserReadOnlyData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGetUserReadOnlyData");

	Params::PlayFabClientAPI_HelperGetUserReadOnlyData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperGrantCharacterToUser
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperGrantCharacterToUser(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperGrantCharacterToUser");

	Params::PlayFabClientAPI_HelperGrantCharacterToUser Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperLinkAndroidDeviceID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperLinkAndroidDeviceID(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperLinkAndroidDeviceID");

	Params::PlayFabClientAPI_HelperLinkAndroidDeviceID Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperLinkApple
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperLinkApple(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperLinkApple");

	Params::PlayFabClientAPI_HelperLinkApple Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperLinkCustomID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperLinkCustomID(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperLinkCustomID");

	Params::PlayFabClientAPI_HelperLinkCustomID Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperLinkFacebookAccount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperLinkFacebookAccount(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperLinkFacebookAccount");

	Params::PlayFabClientAPI_HelperLinkFacebookAccount Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperLinkFacebookInstantGamesId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperLinkFacebookInstantGamesId(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperLinkFacebookInstantGamesId");

	Params::PlayFabClientAPI_HelperLinkFacebookInstantGamesId Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperLinkGameCenterAccount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperLinkGameCenterAccount(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperLinkGameCenterAccount");

	Params::PlayFabClientAPI_HelperLinkGameCenterAccount Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperLinkGoogleAccount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperLinkGoogleAccount(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperLinkGoogleAccount");

	Params::PlayFabClientAPI_HelperLinkGoogleAccount Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperLinkGooglePlayGamesServicesAccount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperLinkGooglePlayGamesServicesAccount(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperLinkGooglePlayGamesServicesAccount");

	Params::PlayFabClientAPI_HelperLinkGooglePlayGamesServicesAccount Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperLinkIOSDeviceID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperLinkIOSDeviceID(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperLinkIOSDeviceID");

	Params::PlayFabClientAPI_HelperLinkIOSDeviceID Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperLinkKongregate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperLinkKongregate(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperLinkKongregate");

	Params::PlayFabClientAPI_HelperLinkKongregate Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperLinkNintendoServiceAccount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperLinkNintendoServiceAccount(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperLinkNintendoServiceAccount");

	Params::PlayFabClientAPI_HelperLinkNintendoServiceAccount Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperLinkNintendoSwitchDeviceId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperLinkNintendoSwitchDeviceId(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperLinkNintendoSwitchDeviceId");

	Params::PlayFabClientAPI_HelperLinkNintendoSwitchDeviceId Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperLinkOpenIdConnect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperLinkOpenIdConnect(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperLinkOpenIdConnect");

	Params::PlayFabClientAPI_HelperLinkOpenIdConnect Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperLinkPSNAccount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperLinkPSNAccount(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperLinkPSNAccount");

	Params::PlayFabClientAPI_HelperLinkPSNAccount Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperLinkSteamAccount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperLinkSteamAccount(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperLinkSteamAccount");

	Params::PlayFabClientAPI_HelperLinkSteamAccount Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperLinkTwitch
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperLinkTwitch(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperLinkTwitch");

	Params::PlayFabClientAPI_HelperLinkTwitch Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperLinkXboxAccount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperLinkXboxAccount(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperLinkXboxAccount");

	Params::PlayFabClientAPI_HelperLinkXboxAccount Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperLoginWithAndroidDeviceID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperLoginWithAndroidDeviceID(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperLoginWithAndroidDeviceID");

	Params::PlayFabClientAPI_HelperLoginWithAndroidDeviceID Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperLoginWithApple
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperLoginWithApple(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperLoginWithApple");

	Params::PlayFabClientAPI_HelperLoginWithApple Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperLoginWithCustomID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperLoginWithCustomID(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperLoginWithCustomID");

	Params::PlayFabClientAPI_HelperLoginWithCustomID Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperLoginWithEmailAddress
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperLoginWithEmailAddress(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperLoginWithEmailAddress");

	Params::PlayFabClientAPI_HelperLoginWithEmailAddress Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperLoginWithFacebook
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperLoginWithFacebook(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperLoginWithFacebook");

	Params::PlayFabClientAPI_HelperLoginWithFacebook Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperLoginWithFacebookInstantGamesId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperLoginWithFacebookInstantGamesId(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperLoginWithFacebookInstantGamesId");

	Params::PlayFabClientAPI_HelperLoginWithFacebookInstantGamesId Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperLoginWithGameCenter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperLoginWithGameCenter(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperLoginWithGameCenter");

	Params::PlayFabClientAPI_HelperLoginWithGameCenter Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperLoginWithGoogleAccount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperLoginWithGoogleAccount(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperLoginWithGoogleAccount");

	Params::PlayFabClientAPI_HelperLoginWithGoogleAccount Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperLoginWithGooglePlayGamesServices
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperLoginWithGooglePlayGamesServices(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperLoginWithGooglePlayGamesServices");

	Params::PlayFabClientAPI_HelperLoginWithGooglePlayGamesServices Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperLoginWithIOSDeviceID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperLoginWithIOSDeviceID(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperLoginWithIOSDeviceID");

	Params::PlayFabClientAPI_HelperLoginWithIOSDeviceID Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperLoginWithKongregate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperLoginWithKongregate(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperLoginWithKongregate");

	Params::PlayFabClientAPI_HelperLoginWithKongregate Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperLoginWithNintendoServiceAccount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperLoginWithNintendoServiceAccount(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperLoginWithNintendoServiceAccount");

	Params::PlayFabClientAPI_HelperLoginWithNintendoServiceAccount Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperLoginWithNintendoSwitchDeviceId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperLoginWithNintendoSwitchDeviceId(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperLoginWithNintendoSwitchDeviceId");

	Params::PlayFabClientAPI_HelperLoginWithNintendoSwitchDeviceId Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperLoginWithOpenIdConnect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperLoginWithOpenIdConnect(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperLoginWithOpenIdConnect");

	Params::PlayFabClientAPI_HelperLoginWithOpenIdConnect Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperLoginWithPlayFab
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperLoginWithPlayFab(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperLoginWithPlayFab");

	Params::PlayFabClientAPI_HelperLoginWithPlayFab Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperLoginWithPSN
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperLoginWithPSN(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperLoginWithPSN");

	Params::PlayFabClientAPI_HelperLoginWithPSN Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperLoginWithSteam
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperLoginWithSteam(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperLoginWithSteam");

	Params::PlayFabClientAPI_HelperLoginWithSteam Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperLoginWithTwitch
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperLoginWithTwitch(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperLoginWithTwitch");

	Params::PlayFabClientAPI_HelperLoginWithTwitch Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperLoginWithXbox
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperLoginWithXbox(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperLoginWithXbox");

	Params::PlayFabClientAPI_HelperLoginWithXbox Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperMatchmake
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperMatchmake(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperMatchmake");

	Params::PlayFabClientAPI_HelperMatchmake Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperOpenTrade
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperOpenTrade(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperOpenTrade");

	Params::PlayFabClientAPI_HelperOpenTrade Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperPayForPurchase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperPayForPurchase(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperPayForPurchase");

	Params::PlayFabClientAPI_HelperPayForPurchase Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperPurchaseItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperPurchaseItem(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperPurchaseItem");

	Params::PlayFabClientAPI_HelperPurchaseItem Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperRedeemCoupon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperRedeemCoupon(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperRedeemCoupon");

	Params::PlayFabClientAPI_HelperRedeemCoupon Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperRefreshPSNAuthToken
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperRefreshPSNAuthToken(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperRefreshPSNAuthToken");

	Params::PlayFabClientAPI_HelperRefreshPSNAuthToken Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperRegisterForIOSPushNotification
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperRegisterForIOSPushNotification(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperRegisterForIOSPushNotification");

	Params::PlayFabClientAPI_HelperRegisterForIOSPushNotification Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperRegisterPlayFabUser
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperRegisterPlayFabUser(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperRegisterPlayFabUser");

	Params::PlayFabClientAPI_HelperRegisterPlayFabUser Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperRemoveContactEmail
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperRemoveContactEmail(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperRemoveContactEmail");

	Params::PlayFabClientAPI_HelperRemoveContactEmail Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperRemoveFriend
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperRemoveFriend(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperRemoveFriend");

	Params::PlayFabClientAPI_HelperRemoveFriend Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperRemoveGenericID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperRemoveGenericID(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperRemoveGenericID");

	Params::PlayFabClientAPI_HelperRemoveGenericID Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperRemoveSharedGroupMembers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperRemoveSharedGroupMembers(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperRemoveSharedGroupMembers");

	Params::PlayFabClientAPI_HelperRemoveSharedGroupMembers Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperReportAdActivity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperReportAdActivity(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperReportAdActivity");

	Params::PlayFabClientAPI_HelperReportAdActivity Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperReportDeviceInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperReportDeviceInfo(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperReportDeviceInfo");

	Params::PlayFabClientAPI_HelperReportDeviceInfo Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperReportPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperReportPlayer(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperReportPlayer");

	Params::PlayFabClientAPI_HelperReportPlayer Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperRestoreIOSPurchases
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperRestoreIOSPurchases(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperRestoreIOSPurchases");

	Params::PlayFabClientAPI_HelperRestoreIOSPurchases Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperRewardAdActivity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperRewardAdActivity(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperRewardAdActivity");

	Params::PlayFabClientAPI_HelperRewardAdActivity Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperSendAccountRecoveryEmail
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperSendAccountRecoveryEmail(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperSendAccountRecoveryEmail");

	Params::PlayFabClientAPI_HelperSendAccountRecoveryEmail Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperSetFriendTags
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperSetFriendTags(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperSetFriendTags");

	Params::PlayFabClientAPI_HelperSetFriendTags Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperSetPlayerSecret
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperSetPlayerSecret(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperSetPlayerSecret");

	Params::PlayFabClientAPI_HelperSetPlayerSecret Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperStartPurchase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperStartPurchase(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperStartPurchase");

	Params::PlayFabClientAPI_HelperStartPurchase Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperSubtractUserVirtualCurrency
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperSubtractUserVirtualCurrency(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperSubtractUserVirtualCurrency");

	Params::PlayFabClientAPI_HelperSubtractUserVirtualCurrency Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperUnlinkAndroidDeviceID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperUnlinkAndroidDeviceID(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperUnlinkAndroidDeviceID");

	Params::PlayFabClientAPI_HelperUnlinkAndroidDeviceID Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperUnlinkApple
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperUnlinkApple(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperUnlinkApple");

	Params::PlayFabClientAPI_HelperUnlinkApple Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperUnlinkCustomID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperUnlinkCustomID(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperUnlinkCustomID");

	Params::PlayFabClientAPI_HelperUnlinkCustomID Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperUnlinkFacebookAccount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperUnlinkFacebookAccount(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperUnlinkFacebookAccount");

	Params::PlayFabClientAPI_HelperUnlinkFacebookAccount Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperUnlinkFacebookInstantGamesId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperUnlinkFacebookInstantGamesId(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperUnlinkFacebookInstantGamesId");

	Params::PlayFabClientAPI_HelperUnlinkFacebookInstantGamesId Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperUnlinkGameCenterAccount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperUnlinkGameCenterAccount(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperUnlinkGameCenterAccount");

	Params::PlayFabClientAPI_HelperUnlinkGameCenterAccount Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperUnlinkGoogleAccount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperUnlinkGoogleAccount(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperUnlinkGoogleAccount");

	Params::PlayFabClientAPI_HelperUnlinkGoogleAccount Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperUnlinkGooglePlayGamesServicesAccount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperUnlinkGooglePlayGamesServicesAccount(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperUnlinkGooglePlayGamesServicesAccount");

	Params::PlayFabClientAPI_HelperUnlinkGooglePlayGamesServicesAccount Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperUnlinkIOSDeviceID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperUnlinkIOSDeviceID(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperUnlinkIOSDeviceID");

	Params::PlayFabClientAPI_HelperUnlinkIOSDeviceID Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperUnlinkKongregate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperUnlinkKongregate(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperUnlinkKongregate");

	Params::PlayFabClientAPI_HelperUnlinkKongregate Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperUnlinkNintendoServiceAccount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperUnlinkNintendoServiceAccount(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperUnlinkNintendoServiceAccount");

	Params::PlayFabClientAPI_HelperUnlinkNintendoServiceAccount Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperUnlinkNintendoSwitchDeviceId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperUnlinkNintendoSwitchDeviceId(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperUnlinkNintendoSwitchDeviceId");

	Params::PlayFabClientAPI_HelperUnlinkNintendoSwitchDeviceId Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperUnlinkOpenIdConnect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperUnlinkOpenIdConnect(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperUnlinkOpenIdConnect");

	Params::PlayFabClientAPI_HelperUnlinkOpenIdConnect Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperUnlinkPSNAccount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperUnlinkPSNAccount(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperUnlinkPSNAccount");

	Params::PlayFabClientAPI_HelperUnlinkPSNAccount Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperUnlinkSteamAccount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperUnlinkSteamAccount(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperUnlinkSteamAccount");

	Params::PlayFabClientAPI_HelperUnlinkSteamAccount Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperUnlinkTwitch
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperUnlinkTwitch(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperUnlinkTwitch");

	Params::PlayFabClientAPI_HelperUnlinkTwitch Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperUnlinkXboxAccount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperUnlinkXboxAccount(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperUnlinkXboxAccount");

	Params::PlayFabClientAPI_HelperUnlinkXboxAccount Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperUnlockContainerInstance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperUnlockContainerInstance(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperUnlockContainerInstance");

	Params::PlayFabClientAPI_HelperUnlockContainerInstance Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperUnlockContainerItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperUnlockContainerItem(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperUnlockContainerItem");

	Params::PlayFabClientAPI_HelperUnlockContainerItem Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperUpdateAvatarUrl
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperUpdateAvatarUrl(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperUpdateAvatarUrl");

	Params::PlayFabClientAPI_HelperUpdateAvatarUrl Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperUpdateCharacterData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperUpdateCharacterData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperUpdateCharacterData");

	Params::PlayFabClientAPI_HelperUpdateCharacterData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperUpdateCharacterStatistics
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperUpdateCharacterStatistics(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperUpdateCharacterStatistics");

	Params::PlayFabClientAPI_HelperUpdateCharacterStatistics Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperUpdatePlayerStatistics
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperUpdatePlayerStatistics(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperUpdatePlayerStatistics");

	Params::PlayFabClientAPI_HelperUpdatePlayerStatistics Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperUpdateSharedGroupData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperUpdateSharedGroupData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperUpdateSharedGroupData");

	Params::PlayFabClientAPI_HelperUpdateSharedGroupData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperUpdateUserData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperUpdateUserData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperUpdateUserData");

	Params::PlayFabClientAPI_HelperUpdateUserData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperUpdateUserPublisherData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperUpdateUserPublisherData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperUpdateUserPublisherData");

	Params::PlayFabClientAPI_HelperUpdateUserPublisherData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperUpdateUserTitleDisplayName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperUpdateUserTitleDisplayName(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperUpdateUserTitleDisplayName");

	Params::PlayFabClientAPI_HelperUpdateUserTitleDisplayName Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperValidateAmazonIAPReceipt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperValidateAmazonIAPReceipt(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperValidateAmazonIAPReceipt");

	Params::PlayFabClientAPI_HelperValidateAmazonIAPReceipt Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperValidateGooglePlayPurchase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperValidateGooglePlayPurchase(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperValidateGooglePlayPurchase");

	Params::PlayFabClientAPI_HelperValidateGooglePlayPurchase Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperValidateIOSReceipt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperValidateIOSReceipt(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperValidateIOSReceipt");

	Params::PlayFabClientAPI_HelperValidateIOSReceipt Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperValidateWindowsStoreReceipt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperValidateWindowsStoreReceipt(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperValidateWindowsStoreReceipt");

	Params::PlayFabClientAPI_HelperValidateWindowsStoreReceipt Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperWriteCharacterEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperWriteCharacterEvent(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperWriteCharacterEvent");

	Params::PlayFabClientAPI_HelperWriteCharacterEvent Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperWritePlayerEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperWritePlayerEvent(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperWritePlayerEvent");

	Params::PlayFabClientAPI_HelperWritePlayerEvent Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientAPI.HelperWriteTitleEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabClientAPI::HelperWriteTitleEvent(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabClientAPI", "HelperWriteTitleEvent");

	Params::PlayFabClientAPI_HelperWriteTitleEvent Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeAcceptTradeResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientAcceptTradeResponse       ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientAcceptTradeResponse UPlayFabClientModelDecoder::decodeAcceptTradeResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeAcceptTradeResponseResponse");

	Params::PlayFabClientModelDecoder_decodeAcceptTradeResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeAddFriendResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientAddFriendResult           ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientAddFriendResult UPlayFabClientModelDecoder::decodeAddFriendResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeAddFriendResultResponse");

	Params::PlayFabClientModelDecoder_decodeAddFriendResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeAddGenericIDResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientAddGenericIDResult        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientAddGenericIDResult UPlayFabClientModelDecoder::decodeAddGenericIDResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeAddGenericIDResultResponse");

	Params::PlayFabClientModelDecoder_decodeAddGenericIDResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeAddOrUpdateContactEmailResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientAddOrUpdateContactEmailResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientAddOrUpdateContactEmailResult UPlayFabClientModelDecoder::decodeAddOrUpdateContactEmailResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeAddOrUpdateContactEmailResultResponse");

	Params::PlayFabClientModelDecoder_decodeAddOrUpdateContactEmailResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeAddSharedGroupMembersResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientAddSharedGroupMembersResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientAddSharedGroupMembersResult UPlayFabClientModelDecoder::decodeAddSharedGroupMembersResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeAddSharedGroupMembersResultResponse");

	Params::PlayFabClientModelDecoder_decodeAddSharedGroupMembersResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeAddUsernamePasswordResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientAddUsernamePasswordResult ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientAddUsernamePasswordResult UPlayFabClientModelDecoder::decodeAddUsernamePasswordResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeAddUsernamePasswordResultResponse");

	Params::PlayFabClientModelDecoder_decodeAddUsernamePasswordResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeAndroidDevicePushNotificationRegistrationResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientAndroidDevicePushNotificationRegistrationResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientAndroidDevicePushNotificationRegistrationResult UPlayFabClientModelDecoder::decodeAndroidDevicePushNotificationRegistrationResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeAndroidDevicePushNotificationRegistrationResultResponse");

	Params::PlayFabClientModelDecoder_decodeAndroidDevicePushNotificationRegistrationResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeAttributeInstallResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientAttributeInstallResult    ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientAttributeInstallResult UPlayFabClientModelDecoder::decodeAttributeInstallResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeAttributeInstallResultResponse");

	Params::PlayFabClientModelDecoder_decodeAttributeInstallResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeCancelTradeResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientCancelTradeResponse       ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientCancelTradeResponse UPlayFabClientModelDecoder::decodeCancelTradeResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeCancelTradeResponseResponse");

	Params::PlayFabClientModelDecoder_decodeCancelTradeResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeConfirmPurchaseResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientConfirmPurchaseResult     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientConfirmPurchaseResult UPlayFabClientModelDecoder::decodeConfirmPurchaseResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeConfirmPurchaseResultResponse");

	Params::PlayFabClientModelDecoder_decodeConfirmPurchaseResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeConsumeItemResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientConsumeItemResult         ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientConsumeItemResult UPlayFabClientModelDecoder::decodeConsumeItemResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeConsumeItemResultResponse");

	Params::PlayFabClientModelDecoder_decodeConsumeItemResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeConsumeMicrosoftStoreEntitlementsResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientConsumeMicrosoftStoreEntitlementsResponseReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientConsumeMicrosoftStoreEntitlementsResponse UPlayFabClientModelDecoder::decodeConsumeMicrosoftStoreEntitlementsResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeConsumeMicrosoftStoreEntitlementsResponseResponse");

	Params::PlayFabClientModelDecoder_decodeConsumeMicrosoftStoreEntitlementsResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeConsumePS5EntitlementsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientConsumePS5EntitlementsResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientConsumePS5EntitlementsResult UPlayFabClientModelDecoder::decodeConsumePS5EntitlementsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeConsumePS5EntitlementsResultResponse");

	Params::PlayFabClientModelDecoder_decodeConsumePS5EntitlementsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeConsumePSNEntitlementsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientConsumePSNEntitlementsResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientConsumePSNEntitlementsResult UPlayFabClientModelDecoder::decodeConsumePSNEntitlementsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeConsumePSNEntitlementsResultResponse");

	Params::PlayFabClientModelDecoder_decodeConsumePSNEntitlementsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeConsumeXboxEntitlementsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientConsumeXboxEntitlementsResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientConsumeXboxEntitlementsResult UPlayFabClientModelDecoder::decodeConsumeXboxEntitlementsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeConsumeXboxEntitlementsResultResponse");

	Params::PlayFabClientModelDecoder_decodeConsumeXboxEntitlementsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeCreateSharedGroupResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientCreateSharedGroupResult   ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientCreateSharedGroupResult UPlayFabClientModelDecoder::decodeCreateSharedGroupResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeCreateSharedGroupResultResponse");

	Params::PlayFabClientModelDecoder_decodeCreateSharedGroupResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeCurrentGamesResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientCurrentGamesResult        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientCurrentGamesResult UPlayFabClientModelDecoder::decodeCurrentGamesResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeCurrentGamesResultResponse");

	Params::PlayFabClientModelDecoder_decodeCurrentGamesResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeEmptyResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientEmptyResponse             ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientEmptyResponse UPlayFabClientModelDecoder::decodeEmptyResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeEmptyResponseResponse");

	Params::PlayFabClientModelDecoder_decodeEmptyResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeEmptyResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientEmptyResult               ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientEmptyResult UPlayFabClientModelDecoder::decodeEmptyResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeEmptyResultResponse");

	Params::PlayFabClientModelDecoder_decodeEmptyResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeExecuteCloudScriptResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientExecuteCloudScriptResult  ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientExecuteCloudScriptResult UPlayFabClientModelDecoder::decodeExecuteCloudScriptResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeExecuteCloudScriptResultResponse");

	Params::PlayFabClientModelDecoder_decodeExecuteCloudScriptResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGameServerRegionsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGameServerRegionsResult   ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientGameServerRegionsResult UPlayFabClientModelDecoder::decodeGameServerRegionsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGameServerRegionsResultResponse");

	Params::PlayFabClientModelDecoder_decodeGameServerRegionsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGetAccountInfoResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGetAccountInfoResult      ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientGetAccountInfoResult UPlayFabClientModelDecoder::decodeGetAccountInfoResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGetAccountInfoResultResponse");

	Params::PlayFabClientModelDecoder_decodeGetAccountInfoResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGetAdPlacementsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGetAdPlacementsResult     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientGetAdPlacementsResult UPlayFabClientModelDecoder::decodeGetAdPlacementsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGetAdPlacementsResultResponse");

	Params::PlayFabClientModelDecoder_decodeGetAdPlacementsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGetCatalogItemsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGetCatalogItemsResult     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientGetCatalogItemsResult UPlayFabClientModelDecoder::decodeGetCatalogItemsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGetCatalogItemsResultResponse");

	Params::PlayFabClientModelDecoder_decodeGetCatalogItemsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGetCharacterDataResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGetCharacterDataResult    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientGetCharacterDataResult UPlayFabClientModelDecoder::decodeGetCharacterDataResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGetCharacterDataResultResponse");

	Params::PlayFabClientModelDecoder_decodeGetCharacterDataResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGetCharacterInventoryResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGetCharacterInventoryResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientGetCharacterInventoryResult UPlayFabClientModelDecoder::decodeGetCharacterInventoryResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGetCharacterInventoryResultResponse");

	Params::PlayFabClientModelDecoder_decodeGetCharacterInventoryResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGetCharacterLeaderboardResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGetCharacterLeaderboardResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientGetCharacterLeaderboardResult UPlayFabClientModelDecoder::decodeGetCharacterLeaderboardResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGetCharacterLeaderboardResultResponse");

	Params::PlayFabClientModelDecoder_decodeGetCharacterLeaderboardResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGetCharacterStatisticsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGetCharacterStatisticsResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientGetCharacterStatisticsResult UPlayFabClientModelDecoder::decodeGetCharacterStatisticsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGetCharacterStatisticsResultResponse");

	Params::PlayFabClientModelDecoder_decodeGetCharacterStatisticsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGetContentDownloadUrlResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGetContentDownloadUrlResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientGetContentDownloadUrlResult UPlayFabClientModelDecoder::decodeGetContentDownloadUrlResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGetContentDownloadUrlResultResponse");

	Params::PlayFabClientModelDecoder_decodeGetContentDownloadUrlResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGetFriendLeaderboardAroundPlayerResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGetFriendLeaderboardAroundPlayerResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientGetFriendLeaderboardAroundPlayerResult UPlayFabClientModelDecoder::decodeGetFriendLeaderboardAroundPlayerResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGetFriendLeaderboardAroundPlayerResultResponse");

	Params::PlayFabClientModelDecoder_decodeGetFriendLeaderboardAroundPlayerResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGetFriendsListResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGetFriendsListResult      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientGetFriendsListResult UPlayFabClientModelDecoder::decodeGetFriendsListResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGetFriendsListResultResponse");

	Params::PlayFabClientModelDecoder_decodeGetFriendsListResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGetLeaderboardAroundCharacterResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGetLeaderboardAroundCharacterResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientGetLeaderboardAroundCharacterResult UPlayFabClientModelDecoder::decodeGetLeaderboardAroundCharacterResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGetLeaderboardAroundCharacterResultResponse");

	Params::PlayFabClientModelDecoder_decodeGetLeaderboardAroundCharacterResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGetLeaderboardAroundPlayerResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGetLeaderboardAroundPlayerResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientGetLeaderboardAroundPlayerResult UPlayFabClientModelDecoder::decodeGetLeaderboardAroundPlayerResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGetLeaderboardAroundPlayerResultResponse");

	Params::PlayFabClientModelDecoder_decodeGetLeaderboardAroundPlayerResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGetLeaderboardForUsersCharactersResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGetLeaderboardForUsersCharactersResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientGetLeaderboardForUsersCharactersResult UPlayFabClientModelDecoder::decodeGetLeaderboardForUsersCharactersResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGetLeaderboardForUsersCharactersResultResponse");

	Params::PlayFabClientModelDecoder_decodeGetLeaderboardForUsersCharactersResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGetLeaderboardResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGetLeaderboardResult      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientGetLeaderboardResult UPlayFabClientModelDecoder::decodeGetLeaderboardResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGetLeaderboardResultResponse");

	Params::PlayFabClientModelDecoder_decodeGetLeaderboardResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGetPaymentTokenResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGetPaymentTokenResult     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientGetPaymentTokenResult UPlayFabClientModelDecoder::decodeGetPaymentTokenResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGetPaymentTokenResultResponse");

	Params::PlayFabClientModelDecoder_decodeGetPaymentTokenResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGetPhotonAuthenticationTokenResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGetPhotonAuthenticationTokenResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientGetPhotonAuthenticationTokenResult UPlayFabClientModelDecoder::decodeGetPhotonAuthenticationTokenResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGetPhotonAuthenticationTokenResultResponse");

	Params::PlayFabClientModelDecoder_decodeGetPhotonAuthenticationTokenResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayerCombinedInfoResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGetPlayerCombinedInfoResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientGetPlayerCombinedInfoResult UPlayFabClientModelDecoder::decodeGetPlayerCombinedInfoResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGetPlayerCombinedInfoResultResponse");

	Params::PlayFabClientModelDecoder_decodeGetPlayerCombinedInfoResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayerProfileResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGetPlayerProfileResult    ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientGetPlayerProfileResult UPlayFabClientModelDecoder::decodeGetPlayerProfileResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGetPlayerProfileResultResponse");

	Params::PlayFabClientModelDecoder_decodeGetPlayerProfileResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayerSegmentsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGetPlayerSegmentsResult   ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientGetPlayerSegmentsResult UPlayFabClientModelDecoder::decodeGetPlayerSegmentsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGetPlayerSegmentsResultResponse");

	Params::PlayFabClientModelDecoder_decodeGetPlayerSegmentsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayerStatisticsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGetPlayerStatisticsResult ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientGetPlayerStatisticsResult UPlayFabClientModelDecoder::decodeGetPlayerStatisticsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGetPlayerStatisticsResultResponse");

	Params::PlayFabClientModelDecoder_decodeGetPlayerStatisticsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayerStatisticVersionsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGetPlayerStatisticVersionsResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientGetPlayerStatisticVersionsResult UPlayFabClientModelDecoder::decodeGetPlayerStatisticVersionsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGetPlayerStatisticVersionsResultResponse");

	Params::PlayFabClientModelDecoder_decodeGetPlayerStatisticVersionsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayerTagsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGetPlayerTagsResult       ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientGetPlayerTagsResult UPlayFabClientModelDecoder::decodeGetPlayerTagsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGetPlayerTagsResultResponse");

	Params::PlayFabClientModelDecoder_decodeGetPlayerTagsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayerTradesResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGetPlayerTradesResponse   ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientGetPlayerTradesResponse UPlayFabClientModelDecoder::decodeGetPlayerTradesResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGetPlayerTradesResponseResponse");

	Params::PlayFabClientModelDecoder_decodeGetPlayerTradesResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromFacebookIDsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGetPlayFabIDsFromFacebookIDsResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientGetPlayFabIDsFromFacebookIDsResult UPlayFabClientModelDecoder::decodeGetPlayFabIDsFromFacebookIDsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGetPlayFabIDsFromFacebookIDsResultResponse");

	Params::PlayFabClientModelDecoder_decodeGetPlayFabIDsFromFacebookIDsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGetPlayFabIDsFromFacebookInstantGamesIdsResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientGetPlayFabIDsFromFacebookInstantGamesIdsResult UPlayFabClientModelDecoder::decodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse");

	Params::PlayFabClientModelDecoder_decodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromGameCenterIDsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGetPlayFabIDsFromGameCenterIDsResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientGetPlayFabIDsFromGameCenterIDsResult UPlayFabClientModelDecoder::decodeGetPlayFabIDsFromGameCenterIDsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGetPlayFabIDsFromGameCenterIDsResultResponse");

	Params::PlayFabClientModelDecoder_decodeGetPlayFabIDsFromGameCenterIDsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromGenericIDsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGetPlayFabIDsFromGenericIDsResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientGetPlayFabIDsFromGenericIDsResult UPlayFabClientModelDecoder::decodeGetPlayFabIDsFromGenericIDsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGetPlayFabIDsFromGenericIDsResultResponse");

	Params::PlayFabClientModelDecoder_decodeGetPlayFabIDsFromGenericIDsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromGoogleIDsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGetPlayFabIDsFromGoogleIDsResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientGetPlayFabIDsFromGoogleIDsResult UPlayFabClientModelDecoder::decodeGetPlayFabIDsFromGoogleIDsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGetPlayFabIDsFromGoogleIDsResultResponse");

	Params::PlayFabClientModelDecoder_decodeGetPlayFabIDsFromGoogleIDsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromGooglePlayGamesPlayerIDsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGetPlayFabIDsFromGooglePlayGamesPlayerIDsResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientGetPlayFabIDsFromGooglePlayGamesPlayerIDsResult UPlayFabClientModelDecoder::decodeGetPlayFabIDsFromGooglePlayGamesPlayerIDsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGetPlayFabIDsFromGooglePlayGamesPlayerIDsResultResponse");

	Params::PlayFabClientModelDecoder_decodeGetPlayFabIDsFromGooglePlayGamesPlayerIDsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromKongregateIDsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGetPlayFabIDsFromKongregateIDsResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientGetPlayFabIDsFromKongregateIDsResult UPlayFabClientModelDecoder::decodeGetPlayFabIDsFromKongregateIDsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGetPlayFabIDsFromKongregateIDsResultResponse");

	Params::PlayFabClientModelDecoder_decodeGetPlayFabIDsFromKongregateIDsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGetPlayFabIDsFromNintendoServiceAccountIdsResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientGetPlayFabIDsFromNintendoServiceAccountIdsResult UPlayFabClientModelDecoder::decodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse");

	Params::PlayFabClientModelDecoder_decodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGetPlayFabIDsFromNintendoSwitchDeviceIdsResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientGetPlayFabIDsFromNintendoSwitchDeviceIdsResult UPlayFabClientModelDecoder::decodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse");

	Params::PlayFabClientModelDecoder_decodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromPSNAccountIDsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGetPlayFabIDsFromPSNAccountIDsResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientGetPlayFabIDsFromPSNAccountIDsResult UPlayFabClientModelDecoder::decodeGetPlayFabIDsFromPSNAccountIDsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGetPlayFabIDsFromPSNAccountIDsResultResponse");

	Params::PlayFabClientModelDecoder_decodeGetPlayFabIDsFromPSNAccountIDsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromSteamIDsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGetPlayFabIDsFromSteamIDsResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientGetPlayFabIDsFromSteamIDsResult UPlayFabClientModelDecoder::decodeGetPlayFabIDsFromSteamIDsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGetPlayFabIDsFromSteamIDsResultResponse");

	Params::PlayFabClientModelDecoder_decodeGetPlayFabIDsFromSteamIDsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromTwitchIDsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGetPlayFabIDsFromTwitchIDsResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientGetPlayFabIDsFromTwitchIDsResult UPlayFabClientModelDecoder::decodeGetPlayFabIDsFromTwitchIDsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGetPlayFabIDsFromTwitchIDsResultResponse");

	Params::PlayFabClientModelDecoder_decodeGetPlayFabIDsFromTwitchIDsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGetPlayFabIDsFromXboxLiveIDsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGetPlayFabIDsFromXboxLiveIDsResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientGetPlayFabIDsFromXboxLiveIDsResult UPlayFabClientModelDecoder::decodeGetPlayFabIDsFromXboxLiveIDsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGetPlayFabIDsFromXboxLiveIDsResultResponse");

	Params::PlayFabClientModelDecoder_decodeGetPlayFabIDsFromXboxLiveIDsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGetPublisherDataResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGetPublisherDataResult    ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientGetPublisherDataResult UPlayFabClientModelDecoder::decodeGetPublisherDataResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGetPublisherDataResultResponse");

	Params::PlayFabClientModelDecoder_decodeGetPublisherDataResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGetPurchaseResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGetPurchaseResult         ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientGetPurchaseResult UPlayFabClientModelDecoder::decodeGetPurchaseResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGetPurchaseResultResponse");

	Params::PlayFabClientModelDecoder_decodeGetPurchaseResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGetSharedGroupDataResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGetSharedGroupDataResult  ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientGetSharedGroupDataResult UPlayFabClientModelDecoder::decodeGetSharedGroupDataResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGetSharedGroupDataResultResponse");

	Params::PlayFabClientModelDecoder_decodeGetSharedGroupDataResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGetStoreItemsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGetStoreItemsResult       ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientGetStoreItemsResult UPlayFabClientModelDecoder::decodeGetStoreItemsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGetStoreItemsResultResponse");

	Params::PlayFabClientModelDecoder_decodeGetStoreItemsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGetTimeResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGetTimeResult             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientGetTimeResult UPlayFabClientModelDecoder::decodeGetTimeResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGetTimeResultResponse");

	Params::PlayFabClientModelDecoder_decodeGetTimeResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGetTitleDataResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGetTitleDataResult        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientGetTitleDataResult UPlayFabClientModelDecoder::decodeGetTitleDataResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGetTitleDataResultResponse");

	Params::PlayFabClientModelDecoder_decodeGetTitleDataResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGetTitleNewsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGetTitleNewsResult        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientGetTitleNewsResult UPlayFabClientModelDecoder::decodeGetTitleNewsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGetTitleNewsResultResponse");

	Params::PlayFabClientModelDecoder_decodeGetTitleNewsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGetTitlePublicKeyResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGetTitlePublicKeyResult   ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientGetTitlePublicKeyResult UPlayFabClientModelDecoder::decodeGetTitlePublicKeyResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGetTitlePublicKeyResultResponse");

	Params::PlayFabClientModelDecoder_decodeGetTitlePublicKeyResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGetTradeStatusResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGetTradeStatusResponse    ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientGetTradeStatusResponse UPlayFabClientModelDecoder::decodeGetTradeStatusResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGetTradeStatusResponseResponse");

	Params::PlayFabClientModelDecoder_decodeGetTradeStatusResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGetUserDataResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGetUserDataResult         ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientGetUserDataResult UPlayFabClientModelDecoder::decodeGetUserDataResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGetUserDataResultResponse");

	Params::PlayFabClientModelDecoder_decodeGetUserDataResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGetUserInventoryResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGetUserInventoryResult    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientGetUserInventoryResult UPlayFabClientModelDecoder::decodeGetUserInventoryResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGetUserInventoryResultResponse");

	Params::PlayFabClientModelDecoder_decodeGetUserInventoryResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeGrantCharacterToUserResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientGrantCharacterToUserResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientGrantCharacterToUserResult UPlayFabClientModelDecoder::decodeGrantCharacterToUserResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeGrantCharacterToUserResultResponse");

	Params::PlayFabClientModelDecoder_decodeGrantCharacterToUserResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeLinkAndroidDeviceIDResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientLinkAndroidDeviceIDResult ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientLinkAndroidDeviceIDResult UPlayFabClientModelDecoder::decodeLinkAndroidDeviceIDResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeLinkAndroidDeviceIDResultResponse");

	Params::PlayFabClientModelDecoder_decodeLinkAndroidDeviceIDResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeLinkCustomIDResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientLinkCustomIDResult        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientLinkCustomIDResult UPlayFabClientModelDecoder::decodeLinkCustomIDResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeLinkCustomIDResultResponse");

	Params::PlayFabClientModelDecoder_decodeLinkCustomIDResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeLinkFacebookAccountResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientLinkFacebookAccountResult ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientLinkFacebookAccountResult UPlayFabClientModelDecoder::decodeLinkFacebookAccountResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeLinkFacebookAccountResultResponse");

	Params::PlayFabClientModelDecoder_decodeLinkFacebookAccountResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeLinkFacebookInstantGamesIdResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientLinkFacebookInstantGamesIdResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientLinkFacebookInstantGamesIdResult UPlayFabClientModelDecoder::decodeLinkFacebookInstantGamesIdResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeLinkFacebookInstantGamesIdResultResponse");

	Params::PlayFabClientModelDecoder_decodeLinkFacebookInstantGamesIdResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeLinkGameCenterAccountResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientLinkGameCenterAccountResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientLinkGameCenterAccountResult UPlayFabClientModelDecoder::decodeLinkGameCenterAccountResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeLinkGameCenterAccountResultResponse");

	Params::PlayFabClientModelDecoder_decodeLinkGameCenterAccountResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeLinkGoogleAccountResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientLinkGoogleAccountResult   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientLinkGoogleAccountResult UPlayFabClientModelDecoder::decodeLinkGoogleAccountResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeLinkGoogleAccountResultResponse");

	Params::PlayFabClientModelDecoder_decodeLinkGoogleAccountResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeLinkGooglePlayGamesServicesAccountResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientLinkGooglePlayGamesServicesAccountResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientLinkGooglePlayGamesServicesAccountResult UPlayFabClientModelDecoder::decodeLinkGooglePlayGamesServicesAccountResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeLinkGooglePlayGamesServicesAccountResultResponse");

	Params::PlayFabClientModelDecoder_decodeLinkGooglePlayGamesServicesAccountResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeLinkIOSDeviceIDResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientLinkIOSDeviceIDResult     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientLinkIOSDeviceIDResult UPlayFabClientModelDecoder::decodeLinkIOSDeviceIDResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeLinkIOSDeviceIDResultResponse");

	Params::PlayFabClientModelDecoder_decodeLinkIOSDeviceIDResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeLinkKongregateAccountResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientLinkKongregateAccountResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientLinkKongregateAccountResult UPlayFabClientModelDecoder::decodeLinkKongregateAccountResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeLinkKongregateAccountResultResponse");

	Params::PlayFabClientModelDecoder_decodeLinkKongregateAccountResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeLinkNintendoSwitchDeviceIdResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientLinkNintendoSwitchDeviceIdResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientLinkNintendoSwitchDeviceIdResult UPlayFabClientModelDecoder::decodeLinkNintendoSwitchDeviceIdResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeLinkNintendoSwitchDeviceIdResultResponse");

	Params::PlayFabClientModelDecoder_decodeLinkNintendoSwitchDeviceIdResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeLinkPSNAccountResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientLinkPSNAccountResult      ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientLinkPSNAccountResult UPlayFabClientModelDecoder::decodeLinkPSNAccountResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeLinkPSNAccountResultResponse");

	Params::PlayFabClientModelDecoder_decodeLinkPSNAccountResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeLinkSteamAccountResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientLinkSteamAccountResult    ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientLinkSteamAccountResult UPlayFabClientModelDecoder::decodeLinkSteamAccountResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeLinkSteamAccountResultResponse");

	Params::PlayFabClientModelDecoder_decodeLinkSteamAccountResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeLinkTwitchAccountResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientLinkTwitchAccountResult   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientLinkTwitchAccountResult UPlayFabClientModelDecoder::decodeLinkTwitchAccountResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeLinkTwitchAccountResultResponse");

	Params::PlayFabClientModelDecoder_decodeLinkTwitchAccountResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeLinkXboxAccountResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientLinkXboxAccountResult     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientLinkXboxAccountResult UPlayFabClientModelDecoder::decodeLinkXboxAccountResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeLinkXboxAccountResultResponse");

	Params::PlayFabClientModelDecoder_decodeLinkXboxAccountResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeListUsersCharactersResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientListUsersCharactersResult ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientListUsersCharactersResult UPlayFabClientModelDecoder::decodeListUsersCharactersResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeListUsersCharactersResultResponse");

	Params::PlayFabClientModelDecoder_decodeListUsersCharactersResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeLoginResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientLoginResult               ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientLoginResult UPlayFabClientModelDecoder::decodeLoginResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeLoginResultResponse");

	Params::PlayFabClientModelDecoder_decodeLoginResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeMatchmakeResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientMatchmakeResult           ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientMatchmakeResult UPlayFabClientModelDecoder::decodeMatchmakeResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeMatchmakeResultResponse");

	Params::PlayFabClientModelDecoder_decodeMatchmakeResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeModifyUserVirtualCurrencyResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientModifyUserVirtualCurrencyResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientModifyUserVirtualCurrencyResult UPlayFabClientModelDecoder::decodeModifyUserVirtualCurrencyResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeModifyUserVirtualCurrencyResultResponse");

	Params::PlayFabClientModelDecoder_decodeModifyUserVirtualCurrencyResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeOpenTradeResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientOpenTradeResponse         ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientOpenTradeResponse UPlayFabClientModelDecoder::decodeOpenTradeResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeOpenTradeResponseResponse");

	Params::PlayFabClientModelDecoder_decodeOpenTradeResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodePayForPurchaseResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientPayForPurchaseResult      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientPayForPurchaseResult UPlayFabClientModelDecoder::decodePayForPurchaseResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodePayForPurchaseResultResponse");

	Params::PlayFabClientModelDecoder_decodePayForPurchaseResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodePurchaseItemResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientPurchaseItemResult        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientPurchaseItemResult UPlayFabClientModelDecoder::decodePurchaseItemResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodePurchaseItemResultResponse");

	Params::PlayFabClientModelDecoder_decodePurchaseItemResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeRedeemCouponResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientRedeemCouponResult        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientRedeemCouponResult UPlayFabClientModelDecoder::decodeRedeemCouponResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeRedeemCouponResultResponse");

	Params::PlayFabClientModelDecoder_decodeRedeemCouponResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeRegisterForIOSPushNotificationResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientRegisterForIOSPushNotificationResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientRegisterForIOSPushNotificationResult UPlayFabClientModelDecoder::decodeRegisterForIOSPushNotificationResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeRegisterForIOSPushNotificationResultResponse");

	Params::PlayFabClientModelDecoder_decodeRegisterForIOSPushNotificationResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeRegisterPlayFabUserResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientRegisterPlayFabUserResult ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientRegisterPlayFabUserResult UPlayFabClientModelDecoder::decodeRegisterPlayFabUserResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeRegisterPlayFabUserResultResponse");

	Params::PlayFabClientModelDecoder_decodeRegisterPlayFabUserResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeRemoveContactEmailResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientRemoveContactEmailResult  ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientRemoveContactEmailResult UPlayFabClientModelDecoder::decodeRemoveContactEmailResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeRemoveContactEmailResultResponse");

	Params::PlayFabClientModelDecoder_decodeRemoveContactEmailResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeRemoveFriendResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientRemoveFriendResult        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientRemoveFriendResult UPlayFabClientModelDecoder::decodeRemoveFriendResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeRemoveFriendResultResponse");

	Params::PlayFabClientModelDecoder_decodeRemoveFriendResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeRemoveGenericIDResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientRemoveGenericIDResult     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientRemoveGenericIDResult UPlayFabClientModelDecoder::decodeRemoveGenericIDResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeRemoveGenericIDResultResponse");

	Params::PlayFabClientModelDecoder_decodeRemoveGenericIDResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeRemoveSharedGroupMembersResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientRemoveSharedGroupMembersResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientRemoveSharedGroupMembersResult UPlayFabClientModelDecoder::decodeRemoveSharedGroupMembersResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeRemoveSharedGroupMembersResultResponse");

	Params::PlayFabClientModelDecoder_decodeRemoveSharedGroupMembersResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeReportAdActivityResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientReportAdActivityResult    ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientReportAdActivityResult UPlayFabClientModelDecoder::decodeReportAdActivityResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeReportAdActivityResultResponse");

	Params::PlayFabClientModelDecoder_decodeReportAdActivityResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeReportPlayerClientResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientReportPlayerClientResult  ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientReportPlayerClientResult UPlayFabClientModelDecoder::decodeReportPlayerClientResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeReportPlayerClientResultResponse");

	Params::PlayFabClientModelDecoder_decodeReportPlayerClientResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeRestoreIOSPurchasesResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientRestoreIOSPurchasesResult ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientRestoreIOSPurchasesResult UPlayFabClientModelDecoder::decodeRestoreIOSPurchasesResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeRestoreIOSPurchasesResultResponse");

	Params::PlayFabClientModelDecoder_decodeRestoreIOSPurchasesResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeRewardAdActivityResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientRewardAdActivityResult    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientRewardAdActivityResult UPlayFabClientModelDecoder::decodeRewardAdActivityResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeRewardAdActivityResultResponse");

	Params::PlayFabClientModelDecoder_decodeRewardAdActivityResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeSendAccountRecoveryEmailResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientSendAccountRecoveryEmailResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientSendAccountRecoveryEmailResult UPlayFabClientModelDecoder::decodeSendAccountRecoveryEmailResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeSendAccountRecoveryEmailResultResponse");

	Params::PlayFabClientModelDecoder_decodeSendAccountRecoveryEmailResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeSetFriendTagsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientSetFriendTagsResult       ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientSetFriendTagsResult UPlayFabClientModelDecoder::decodeSetFriendTagsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeSetFriendTagsResultResponse");

	Params::PlayFabClientModelDecoder_decodeSetFriendTagsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeSetPlayerSecretResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientSetPlayerSecretResult     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientSetPlayerSecretResult UPlayFabClientModelDecoder::decodeSetPlayerSecretResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeSetPlayerSecretResultResponse");

	Params::PlayFabClientModelDecoder_decodeSetPlayerSecretResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeStartPurchaseResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientStartPurchaseResult       ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientStartPurchaseResult UPlayFabClientModelDecoder::decodeStartPurchaseResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeStartPurchaseResultResponse");

	Params::PlayFabClientModelDecoder_decodeStartPurchaseResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeUnlinkAndroidDeviceIDResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUnlinkAndroidDeviceIDResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientUnlinkAndroidDeviceIDResult UPlayFabClientModelDecoder::decodeUnlinkAndroidDeviceIDResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeUnlinkAndroidDeviceIDResultResponse");

	Params::PlayFabClientModelDecoder_decodeUnlinkAndroidDeviceIDResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeUnlinkCustomIDResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUnlinkCustomIDResult      ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientUnlinkCustomIDResult UPlayFabClientModelDecoder::decodeUnlinkCustomIDResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeUnlinkCustomIDResultResponse");

	Params::PlayFabClientModelDecoder_decodeUnlinkCustomIDResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeUnlinkFacebookAccountResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUnlinkFacebookAccountResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientUnlinkFacebookAccountResult UPlayFabClientModelDecoder::decodeUnlinkFacebookAccountResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeUnlinkFacebookAccountResultResponse");

	Params::PlayFabClientModelDecoder_decodeUnlinkFacebookAccountResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeUnlinkFacebookInstantGamesIdResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUnlinkFacebookInstantGamesIdResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientUnlinkFacebookInstantGamesIdResult UPlayFabClientModelDecoder::decodeUnlinkFacebookInstantGamesIdResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeUnlinkFacebookInstantGamesIdResultResponse");

	Params::PlayFabClientModelDecoder_decodeUnlinkFacebookInstantGamesIdResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeUnlinkGameCenterAccountResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUnlinkGameCenterAccountResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientUnlinkGameCenterAccountResult UPlayFabClientModelDecoder::decodeUnlinkGameCenterAccountResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeUnlinkGameCenterAccountResultResponse");

	Params::PlayFabClientModelDecoder_decodeUnlinkGameCenterAccountResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeUnlinkGoogleAccountResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUnlinkGoogleAccountResult ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientUnlinkGoogleAccountResult UPlayFabClientModelDecoder::decodeUnlinkGoogleAccountResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeUnlinkGoogleAccountResultResponse");

	Params::PlayFabClientModelDecoder_decodeUnlinkGoogleAccountResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeUnlinkGooglePlayGamesServicesAccountResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUnlinkGooglePlayGamesServicesAccountResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientUnlinkGooglePlayGamesServicesAccountResult UPlayFabClientModelDecoder::decodeUnlinkGooglePlayGamesServicesAccountResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeUnlinkGooglePlayGamesServicesAccountResultResponse");

	Params::PlayFabClientModelDecoder_decodeUnlinkGooglePlayGamesServicesAccountResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeUnlinkIOSDeviceIDResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUnlinkIOSDeviceIDResult   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientUnlinkIOSDeviceIDResult UPlayFabClientModelDecoder::decodeUnlinkIOSDeviceIDResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeUnlinkIOSDeviceIDResultResponse");

	Params::PlayFabClientModelDecoder_decodeUnlinkIOSDeviceIDResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeUnlinkKongregateAccountResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUnlinkKongregateAccountResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientUnlinkKongregateAccountResult UPlayFabClientModelDecoder::decodeUnlinkKongregateAccountResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeUnlinkKongregateAccountResultResponse");

	Params::PlayFabClientModelDecoder_decodeUnlinkKongregateAccountResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeUnlinkNintendoSwitchDeviceIdResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUnlinkNintendoSwitchDeviceIdResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientUnlinkNintendoSwitchDeviceIdResult UPlayFabClientModelDecoder::decodeUnlinkNintendoSwitchDeviceIdResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeUnlinkNintendoSwitchDeviceIdResultResponse");

	Params::PlayFabClientModelDecoder_decodeUnlinkNintendoSwitchDeviceIdResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeUnlinkPSNAccountResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUnlinkPSNAccountResult    ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientUnlinkPSNAccountResult UPlayFabClientModelDecoder::decodeUnlinkPSNAccountResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeUnlinkPSNAccountResultResponse");

	Params::PlayFabClientModelDecoder_decodeUnlinkPSNAccountResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeUnlinkSteamAccountResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUnlinkSteamAccountResult  ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientUnlinkSteamAccountResult UPlayFabClientModelDecoder::decodeUnlinkSteamAccountResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeUnlinkSteamAccountResultResponse");

	Params::PlayFabClientModelDecoder_decodeUnlinkSteamAccountResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeUnlinkTwitchAccountResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUnlinkTwitchAccountResult ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientUnlinkTwitchAccountResult UPlayFabClientModelDecoder::decodeUnlinkTwitchAccountResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeUnlinkTwitchAccountResultResponse");

	Params::PlayFabClientModelDecoder_decodeUnlinkTwitchAccountResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeUnlinkXboxAccountResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUnlinkXboxAccountResult   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientUnlinkXboxAccountResult UPlayFabClientModelDecoder::decodeUnlinkXboxAccountResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeUnlinkXboxAccountResultResponse");

	Params::PlayFabClientModelDecoder_decodeUnlinkXboxAccountResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeUnlockContainerItemResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUnlockContainerItemResult ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientUnlockContainerItemResult UPlayFabClientModelDecoder::decodeUnlockContainerItemResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeUnlockContainerItemResultResponse");

	Params::PlayFabClientModelDecoder_decodeUnlockContainerItemResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeUpdateCharacterDataResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUpdateCharacterDataResult ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientUpdateCharacterDataResult UPlayFabClientModelDecoder::decodeUpdateCharacterDataResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeUpdateCharacterDataResultResponse");

	Params::PlayFabClientModelDecoder_decodeUpdateCharacterDataResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeUpdateCharacterStatisticsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUpdateCharacterStatisticsResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientUpdateCharacterStatisticsResult UPlayFabClientModelDecoder::decodeUpdateCharacterStatisticsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeUpdateCharacterStatisticsResultResponse");

	Params::PlayFabClientModelDecoder_decodeUpdateCharacterStatisticsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeUpdatePlayerStatisticsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUpdatePlayerStatisticsResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientUpdatePlayerStatisticsResult UPlayFabClientModelDecoder::decodeUpdatePlayerStatisticsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeUpdatePlayerStatisticsResultResponse");

	Params::PlayFabClientModelDecoder_decodeUpdatePlayerStatisticsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeUpdateSharedGroupDataResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUpdateSharedGroupDataResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientUpdateSharedGroupDataResult UPlayFabClientModelDecoder::decodeUpdateSharedGroupDataResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeUpdateSharedGroupDataResultResponse");

	Params::PlayFabClientModelDecoder_decodeUpdateSharedGroupDataResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeUpdateUserDataResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUpdateUserDataResult      ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FClientUpdateUserDataResult UPlayFabClientModelDecoder::decodeUpdateUserDataResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeUpdateUserDataResultResponse");

	Params::PlayFabClientModelDecoder_decodeUpdateUserDataResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeUpdateUserTitleDisplayNameResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUpdateUserTitleDisplayNameResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientUpdateUserTitleDisplayNameResult UPlayFabClientModelDecoder::decodeUpdateUserTitleDisplayNameResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeUpdateUserTitleDisplayNameResultResponse");

	Params::PlayFabClientModelDecoder_decodeUpdateUserTitleDisplayNameResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeValidateAmazonReceiptResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientValidateAmazonReceiptResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientValidateAmazonReceiptResult UPlayFabClientModelDecoder::decodeValidateAmazonReceiptResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeValidateAmazonReceiptResultResponse");

	Params::PlayFabClientModelDecoder_decodeValidateAmazonReceiptResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeValidateGooglePlayPurchaseResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientValidateGooglePlayPurchaseResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientValidateGooglePlayPurchaseResult UPlayFabClientModelDecoder::decodeValidateGooglePlayPurchaseResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeValidateGooglePlayPurchaseResultResponse");

	Params::PlayFabClientModelDecoder_decodeValidateGooglePlayPurchaseResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeValidateIOSReceiptResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientValidateIOSReceiptResult  ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientValidateIOSReceiptResult UPlayFabClientModelDecoder::decodeValidateIOSReceiptResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeValidateIOSReceiptResultResponse");

	Params::PlayFabClientModelDecoder_decodeValidateIOSReceiptResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeValidateWindowsReceiptResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientValidateWindowsReceiptResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientValidateWindowsReceiptResult UPlayFabClientModelDecoder::decodeValidateWindowsReceiptResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeValidateWindowsReceiptResultResponse");

	Params::PlayFabClientModelDecoder_decodeValidateWindowsReceiptResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabClientModelDecoder.decodeWriteEventResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientWriteEventResponse        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FClientWriteEventResponse UPlayFabClientModelDecoder::decodeWriteEventResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabClientModelDecoder", "decodeWriteEventResponseResponse");

	Params::PlayFabClientModelDecoder_decodeWriteEventResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabCloudScriptAPI.ExecuteEntityCloudScript
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FCloudScriptExecuteEntityCloudScriptRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FCloudScriptExecuteCloudScriptResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabCloudScriptAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabCloudScriptAPI* UPlayFabCloudScriptAPI::ExecuteEntityCloudScript(const struct FCloudScriptExecuteEntityCloudScriptRequest& Request, TDelegate<void(const struct FCloudScriptExecuteCloudScriptResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabCloudScriptAPI", "ExecuteEntityCloudScript");

	Params::PlayFabCloudScriptAPI_ExecuteEntityCloudScript Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabCloudScriptAPI.ExecuteFunction
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FCloudScriptExecuteFunctionRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FCloudScriptExecuteFunctionResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabCloudScriptAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabCloudScriptAPI* UPlayFabCloudScriptAPI::ExecuteFunction(const struct FCloudScriptExecuteFunctionRequest& Request, TDelegate<void(const struct FCloudScriptExecuteFunctionResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabCloudScriptAPI", "ExecuteFunction");

	Params::PlayFabCloudScriptAPI_ExecuteFunction Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabCloudScriptAPI.GetFunction
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FCloudScriptGetFunctionRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FCloudScriptGetFunctionResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabCloudScriptAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabCloudScriptAPI* UPlayFabCloudScriptAPI::GetFunction(const struct FCloudScriptGetFunctionRequest& Request, TDelegate<void(const struct FCloudScriptGetFunctionResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabCloudScriptAPI", "GetFunction");

	Params::PlayFabCloudScriptAPI_GetFunction Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabCloudScriptAPI.ListFunctions
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FCloudScriptListFunctionsRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FCloudScriptListFunctionsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabCloudScriptAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabCloudScriptAPI* UPlayFabCloudScriptAPI::ListFunctions(const struct FCloudScriptListFunctionsRequest& Request, TDelegate<void(const struct FCloudScriptListFunctionsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabCloudScriptAPI", "ListFunctions");

	Params::PlayFabCloudScriptAPI_ListFunctions Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabCloudScriptAPI.ListHttpFunctions
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FCloudScriptListFunctionsRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FCloudScriptListHttpFunctionsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabCloudScriptAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabCloudScriptAPI* UPlayFabCloudScriptAPI::ListHttpFunctions(const struct FCloudScriptListFunctionsRequest& Request, TDelegate<void(const struct FCloudScriptListHttpFunctionsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabCloudScriptAPI", "ListHttpFunctions");

	Params::PlayFabCloudScriptAPI_ListHttpFunctions Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabCloudScriptAPI.ListQueuedFunctions
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FCloudScriptListFunctionsRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FCloudScriptListQueuedFunctionsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabCloudScriptAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabCloudScriptAPI* UPlayFabCloudScriptAPI::ListQueuedFunctions(const struct FCloudScriptListFunctionsRequest& Request, TDelegate<void(const struct FCloudScriptListQueuedFunctionsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabCloudScriptAPI", "ListQueuedFunctions");

	Params::PlayFabCloudScriptAPI_ListQueuedFunctions Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabCloudScriptAPI.PostFunctionResultForEntityTriggeredAction
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FCloudScriptPostFunctionResultForEntityTriggeredActionRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FCloudScriptEmptyResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabCloudScriptAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabCloudScriptAPI* UPlayFabCloudScriptAPI::PostFunctionResultForEntityTriggeredAction(const struct FCloudScriptPostFunctionResultForEntityTriggeredActionRequest& Request, TDelegate<void(const struct FCloudScriptEmptyResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabCloudScriptAPI", "PostFunctionResultForEntityTriggeredAction");

	Params::PlayFabCloudScriptAPI_PostFunctionResultForEntityTriggeredAction Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabCloudScriptAPI.PostFunctionResultForFunctionExecution
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FCloudScriptPostFunctionResultForFunctionExecutionRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FCloudScriptEmptyResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabCloudScriptAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabCloudScriptAPI* UPlayFabCloudScriptAPI::PostFunctionResultForFunctionExecution(const struct FCloudScriptPostFunctionResultForFunctionExecutionRequest& Request, TDelegate<void(const struct FCloudScriptEmptyResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabCloudScriptAPI", "PostFunctionResultForFunctionExecution");

	Params::PlayFabCloudScriptAPI_PostFunctionResultForFunctionExecution Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabCloudScriptAPI.PostFunctionResultForPlayerTriggeredAction
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FCloudScriptPostFunctionResultForPlayerTriggeredActionRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FCloudScriptEmptyResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabCloudScriptAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabCloudScriptAPI* UPlayFabCloudScriptAPI::PostFunctionResultForPlayerTriggeredAction(const struct FCloudScriptPostFunctionResultForPlayerTriggeredActionRequest& Request, TDelegate<void(const struct FCloudScriptEmptyResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabCloudScriptAPI", "PostFunctionResultForPlayerTriggeredAction");

	Params::PlayFabCloudScriptAPI_PostFunctionResultForPlayerTriggeredAction Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabCloudScriptAPI.PostFunctionResultForScheduledTask
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FCloudScriptPostFunctionResultForScheduledTaskRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FCloudScriptEmptyResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabCloudScriptAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabCloudScriptAPI* UPlayFabCloudScriptAPI::PostFunctionResultForScheduledTask(const struct FCloudScriptPostFunctionResultForScheduledTaskRequest& Request, TDelegate<void(const struct FCloudScriptEmptyResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabCloudScriptAPI", "PostFunctionResultForScheduledTask");

	Params::PlayFabCloudScriptAPI_PostFunctionResultForScheduledTask Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabCloudScriptAPI.RegisterHttpFunction
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FCloudScriptRegisterHttpFunctionRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FCloudScriptEmptyResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabCloudScriptAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabCloudScriptAPI* UPlayFabCloudScriptAPI::RegisterHttpFunction(const struct FCloudScriptRegisterHttpFunctionRequest& Request, TDelegate<void(const struct FCloudScriptEmptyResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabCloudScriptAPI", "RegisterHttpFunction");

	Params::PlayFabCloudScriptAPI_RegisterHttpFunction Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabCloudScriptAPI.RegisterQueuedFunction
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FCloudScriptRegisterQueuedFunctionRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FCloudScriptEmptyResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabCloudScriptAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabCloudScriptAPI* UPlayFabCloudScriptAPI::RegisterQueuedFunction(const struct FCloudScriptRegisterQueuedFunctionRequest& Request, TDelegate<void(const struct FCloudScriptEmptyResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabCloudScriptAPI", "RegisterQueuedFunction");

	Params::PlayFabCloudScriptAPI_RegisterQueuedFunction Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabCloudScriptAPI.UnregisterFunction
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FCloudScriptUnregisterFunctionRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FCloudScriptEmptyResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabCloudScriptAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabCloudScriptAPI* UPlayFabCloudScriptAPI::UnregisterFunction(const struct FCloudScriptUnregisterFunctionRequest& Request, TDelegate<void(const struct FCloudScriptEmptyResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabCloudScriptAPI", "UnregisterFunction");

	Params::PlayFabCloudScriptAPI_UnregisterFunction Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabCloudScriptAPI.HelperExecuteEntityCloudScript
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabCloudScriptAPI::HelperExecuteEntityCloudScript(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabCloudScriptAPI", "HelperExecuteEntityCloudScript");

	Params::PlayFabCloudScriptAPI_HelperExecuteEntityCloudScript Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabCloudScriptAPI.HelperExecuteFunction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabCloudScriptAPI::HelperExecuteFunction(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabCloudScriptAPI", "HelperExecuteFunction");

	Params::PlayFabCloudScriptAPI_HelperExecuteFunction Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabCloudScriptAPI.HelperGetFunction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabCloudScriptAPI::HelperGetFunction(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabCloudScriptAPI", "HelperGetFunction");

	Params::PlayFabCloudScriptAPI_HelperGetFunction Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabCloudScriptAPI.HelperListFunctions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabCloudScriptAPI::HelperListFunctions(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabCloudScriptAPI", "HelperListFunctions");

	Params::PlayFabCloudScriptAPI_HelperListFunctions Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabCloudScriptAPI.HelperListHttpFunctions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabCloudScriptAPI::HelperListHttpFunctions(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabCloudScriptAPI", "HelperListHttpFunctions");

	Params::PlayFabCloudScriptAPI_HelperListHttpFunctions Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabCloudScriptAPI.HelperListQueuedFunctions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabCloudScriptAPI::HelperListQueuedFunctions(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabCloudScriptAPI", "HelperListQueuedFunctions");

	Params::PlayFabCloudScriptAPI_HelperListQueuedFunctions Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabCloudScriptAPI.HelperPostFunctionResultForEntityTriggeredAction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabCloudScriptAPI::HelperPostFunctionResultForEntityTriggeredAction(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabCloudScriptAPI", "HelperPostFunctionResultForEntityTriggeredAction");

	Params::PlayFabCloudScriptAPI_HelperPostFunctionResultForEntityTriggeredAction Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabCloudScriptAPI.HelperPostFunctionResultForFunctionExecution
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabCloudScriptAPI::HelperPostFunctionResultForFunctionExecution(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabCloudScriptAPI", "HelperPostFunctionResultForFunctionExecution");

	Params::PlayFabCloudScriptAPI_HelperPostFunctionResultForFunctionExecution Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabCloudScriptAPI.HelperPostFunctionResultForPlayerTriggeredAction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabCloudScriptAPI::HelperPostFunctionResultForPlayerTriggeredAction(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabCloudScriptAPI", "HelperPostFunctionResultForPlayerTriggeredAction");

	Params::PlayFabCloudScriptAPI_HelperPostFunctionResultForPlayerTriggeredAction Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabCloudScriptAPI.HelperPostFunctionResultForScheduledTask
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabCloudScriptAPI::HelperPostFunctionResultForScheduledTask(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabCloudScriptAPI", "HelperPostFunctionResultForScheduledTask");

	Params::PlayFabCloudScriptAPI_HelperPostFunctionResultForScheduledTask Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabCloudScriptAPI.HelperRegisterHttpFunction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabCloudScriptAPI::HelperRegisterHttpFunction(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabCloudScriptAPI", "HelperRegisterHttpFunction");

	Params::PlayFabCloudScriptAPI_HelperRegisterHttpFunction Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabCloudScriptAPI.HelperRegisterQueuedFunction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabCloudScriptAPI::HelperRegisterQueuedFunction(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabCloudScriptAPI", "HelperRegisterQueuedFunction");

	Params::PlayFabCloudScriptAPI_HelperRegisterQueuedFunction Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabCloudScriptAPI.HelperUnregisterFunction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabCloudScriptAPI::HelperUnregisterFunction(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabCloudScriptAPI", "HelperUnregisterFunction");

	Params::PlayFabCloudScriptAPI_HelperUnregisterFunction Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabCloudScriptModelDecoder.decodeEmptyResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCloudScriptEmptyResult          ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FCloudScriptEmptyResult UPlayFabCloudScriptModelDecoder::decodeEmptyResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabCloudScriptModelDecoder", "decodeEmptyResultResponse");

	Params::PlayFabCloudScriptModelDecoder_decodeEmptyResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabCloudScriptModelDecoder.decodeExecuteCloudScriptResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCloudScriptExecuteCloudScriptResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FCloudScriptExecuteCloudScriptResult UPlayFabCloudScriptModelDecoder::decodeExecuteCloudScriptResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabCloudScriptModelDecoder", "decodeExecuteCloudScriptResultResponse");

	Params::PlayFabCloudScriptModelDecoder_decodeExecuteCloudScriptResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabCloudScriptModelDecoder.decodeExecuteFunctionResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCloudScriptExecuteFunctionResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FCloudScriptExecuteFunctionResult UPlayFabCloudScriptModelDecoder::decodeExecuteFunctionResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabCloudScriptModelDecoder", "decodeExecuteFunctionResultResponse");

	Params::PlayFabCloudScriptModelDecoder_decodeExecuteFunctionResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabCloudScriptModelDecoder.decodeGetFunctionResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCloudScriptGetFunctionResult    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FCloudScriptGetFunctionResult UPlayFabCloudScriptModelDecoder::decodeGetFunctionResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabCloudScriptModelDecoder", "decodeGetFunctionResultResponse");

	Params::PlayFabCloudScriptModelDecoder_decodeGetFunctionResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabCloudScriptModelDecoder.decodeListFunctionsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCloudScriptListFunctionsResult  ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FCloudScriptListFunctionsResult UPlayFabCloudScriptModelDecoder::decodeListFunctionsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabCloudScriptModelDecoder", "decodeListFunctionsResultResponse");

	Params::PlayFabCloudScriptModelDecoder_decodeListFunctionsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabCloudScriptModelDecoder.decodeListHttpFunctionsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCloudScriptListHttpFunctionsResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FCloudScriptListHttpFunctionsResult UPlayFabCloudScriptModelDecoder::decodeListHttpFunctionsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabCloudScriptModelDecoder", "decodeListHttpFunctionsResultResponse");

	Params::PlayFabCloudScriptModelDecoder_decodeListHttpFunctionsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabCloudScriptModelDecoder.decodeListQueuedFunctionsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCloudScriptListQueuedFunctionsResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FCloudScriptListQueuedFunctionsResult UPlayFabCloudScriptModelDecoder::decodeListQueuedFunctionsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabCloudScriptModelDecoder", "decodeListQueuedFunctionsResultResponse");

	Params::PlayFabCloudScriptModelDecoder_decodeListQueuedFunctionsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabDataAPI.AbortFileUploads
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FDataAbortFileUploadsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FDataAbortFileUploadsResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabDataAPI*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabDataAPI* UPlayFabDataAPI::AbortFileUploads(const struct FDataAbortFileUploadsRequest& Request, TDelegate<void(const struct FDataAbortFileUploadsResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabDataAPI", "AbortFileUploads");

	Params::PlayFabDataAPI_AbortFileUploads Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabDataAPI.DeleteFiles
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FDataDeleteFilesRequest&   Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FDataDeleteFilesResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabDataAPI*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabDataAPI* UPlayFabDataAPI::DeleteFiles(const struct FDataDeleteFilesRequest& Request, TDelegate<void(const struct FDataDeleteFilesResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabDataAPI", "DeleteFiles");

	Params::PlayFabDataAPI_DeleteFiles Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabDataAPI.FinalizeFileUploads
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FDataFinalizeFileUploadsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FDataFinalizeFileUploadsResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabDataAPI*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabDataAPI* UPlayFabDataAPI::FinalizeFileUploads(const struct FDataFinalizeFileUploadsRequest& Request, TDelegate<void(const struct FDataFinalizeFileUploadsResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabDataAPI", "FinalizeFileUploads");

	Params::PlayFabDataAPI_FinalizeFileUploads Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabDataAPI.GetFiles
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FDataGetFilesRequest&      Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FDataGetFilesResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabDataAPI*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabDataAPI* UPlayFabDataAPI::GetFiles(const struct FDataGetFilesRequest& Request, TDelegate<void(const struct FDataGetFilesResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabDataAPI", "GetFiles");

	Params::PlayFabDataAPI_GetFiles Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabDataAPI.GetObjects
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FDataGetObjectsRequest&    Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FDataGetObjectsResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabDataAPI*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabDataAPI* UPlayFabDataAPI::GetObjects(const struct FDataGetObjectsRequest& Request, TDelegate<void(const struct FDataGetObjectsResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabDataAPI", "GetObjects");

	Params::PlayFabDataAPI_GetObjects Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabDataAPI.InitiateFileUploads
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FDataInitiateFileUploadsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FDataInitiateFileUploadsResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabDataAPI*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabDataAPI* UPlayFabDataAPI::InitiateFileUploads(const struct FDataInitiateFileUploadsRequest& Request, TDelegate<void(const struct FDataInitiateFileUploadsResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabDataAPI", "InitiateFileUploads");

	Params::PlayFabDataAPI_InitiateFileUploads Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabDataAPI.SetObjects
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FDataSetObjectsRequest&    Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FDataSetObjectsResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabDataAPI*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabDataAPI* UPlayFabDataAPI::SetObjects(const struct FDataSetObjectsRequest& Request, TDelegate<void(const struct FDataSetObjectsResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabDataAPI", "SetObjects");

	Params::PlayFabDataAPI_SetObjects Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabDataAPI.HelperAbortFileUploads
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabDataAPI::HelperAbortFileUploads(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabDataAPI", "HelperAbortFileUploads");

	Params::PlayFabDataAPI_HelperAbortFileUploads Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabDataAPI.HelperDeleteFiles
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabDataAPI::HelperDeleteFiles(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabDataAPI", "HelperDeleteFiles");

	Params::PlayFabDataAPI_HelperDeleteFiles Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabDataAPI.HelperFinalizeFileUploads
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabDataAPI::HelperFinalizeFileUploads(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabDataAPI", "HelperFinalizeFileUploads");

	Params::PlayFabDataAPI_HelperFinalizeFileUploads Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabDataAPI.HelperGetFiles
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabDataAPI::HelperGetFiles(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabDataAPI", "HelperGetFiles");

	Params::PlayFabDataAPI_HelperGetFiles Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabDataAPI.HelperGetObjects
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabDataAPI::HelperGetObjects(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabDataAPI", "HelperGetObjects");

	Params::PlayFabDataAPI_HelperGetObjects Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabDataAPI.HelperInitiateFileUploads
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabDataAPI::HelperInitiateFileUploads(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabDataAPI", "HelperInitiateFileUploads");

	Params::PlayFabDataAPI_HelperInitiateFileUploads Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabDataAPI.HelperSetObjects
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabDataAPI::HelperSetObjects(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabDataAPI", "HelperSetObjects");

	Params::PlayFabDataAPI_HelperSetObjects Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabDataModelDecoder.decodeAbortFileUploadsResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDataAbortFileUploadsResponse    ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FDataAbortFileUploadsResponse UPlayFabDataModelDecoder::decodeAbortFileUploadsResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabDataModelDecoder", "decodeAbortFileUploadsResponseResponse");

	Params::PlayFabDataModelDecoder_decodeAbortFileUploadsResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabDataModelDecoder.decodeDeleteFilesResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDataDeleteFilesResponse         ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FDataDeleteFilesResponse UPlayFabDataModelDecoder::decodeDeleteFilesResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabDataModelDecoder", "decodeDeleteFilesResponseResponse");

	Params::PlayFabDataModelDecoder_decodeDeleteFilesResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabDataModelDecoder.decodeFinalizeFileUploadsResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDataFinalizeFileUploadsResponse ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FDataFinalizeFileUploadsResponse UPlayFabDataModelDecoder::decodeFinalizeFileUploadsResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabDataModelDecoder", "decodeFinalizeFileUploadsResponseResponse");

	Params::PlayFabDataModelDecoder_decodeFinalizeFileUploadsResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabDataModelDecoder.decodeGetFilesResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDataGetFilesResponse            ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FDataGetFilesResponse UPlayFabDataModelDecoder::decodeGetFilesResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabDataModelDecoder", "decodeGetFilesResponseResponse");

	Params::PlayFabDataModelDecoder_decodeGetFilesResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabDataModelDecoder.decodeGetObjectsResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDataGetObjectsResponse          ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FDataGetObjectsResponse UPlayFabDataModelDecoder::decodeGetObjectsResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabDataModelDecoder", "decodeGetObjectsResponseResponse");

	Params::PlayFabDataModelDecoder_decodeGetObjectsResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabDataModelDecoder.decodeInitiateFileUploadsResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDataInitiateFileUploadsResponse ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FDataInitiateFileUploadsResponse UPlayFabDataModelDecoder::decodeInitiateFileUploadsResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabDataModelDecoder", "decodeInitiateFileUploadsResponseResponse");

	Params::PlayFabDataModelDecoder_decodeInitiateFileUploadsResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabDataModelDecoder.decodeSetObjectsResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDataSetObjectsResponse          ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FDataSetObjectsResponse UPlayFabDataModelDecoder::decodeSetObjectsResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabDataModelDecoder", "decodeSetObjectsResponseResponse");

	Params::PlayFabDataModelDecoder_decodeSetObjectsResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyAPI.CreateDraftItem
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FEconomyCreateDraftItemRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FEconomyCreateDraftItemResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabEconomyAPI*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabEconomyAPI* UPlayFabEconomyAPI::CreateDraftItem(const struct FEconomyCreateDraftItemRequest& Request, TDelegate<void(const struct FEconomyCreateDraftItemResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyAPI", "CreateDraftItem");

	Params::PlayFabEconomyAPI_CreateDraftItem Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyAPI.CreateUploadUrls
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FEconomyCreateUploadUrlsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FEconomyCreateUploadUrlsResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabEconomyAPI*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabEconomyAPI* UPlayFabEconomyAPI::CreateUploadUrls(const struct FEconomyCreateUploadUrlsRequest& Request, TDelegate<void(const struct FEconomyCreateUploadUrlsResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyAPI", "CreateUploadUrls");

	Params::PlayFabEconomyAPI_CreateUploadUrls Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyAPI.DeleteEntityItemReviews
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FEconomyDeleteEntityItemReviewsRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FEconomyDeleteEntityItemReviewsResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabEconomyAPI*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabEconomyAPI* UPlayFabEconomyAPI::DeleteEntityItemReviews(const struct FEconomyDeleteEntityItemReviewsRequest& Request, TDelegate<void(const struct FEconomyDeleteEntityItemReviewsResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyAPI", "DeleteEntityItemReviews");

	Params::PlayFabEconomyAPI_DeleteEntityItemReviews Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyAPI.DeleteItem
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FEconomyDeleteItemRequest& Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FEconomyDeleteItemResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabEconomyAPI*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabEconomyAPI* UPlayFabEconomyAPI::DeleteItem(const struct FEconomyDeleteItemRequest& Request, TDelegate<void(const struct FEconomyDeleteItemResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyAPI", "DeleteItem");

	Params::PlayFabEconomyAPI_DeleteItem Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyAPI.GetCatalogConfig
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FEconomyGetCatalogConfigRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FEconomyGetCatalogConfigResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabEconomyAPI*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabEconomyAPI* UPlayFabEconomyAPI::GetCatalogConfig(const struct FEconomyGetCatalogConfigRequest& Request, TDelegate<void(const struct FEconomyGetCatalogConfigResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyAPI", "GetCatalogConfig");

	Params::PlayFabEconomyAPI_GetCatalogConfig Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyAPI.GetDraftItem
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FEconomyGetDraftItemRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FEconomyGetDraftItemResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabEconomyAPI*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabEconomyAPI* UPlayFabEconomyAPI::GetDraftItem(const struct FEconomyGetDraftItemRequest& Request, TDelegate<void(const struct FEconomyGetDraftItemResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyAPI", "GetDraftItem");

	Params::PlayFabEconomyAPI_GetDraftItem Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyAPI.GetDraftItems
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FEconomyGetDraftItemsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FEconomyGetDraftItemsResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabEconomyAPI*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabEconomyAPI* UPlayFabEconomyAPI::GetDraftItems(const struct FEconomyGetDraftItemsRequest& Request, TDelegate<void(const struct FEconomyGetDraftItemsResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyAPI", "GetDraftItems");

	Params::PlayFabEconomyAPI_GetDraftItems Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyAPI.GetEntityDraftItems
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FEconomyGetEntityDraftItemsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FEconomyGetEntityDraftItemsResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabEconomyAPI*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabEconomyAPI* UPlayFabEconomyAPI::GetEntityDraftItems(const struct FEconomyGetEntityDraftItemsRequest& Request, TDelegate<void(const struct FEconomyGetEntityDraftItemsResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyAPI", "GetEntityDraftItems");

	Params::PlayFabEconomyAPI_GetEntityDraftItems Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyAPI.GetEntityItemReview
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FEconomyGetEntityItemReviewRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FEconomyGetEntityItemReviewResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabEconomyAPI*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabEconomyAPI* UPlayFabEconomyAPI::GetEntityItemReview(const struct FEconomyGetEntityItemReviewRequest& Request, TDelegate<void(const struct FEconomyGetEntityItemReviewResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyAPI", "GetEntityItemReview");

	Params::PlayFabEconomyAPI_GetEntityItemReview Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyAPI.GetItem
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FEconomyGetItemRequest&    Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FEconomyGetItemResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabEconomyAPI*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabEconomyAPI* UPlayFabEconomyAPI::GetItem(const struct FEconomyGetItemRequest& Request, TDelegate<void(const struct FEconomyGetItemResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyAPI", "GetItem");

	Params::PlayFabEconomyAPI_GetItem Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyAPI.GetItemModerationState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FEconomyGetItemModerationStateRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FEconomyGetItemModerationStateResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabEconomyAPI*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabEconomyAPI* UPlayFabEconomyAPI::GetItemModerationState(const struct FEconomyGetItemModerationStateRequest& Request, TDelegate<void(const struct FEconomyGetItemModerationStateResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyAPI", "GetItemModerationState");

	Params::PlayFabEconomyAPI_GetItemModerationState Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyAPI.GetItemPublishStatus
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FEconomyGetItemPublishStatusRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FEconomyGetItemPublishStatusResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabEconomyAPI*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabEconomyAPI* UPlayFabEconomyAPI::GetItemPublishStatus(const struct FEconomyGetItemPublishStatusRequest& Request, TDelegate<void(const struct FEconomyGetItemPublishStatusResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyAPI", "GetItemPublishStatus");

	Params::PlayFabEconomyAPI_GetItemPublishStatus Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyAPI.GetItemReviews
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FEconomyGetItemReviewsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FEconomyGetItemReviewsResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabEconomyAPI*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabEconomyAPI* UPlayFabEconomyAPI::GetItemReviews(const struct FEconomyGetItemReviewsRequest& Request, TDelegate<void(const struct FEconomyGetItemReviewsResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyAPI", "GetItemReviews");

	Params::PlayFabEconomyAPI_GetItemReviews Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyAPI.GetItemReviewSummary
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FEconomyGetItemReviewSummaryRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FEconomyGetItemReviewSummaryResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabEconomyAPI*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabEconomyAPI* UPlayFabEconomyAPI::GetItemReviewSummary(const struct FEconomyGetItemReviewSummaryRequest& Request, TDelegate<void(const struct FEconomyGetItemReviewSummaryResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyAPI", "GetItemReviewSummary");

	Params::PlayFabEconomyAPI_GetItemReviewSummary Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyAPI.GetItems
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FEconomyGetItemsRequest&   Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FEconomyGetItemsResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabEconomyAPI*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabEconomyAPI* UPlayFabEconomyAPI::GetItems(const struct FEconomyGetItemsRequest& Request, TDelegate<void(const struct FEconomyGetItemsResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyAPI", "GetItems");

	Params::PlayFabEconomyAPI_GetItems Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyAPI.PublishDraftItem
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FEconomyPublishDraftItemRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FEconomyPublishDraftItemResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabEconomyAPI*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabEconomyAPI* UPlayFabEconomyAPI::PublishDraftItem(const struct FEconomyPublishDraftItemRequest& Request, TDelegate<void(const struct FEconomyPublishDraftItemResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyAPI", "PublishDraftItem");

	Params::PlayFabEconomyAPI_PublishDraftItem Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyAPI.ReportItem
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FEconomyReportItemRequest& Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FEconomyReportItemResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabEconomyAPI*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabEconomyAPI* UPlayFabEconomyAPI::ReportItem(const struct FEconomyReportItemRequest& Request, TDelegate<void(const struct FEconomyReportItemResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyAPI", "ReportItem");

	Params::PlayFabEconomyAPI_ReportItem Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyAPI.ReportItemReview
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FEconomyReportItemReviewRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FEconomyReportItemReviewResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabEconomyAPI*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabEconomyAPI* UPlayFabEconomyAPI::ReportItemReview(const struct FEconomyReportItemReviewRequest& Request, TDelegate<void(const struct FEconomyReportItemReviewResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyAPI", "ReportItemReview");

	Params::PlayFabEconomyAPI_ReportItemReview Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyAPI.ReviewItem
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FEconomyReviewItemRequest& Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FEconomyReviewItemResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabEconomyAPI*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabEconomyAPI* UPlayFabEconomyAPI::ReviewItem(const struct FEconomyReviewItemRequest& Request, TDelegate<void(const struct FEconomyReviewItemResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyAPI", "ReviewItem");

	Params::PlayFabEconomyAPI_ReviewItem Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyAPI.SearchItems
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FEconomySearchItemsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FEconomySearchItemsResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabEconomyAPI*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabEconomyAPI* UPlayFabEconomyAPI::SearchItems(const struct FEconomySearchItemsRequest& Request, TDelegate<void(const struct FEconomySearchItemsResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyAPI", "SearchItems");

	Params::PlayFabEconomyAPI_SearchItems Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyAPI.SetItemModerationState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FEconomySetItemModerationStateRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FEconomySetItemModerationStateResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabEconomyAPI*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabEconomyAPI* UPlayFabEconomyAPI::SetItemModerationState(const struct FEconomySetItemModerationStateRequest& Request, TDelegate<void(const struct FEconomySetItemModerationStateResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyAPI", "SetItemModerationState");

	Params::PlayFabEconomyAPI_SetItemModerationState Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyAPI.SubmitItemReviewVote
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FEconomySubmitItemReviewVoteRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FEconomySubmitItemReviewVoteResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabEconomyAPI*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabEconomyAPI* UPlayFabEconomyAPI::SubmitItemReviewVote(const struct FEconomySubmitItemReviewVoteRequest& Request, TDelegate<void(const struct FEconomySubmitItemReviewVoteResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyAPI", "SubmitItemReviewVote");

	Params::PlayFabEconomyAPI_SubmitItemReviewVote Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyAPI.TakedownItemReviews
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FEconomyTakedownItemReviewsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FEconomyTakedownItemReviewsResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabEconomyAPI*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabEconomyAPI* UPlayFabEconomyAPI::TakedownItemReviews(const struct FEconomyTakedownItemReviewsRequest& Request, TDelegate<void(const struct FEconomyTakedownItemReviewsResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyAPI", "TakedownItemReviews");

	Params::PlayFabEconomyAPI_TakedownItemReviews Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyAPI.UpdateCatalogConfig
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FEconomyUpdateCatalogConfigRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FEconomyUpdateCatalogConfigResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabEconomyAPI*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabEconomyAPI* UPlayFabEconomyAPI::UpdateCatalogConfig(const struct FEconomyUpdateCatalogConfigRequest& Request, TDelegate<void(const struct FEconomyUpdateCatalogConfigResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyAPI", "UpdateCatalogConfig");

	Params::PlayFabEconomyAPI_UpdateCatalogConfig Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyAPI.UpdateDraftItem
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FEconomyUpdateDraftItemRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FEconomyUpdateDraftItemResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabEconomyAPI*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabEconomyAPI* UPlayFabEconomyAPI::UpdateDraftItem(const struct FEconomyUpdateDraftItemRequest& Request, TDelegate<void(const struct FEconomyUpdateDraftItemResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyAPI", "UpdateDraftItem");

	Params::PlayFabEconomyAPI_UpdateDraftItem Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyAPI.HelperCreateDraftItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabEconomyAPI::HelperCreateDraftItem(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabEconomyAPI", "HelperCreateDraftItem");

	Params::PlayFabEconomyAPI_HelperCreateDraftItem Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabEconomyAPI.HelperCreateUploadUrls
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabEconomyAPI::HelperCreateUploadUrls(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabEconomyAPI", "HelperCreateUploadUrls");

	Params::PlayFabEconomyAPI_HelperCreateUploadUrls Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabEconomyAPI.HelperDeleteEntityItemReviews
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabEconomyAPI::HelperDeleteEntityItemReviews(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabEconomyAPI", "HelperDeleteEntityItemReviews");

	Params::PlayFabEconomyAPI_HelperDeleteEntityItemReviews Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabEconomyAPI.HelperDeleteItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabEconomyAPI::HelperDeleteItem(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabEconomyAPI", "HelperDeleteItem");

	Params::PlayFabEconomyAPI_HelperDeleteItem Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabEconomyAPI.HelperGetCatalogConfig
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabEconomyAPI::HelperGetCatalogConfig(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabEconomyAPI", "HelperGetCatalogConfig");

	Params::PlayFabEconomyAPI_HelperGetCatalogConfig Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabEconomyAPI.HelperGetDraftItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabEconomyAPI::HelperGetDraftItem(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabEconomyAPI", "HelperGetDraftItem");

	Params::PlayFabEconomyAPI_HelperGetDraftItem Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabEconomyAPI.HelperGetDraftItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabEconomyAPI::HelperGetDraftItems(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabEconomyAPI", "HelperGetDraftItems");

	Params::PlayFabEconomyAPI_HelperGetDraftItems Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabEconomyAPI.HelperGetEntityDraftItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabEconomyAPI::HelperGetEntityDraftItems(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabEconomyAPI", "HelperGetEntityDraftItems");

	Params::PlayFabEconomyAPI_HelperGetEntityDraftItems Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabEconomyAPI.HelperGetEntityItemReview
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabEconomyAPI::HelperGetEntityItemReview(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabEconomyAPI", "HelperGetEntityItemReview");

	Params::PlayFabEconomyAPI_HelperGetEntityItemReview Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabEconomyAPI.HelperGetItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabEconomyAPI::HelperGetItem(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabEconomyAPI", "HelperGetItem");

	Params::PlayFabEconomyAPI_HelperGetItem Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabEconomyAPI.HelperGetItemModerationState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabEconomyAPI::HelperGetItemModerationState(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabEconomyAPI", "HelperGetItemModerationState");

	Params::PlayFabEconomyAPI_HelperGetItemModerationState Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabEconomyAPI.HelperGetItemPublishStatus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabEconomyAPI::HelperGetItemPublishStatus(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabEconomyAPI", "HelperGetItemPublishStatus");

	Params::PlayFabEconomyAPI_HelperGetItemPublishStatus Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabEconomyAPI.HelperGetItemReviews
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabEconomyAPI::HelperGetItemReviews(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabEconomyAPI", "HelperGetItemReviews");

	Params::PlayFabEconomyAPI_HelperGetItemReviews Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabEconomyAPI.HelperGetItemReviewSummary
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabEconomyAPI::HelperGetItemReviewSummary(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabEconomyAPI", "HelperGetItemReviewSummary");

	Params::PlayFabEconomyAPI_HelperGetItemReviewSummary Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabEconomyAPI.HelperGetItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabEconomyAPI::HelperGetItems(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabEconomyAPI", "HelperGetItems");

	Params::PlayFabEconomyAPI_HelperGetItems Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabEconomyAPI.HelperPublishDraftItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabEconomyAPI::HelperPublishDraftItem(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabEconomyAPI", "HelperPublishDraftItem");

	Params::PlayFabEconomyAPI_HelperPublishDraftItem Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabEconomyAPI.HelperReportItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabEconomyAPI::HelperReportItem(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabEconomyAPI", "HelperReportItem");

	Params::PlayFabEconomyAPI_HelperReportItem Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabEconomyAPI.HelperReportItemReview
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabEconomyAPI::HelperReportItemReview(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabEconomyAPI", "HelperReportItemReview");

	Params::PlayFabEconomyAPI_HelperReportItemReview Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabEconomyAPI.HelperReviewItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabEconomyAPI::HelperReviewItem(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabEconomyAPI", "HelperReviewItem");

	Params::PlayFabEconomyAPI_HelperReviewItem Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabEconomyAPI.HelperSearchItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabEconomyAPI::HelperSearchItems(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabEconomyAPI", "HelperSearchItems");

	Params::PlayFabEconomyAPI_HelperSearchItems Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabEconomyAPI.HelperSetItemModerationState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabEconomyAPI::HelperSetItemModerationState(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabEconomyAPI", "HelperSetItemModerationState");

	Params::PlayFabEconomyAPI_HelperSetItemModerationState Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabEconomyAPI.HelperSubmitItemReviewVote
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabEconomyAPI::HelperSubmitItemReviewVote(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabEconomyAPI", "HelperSubmitItemReviewVote");

	Params::PlayFabEconomyAPI_HelperSubmitItemReviewVote Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabEconomyAPI.HelperTakedownItemReviews
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabEconomyAPI::HelperTakedownItemReviews(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabEconomyAPI", "HelperTakedownItemReviews");

	Params::PlayFabEconomyAPI_HelperTakedownItemReviews Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabEconomyAPI.HelperUpdateCatalogConfig
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabEconomyAPI::HelperUpdateCatalogConfig(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabEconomyAPI", "HelperUpdateCatalogConfig");

	Params::PlayFabEconomyAPI_HelperUpdateCatalogConfig Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabEconomyAPI.HelperUpdateDraftItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabEconomyAPI::HelperUpdateDraftItem(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabEconomyAPI", "HelperUpdateDraftItem");

	Params::PlayFabEconomyAPI_HelperUpdateDraftItem Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabEconomyModelDecoder.decodeCreateDraftItemResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEconomyCreateDraftItemResponse  ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FEconomyCreateDraftItemResponse UPlayFabEconomyModelDecoder::decodeCreateDraftItemResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyModelDecoder", "decodeCreateDraftItemResponseResponse");

	Params::PlayFabEconomyModelDecoder_decodeCreateDraftItemResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyModelDecoder.decodeCreateUploadUrlsResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEconomyCreateUploadUrlsResponse ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FEconomyCreateUploadUrlsResponse UPlayFabEconomyModelDecoder::decodeCreateUploadUrlsResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyModelDecoder", "decodeCreateUploadUrlsResponseResponse");

	Params::PlayFabEconomyModelDecoder_decodeCreateUploadUrlsResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyModelDecoder.decodeDeleteEntityItemReviewsResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEconomyDeleteEntityItemReviewsResponseReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FEconomyDeleteEntityItemReviewsResponse UPlayFabEconomyModelDecoder::decodeDeleteEntityItemReviewsResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyModelDecoder", "decodeDeleteEntityItemReviewsResponseResponse");

	Params::PlayFabEconomyModelDecoder_decodeDeleteEntityItemReviewsResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyModelDecoder.decodeDeleteItemResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEconomyDeleteItemResponse       ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FEconomyDeleteItemResponse UPlayFabEconomyModelDecoder::decodeDeleteItemResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyModelDecoder", "decodeDeleteItemResponseResponse");

	Params::PlayFabEconomyModelDecoder_decodeDeleteItemResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyModelDecoder.decodeGetCatalogConfigResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEconomyGetCatalogConfigResponse ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FEconomyGetCatalogConfigResponse UPlayFabEconomyModelDecoder::decodeGetCatalogConfigResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyModelDecoder", "decodeGetCatalogConfigResponseResponse");

	Params::PlayFabEconomyModelDecoder_decodeGetCatalogConfigResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyModelDecoder.decodeGetDraftItemResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEconomyGetDraftItemResponse     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FEconomyGetDraftItemResponse UPlayFabEconomyModelDecoder::decodeGetDraftItemResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyModelDecoder", "decodeGetDraftItemResponseResponse");

	Params::PlayFabEconomyModelDecoder_decodeGetDraftItemResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyModelDecoder.decodeGetDraftItemsResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEconomyGetDraftItemsResponse    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FEconomyGetDraftItemsResponse UPlayFabEconomyModelDecoder::decodeGetDraftItemsResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyModelDecoder", "decodeGetDraftItemsResponseResponse");

	Params::PlayFabEconomyModelDecoder_decodeGetDraftItemsResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyModelDecoder.decodeGetEntityDraftItemsResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEconomyGetEntityDraftItemsResponseReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FEconomyGetEntityDraftItemsResponse UPlayFabEconomyModelDecoder::decodeGetEntityDraftItemsResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyModelDecoder", "decodeGetEntityDraftItemsResponseResponse");

	Params::PlayFabEconomyModelDecoder_decodeGetEntityDraftItemsResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyModelDecoder.decodeGetEntityItemReviewResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEconomyGetEntityItemReviewResponseReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FEconomyGetEntityItemReviewResponse UPlayFabEconomyModelDecoder::decodeGetEntityItemReviewResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyModelDecoder", "decodeGetEntityItemReviewResponseResponse");

	Params::PlayFabEconomyModelDecoder_decodeGetEntityItemReviewResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyModelDecoder.decodeGetItemModerationStateResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEconomyGetItemModerationStateResponseReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FEconomyGetItemModerationStateResponse UPlayFabEconomyModelDecoder::decodeGetItemModerationStateResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyModelDecoder", "decodeGetItemModerationStateResponseResponse");

	Params::PlayFabEconomyModelDecoder_decodeGetItemModerationStateResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyModelDecoder.decodeGetItemPublishStatusResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEconomyGetItemPublishStatusResponseReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FEconomyGetItemPublishStatusResponse UPlayFabEconomyModelDecoder::decodeGetItemPublishStatusResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyModelDecoder", "decodeGetItemPublishStatusResponseResponse");

	Params::PlayFabEconomyModelDecoder_decodeGetItemPublishStatusResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyModelDecoder.decodeGetItemResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEconomyGetItemResponse          ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FEconomyGetItemResponse UPlayFabEconomyModelDecoder::decodeGetItemResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyModelDecoder", "decodeGetItemResponseResponse");

	Params::PlayFabEconomyModelDecoder_decodeGetItemResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyModelDecoder.decodeGetItemReviewsResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEconomyGetItemReviewsResponse   ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FEconomyGetItemReviewsResponse UPlayFabEconomyModelDecoder::decodeGetItemReviewsResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyModelDecoder", "decodeGetItemReviewsResponseResponse");

	Params::PlayFabEconomyModelDecoder_decodeGetItemReviewsResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyModelDecoder.decodeGetItemReviewSummaryResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEconomyGetItemReviewSummaryResponseReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FEconomyGetItemReviewSummaryResponse UPlayFabEconomyModelDecoder::decodeGetItemReviewSummaryResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyModelDecoder", "decodeGetItemReviewSummaryResponseResponse");

	Params::PlayFabEconomyModelDecoder_decodeGetItemReviewSummaryResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyModelDecoder.decodeGetItemsResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEconomyGetItemsResponse         ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FEconomyGetItemsResponse UPlayFabEconomyModelDecoder::decodeGetItemsResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyModelDecoder", "decodeGetItemsResponseResponse");

	Params::PlayFabEconomyModelDecoder_decodeGetItemsResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyModelDecoder.decodePublishDraftItemResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEconomyPublishDraftItemResponse ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FEconomyPublishDraftItemResponse UPlayFabEconomyModelDecoder::decodePublishDraftItemResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyModelDecoder", "decodePublishDraftItemResponseResponse");

	Params::PlayFabEconomyModelDecoder_decodePublishDraftItemResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyModelDecoder.decodeReportItemResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEconomyReportItemResponse       ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FEconomyReportItemResponse UPlayFabEconomyModelDecoder::decodeReportItemResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyModelDecoder", "decodeReportItemResponseResponse");

	Params::PlayFabEconomyModelDecoder_decodeReportItemResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyModelDecoder.decodeReportItemReviewResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEconomyReportItemReviewResponse ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FEconomyReportItemReviewResponse UPlayFabEconomyModelDecoder::decodeReportItemReviewResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyModelDecoder", "decodeReportItemReviewResponseResponse");

	Params::PlayFabEconomyModelDecoder_decodeReportItemReviewResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyModelDecoder.decodeReviewItemResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEconomyReviewItemResponse       ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FEconomyReviewItemResponse UPlayFabEconomyModelDecoder::decodeReviewItemResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyModelDecoder", "decodeReviewItemResponseResponse");

	Params::PlayFabEconomyModelDecoder_decodeReviewItemResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyModelDecoder.decodeSearchItemsResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEconomySearchItemsResponse      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FEconomySearchItemsResponse UPlayFabEconomyModelDecoder::decodeSearchItemsResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyModelDecoder", "decodeSearchItemsResponseResponse");

	Params::PlayFabEconomyModelDecoder_decodeSearchItemsResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyModelDecoder.decodeSetItemModerationStateResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEconomySetItemModerationStateResponseReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FEconomySetItemModerationStateResponse UPlayFabEconomyModelDecoder::decodeSetItemModerationStateResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyModelDecoder", "decodeSetItemModerationStateResponseResponse");

	Params::PlayFabEconomyModelDecoder_decodeSetItemModerationStateResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyModelDecoder.decodeSubmitItemReviewVoteResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEconomySubmitItemReviewVoteResponseReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FEconomySubmitItemReviewVoteResponse UPlayFabEconomyModelDecoder::decodeSubmitItemReviewVoteResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyModelDecoder", "decodeSubmitItemReviewVoteResponseResponse");

	Params::PlayFabEconomyModelDecoder_decodeSubmitItemReviewVoteResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyModelDecoder.decodeTakedownItemReviewsResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEconomyTakedownItemReviewsResponseReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FEconomyTakedownItemReviewsResponse UPlayFabEconomyModelDecoder::decodeTakedownItemReviewsResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyModelDecoder", "decodeTakedownItemReviewsResponseResponse");

	Params::PlayFabEconomyModelDecoder_decodeTakedownItemReviewsResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyModelDecoder.decodeUpdateCatalogConfigResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEconomyUpdateCatalogConfigResponseReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FEconomyUpdateCatalogConfigResponse UPlayFabEconomyModelDecoder::decodeUpdateCatalogConfigResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyModelDecoder", "decodeUpdateCatalogConfigResponseResponse");

	Params::PlayFabEconomyModelDecoder_decodeUpdateCatalogConfigResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEconomyModelDecoder.decodeUpdateDraftItemResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEconomyUpdateDraftItemResponse  ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FEconomyUpdateDraftItemResponse UPlayFabEconomyModelDecoder::decodeUpdateDraftItemResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEconomyModelDecoder", "decodeUpdateDraftItemResponseResponse");

	Params::PlayFabEconomyModelDecoder_decodeUpdateDraftItemResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEventsAPI.WriteEvents
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FEventsWriteEventsRequest& Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FEventsWriteEventsResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabEventsAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabEventsAPI* UPlayFabEventsAPI::WriteEvents(const struct FEventsWriteEventsRequest& Request, TDelegate<void(const struct FEventsWriteEventsResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEventsAPI", "WriteEvents");

	Params::PlayFabEventsAPI_WriteEvents Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEventsAPI.WriteTelemetryEvents
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FEventsWriteEventsRequest& Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FEventsWriteEventsResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabEventsAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabEventsAPI* UPlayFabEventsAPI::WriteTelemetryEvents(const struct FEventsWriteEventsRequest& Request, TDelegate<void(const struct FEventsWriteEventsResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEventsAPI", "WriteTelemetryEvents");

	Params::PlayFabEventsAPI_WriteTelemetryEvents Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabEventsAPI.HelperWriteEvents
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabEventsAPI::HelperWriteEvents(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabEventsAPI", "HelperWriteEvents");

	Params::PlayFabEventsAPI_HelperWriteEvents Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabEventsAPI.HelperWriteTelemetryEvents
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabEventsAPI::HelperWriteTelemetryEvents(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabEventsAPI", "HelperWriteTelemetryEvents");

	Params::PlayFabEventsAPI_HelperWriteTelemetryEvents Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabEventsModelDecoder.decodeWriteEventsResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEventsWriteEventsResponse       ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FEventsWriteEventsResponse UPlayFabEventsModelDecoder::decodeWriteEventsResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabEventsModelDecoder", "decodeWriteEventsResponseResponse");

	Params::PlayFabEventsModelDecoder_decodeWriteEventsResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabExperimentationAPI.CreateExclusionGroup
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FExperimentationCreateExclusionGroupRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FExperimentationCreateExclusionGroupResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabExperimentationAPI*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabExperimentationAPI* UPlayFabExperimentationAPI::CreateExclusionGroup(const struct FExperimentationCreateExclusionGroupRequest& Request, TDelegate<void(const struct FExperimentationCreateExclusionGroupResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabExperimentationAPI", "CreateExclusionGroup");

	Params::PlayFabExperimentationAPI_CreateExclusionGroup Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabExperimentationAPI.CreateExperiment
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FExperimentationCreateExperimentRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FExperimentationCreateExperimentResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabExperimentationAPI*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabExperimentationAPI* UPlayFabExperimentationAPI::CreateExperiment(const struct FExperimentationCreateExperimentRequest& Request, TDelegate<void(const struct FExperimentationCreateExperimentResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabExperimentationAPI", "CreateExperiment");

	Params::PlayFabExperimentationAPI_CreateExperiment Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabExperimentationAPI.DeleteExclusionGroup
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FExperimentationDeleteExclusionGroupRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FExperimentationEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabExperimentationAPI*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabExperimentationAPI* UPlayFabExperimentationAPI::DeleteExclusionGroup(const struct FExperimentationDeleteExclusionGroupRequest& Request, TDelegate<void(const struct FExperimentationEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabExperimentationAPI", "DeleteExclusionGroup");

	Params::PlayFabExperimentationAPI_DeleteExclusionGroup Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabExperimentationAPI.DeleteExperiment
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FExperimentationDeleteExperimentRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FExperimentationEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabExperimentationAPI*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabExperimentationAPI* UPlayFabExperimentationAPI::DeleteExperiment(const struct FExperimentationDeleteExperimentRequest& Request, TDelegate<void(const struct FExperimentationEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabExperimentationAPI", "DeleteExperiment");

	Params::PlayFabExperimentationAPI_DeleteExperiment Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabExperimentationAPI.GetExclusionGroups
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FExperimentationGetExclusionGroupsRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FExperimentationGetExclusionGroupsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabExperimentationAPI*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabExperimentationAPI* UPlayFabExperimentationAPI::GetExclusionGroups(const struct FExperimentationGetExclusionGroupsRequest& Request, TDelegate<void(const struct FExperimentationGetExclusionGroupsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabExperimentationAPI", "GetExclusionGroups");

	Params::PlayFabExperimentationAPI_GetExclusionGroups Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabExperimentationAPI.GetExclusionGroupTraffic
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FExperimentationGetExclusionGroupTrafficRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FExperimentationGetExclusionGroupTrafficResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabExperimentationAPI*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabExperimentationAPI* UPlayFabExperimentationAPI::GetExclusionGroupTraffic(const struct FExperimentationGetExclusionGroupTrafficRequest& Request, TDelegate<void(const struct FExperimentationGetExclusionGroupTrafficResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabExperimentationAPI", "GetExclusionGroupTraffic");

	Params::PlayFabExperimentationAPI_GetExclusionGroupTraffic Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabExperimentationAPI.GetExperiments
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FExperimentationGetExperimentsRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FExperimentationGetExperimentsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabExperimentationAPI*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabExperimentationAPI* UPlayFabExperimentationAPI::GetExperiments(const struct FExperimentationGetExperimentsRequest& Request, TDelegate<void(const struct FExperimentationGetExperimentsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabExperimentationAPI", "GetExperiments");

	Params::PlayFabExperimentationAPI_GetExperiments Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabExperimentationAPI.GetLatestScorecard
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FExperimentationGetLatestScorecardRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FExperimentationGetLatestScorecardResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabExperimentationAPI*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabExperimentationAPI* UPlayFabExperimentationAPI::GetLatestScorecard(const struct FExperimentationGetLatestScorecardRequest& Request, TDelegate<void(const struct FExperimentationGetLatestScorecardResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabExperimentationAPI", "GetLatestScorecard");

	Params::PlayFabExperimentationAPI_GetLatestScorecard Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabExperimentationAPI.GetTreatmentAssignment
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FExperimentationGetTreatmentAssignmentRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FExperimentationGetTreatmentAssignmentResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabExperimentationAPI*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabExperimentationAPI* UPlayFabExperimentationAPI::GetTreatmentAssignment(const struct FExperimentationGetTreatmentAssignmentRequest& Request, TDelegate<void(const struct FExperimentationGetTreatmentAssignmentResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabExperimentationAPI", "GetTreatmentAssignment");

	Params::PlayFabExperimentationAPI_GetTreatmentAssignment Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabExperimentationAPI.StartExperiment
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FExperimentationStartExperimentRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FExperimentationEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabExperimentationAPI*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabExperimentationAPI* UPlayFabExperimentationAPI::StartExperiment(const struct FExperimentationStartExperimentRequest& Request, TDelegate<void(const struct FExperimentationEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabExperimentationAPI", "StartExperiment");

	Params::PlayFabExperimentationAPI_StartExperiment Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabExperimentationAPI.StopExperiment
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FExperimentationStopExperimentRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FExperimentationEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabExperimentationAPI*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabExperimentationAPI* UPlayFabExperimentationAPI::StopExperiment(const struct FExperimentationStopExperimentRequest& Request, TDelegate<void(const struct FExperimentationEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabExperimentationAPI", "StopExperiment");

	Params::PlayFabExperimentationAPI_StopExperiment Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabExperimentationAPI.UpdateExclusionGroup
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FExperimentationUpdateExclusionGroupRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FExperimentationEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabExperimentationAPI*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabExperimentationAPI* UPlayFabExperimentationAPI::UpdateExclusionGroup(const struct FExperimentationUpdateExclusionGroupRequest& Request, TDelegate<void(const struct FExperimentationEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabExperimentationAPI", "UpdateExclusionGroup");

	Params::PlayFabExperimentationAPI_UpdateExclusionGroup Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabExperimentationAPI.UpdateExperiment
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FExperimentationUpdateExperimentRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FExperimentationEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabExperimentationAPI*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabExperimentationAPI* UPlayFabExperimentationAPI::UpdateExperiment(const struct FExperimentationUpdateExperimentRequest& Request, TDelegate<void(const struct FExperimentationEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabExperimentationAPI", "UpdateExperiment");

	Params::PlayFabExperimentationAPI_UpdateExperiment Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabExperimentationAPI.HelperCreateExclusionGroup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabExperimentationAPI::HelperCreateExclusionGroup(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabExperimentationAPI", "HelperCreateExclusionGroup");

	Params::PlayFabExperimentationAPI_HelperCreateExclusionGroup Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabExperimentationAPI.HelperCreateExperiment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabExperimentationAPI::HelperCreateExperiment(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabExperimentationAPI", "HelperCreateExperiment");

	Params::PlayFabExperimentationAPI_HelperCreateExperiment Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabExperimentationAPI.HelperDeleteExclusionGroup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabExperimentationAPI::HelperDeleteExclusionGroup(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabExperimentationAPI", "HelperDeleteExclusionGroup");

	Params::PlayFabExperimentationAPI_HelperDeleteExclusionGroup Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabExperimentationAPI.HelperDeleteExperiment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabExperimentationAPI::HelperDeleteExperiment(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabExperimentationAPI", "HelperDeleteExperiment");

	Params::PlayFabExperimentationAPI_HelperDeleteExperiment Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabExperimentationAPI.HelperGetExclusionGroups
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabExperimentationAPI::HelperGetExclusionGroups(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabExperimentationAPI", "HelperGetExclusionGroups");

	Params::PlayFabExperimentationAPI_HelperGetExclusionGroups Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabExperimentationAPI.HelperGetExclusionGroupTraffic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabExperimentationAPI::HelperGetExclusionGroupTraffic(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabExperimentationAPI", "HelperGetExclusionGroupTraffic");

	Params::PlayFabExperimentationAPI_HelperGetExclusionGroupTraffic Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabExperimentationAPI.HelperGetExperiments
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabExperimentationAPI::HelperGetExperiments(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabExperimentationAPI", "HelperGetExperiments");

	Params::PlayFabExperimentationAPI_HelperGetExperiments Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabExperimentationAPI.HelperGetLatestScorecard
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabExperimentationAPI::HelperGetLatestScorecard(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabExperimentationAPI", "HelperGetLatestScorecard");

	Params::PlayFabExperimentationAPI_HelperGetLatestScorecard Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabExperimentationAPI.HelperGetTreatmentAssignment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabExperimentationAPI::HelperGetTreatmentAssignment(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabExperimentationAPI", "HelperGetTreatmentAssignment");

	Params::PlayFabExperimentationAPI_HelperGetTreatmentAssignment Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabExperimentationAPI.HelperStartExperiment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabExperimentationAPI::HelperStartExperiment(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabExperimentationAPI", "HelperStartExperiment");

	Params::PlayFabExperimentationAPI_HelperStartExperiment Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabExperimentationAPI.HelperStopExperiment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabExperimentationAPI::HelperStopExperiment(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabExperimentationAPI", "HelperStopExperiment");

	Params::PlayFabExperimentationAPI_HelperStopExperiment Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabExperimentationAPI.HelperUpdateExclusionGroup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabExperimentationAPI::HelperUpdateExclusionGroup(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabExperimentationAPI", "HelperUpdateExclusionGroup");

	Params::PlayFabExperimentationAPI_HelperUpdateExclusionGroup Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabExperimentationAPI.HelperUpdateExperiment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabExperimentationAPI::HelperUpdateExperiment(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabExperimentationAPI", "HelperUpdateExperiment");

	Params::PlayFabExperimentationAPI_HelperUpdateExperiment Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabExperimentationModelDecoder.decodeCreateExclusionGroupResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FExperimentationCreateExclusionGroupResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FExperimentationCreateExclusionGroupResult UPlayFabExperimentationModelDecoder::decodeCreateExclusionGroupResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabExperimentationModelDecoder", "decodeCreateExclusionGroupResultResponse");

	Params::PlayFabExperimentationModelDecoder_decodeCreateExclusionGroupResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabExperimentationModelDecoder.decodeCreateExperimentResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FExperimentationCreateExperimentResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FExperimentationCreateExperimentResult UPlayFabExperimentationModelDecoder::decodeCreateExperimentResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabExperimentationModelDecoder", "decodeCreateExperimentResultResponse");

	Params::PlayFabExperimentationModelDecoder_decodeCreateExperimentResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabExperimentationModelDecoder.decodeEmptyResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FExperimentationEmptyResponse    ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FExperimentationEmptyResponse UPlayFabExperimentationModelDecoder::decodeEmptyResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabExperimentationModelDecoder", "decodeEmptyResponseResponse");

	Params::PlayFabExperimentationModelDecoder_decodeEmptyResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabExperimentationModelDecoder.decodeGetExclusionGroupsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FExperimentationGetExclusionGroupsResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FExperimentationGetExclusionGroupsResult UPlayFabExperimentationModelDecoder::decodeGetExclusionGroupsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabExperimentationModelDecoder", "decodeGetExclusionGroupsResultResponse");

	Params::PlayFabExperimentationModelDecoder_decodeGetExclusionGroupsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabExperimentationModelDecoder.decodeGetExclusionGroupTrafficResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FExperimentationGetExclusionGroupTrafficResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FExperimentationGetExclusionGroupTrafficResult UPlayFabExperimentationModelDecoder::decodeGetExclusionGroupTrafficResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabExperimentationModelDecoder", "decodeGetExclusionGroupTrafficResultResponse");

	Params::PlayFabExperimentationModelDecoder_decodeGetExclusionGroupTrafficResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabExperimentationModelDecoder.decodeGetExperimentsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FExperimentationGetExperimentsResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FExperimentationGetExperimentsResult UPlayFabExperimentationModelDecoder::decodeGetExperimentsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabExperimentationModelDecoder", "decodeGetExperimentsResultResponse");

	Params::PlayFabExperimentationModelDecoder_decodeGetExperimentsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabExperimentationModelDecoder.decodeGetLatestScorecardResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FExperimentationGetLatestScorecardResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FExperimentationGetLatestScorecardResult UPlayFabExperimentationModelDecoder::decodeGetLatestScorecardResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabExperimentationModelDecoder", "decodeGetLatestScorecardResultResponse");

	Params::PlayFabExperimentationModelDecoder_decodeGetLatestScorecardResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabExperimentationModelDecoder.decodeGetTreatmentAssignmentResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FExperimentationGetTreatmentAssignmentResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FExperimentationGetTreatmentAssignmentResult UPlayFabExperimentationModelDecoder::decodeGetTreatmentAssignmentResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabExperimentationModelDecoder", "decodeGetTreatmentAssignmentResultResponse");

	Params::PlayFabExperimentationModelDecoder_decodeGetTreatmentAssignmentResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabGroupsAPI.AcceptGroupApplication
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FGroupsAcceptGroupApplicationRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabGroupsAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabGroupsAPI* UPlayFabGroupsAPI::AcceptGroupApplication(const struct FGroupsAcceptGroupApplicationRequest& Request, TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabGroupsAPI", "AcceptGroupApplication");

	Params::PlayFabGroupsAPI_AcceptGroupApplication Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabGroupsAPI.AcceptGroupInvitation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FGroupsAcceptGroupInvitationRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabGroupsAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabGroupsAPI* UPlayFabGroupsAPI::AcceptGroupInvitation(const struct FGroupsAcceptGroupInvitationRequest& Request, TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabGroupsAPI", "AcceptGroupInvitation");

	Params::PlayFabGroupsAPI_AcceptGroupInvitation Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabGroupsAPI.AddMembers
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FGroupsAddMembersRequest&  Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabGroupsAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabGroupsAPI* UPlayFabGroupsAPI::AddMembers(const struct FGroupsAddMembersRequest& Request, TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabGroupsAPI", "AddMembers");

	Params::PlayFabGroupsAPI_AddMembers Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabGroupsAPI.ApplyToGroup
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FGroupsApplyToGroupRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FGroupsApplyToGroupResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabGroupsAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabGroupsAPI* UPlayFabGroupsAPI::ApplyToGroup(const struct FGroupsApplyToGroupRequest& Request, TDelegate<void(const struct FGroupsApplyToGroupResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabGroupsAPI", "ApplyToGroup");

	Params::PlayFabGroupsAPI_ApplyToGroup Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabGroupsAPI.BlockEntity
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FGroupsBlockEntityRequest& Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabGroupsAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabGroupsAPI* UPlayFabGroupsAPI::BlockEntity(const struct FGroupsBlockEntityRequest& Request, TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabGroupsAPI", "BlockEntity");

	Params::PlayFabGroupsAPI_BlockEntity Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabGroupsAPI.ChangeMemberRole
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FGroupsChangeMemberRoleRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabGroupsAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabGroupsAPI* UPlayFabGroupsAPI::ChangeMemberRole(const struct FGroupsChangeMemberRoleRequest& Request, TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabGroupsAPI", "ChangeMemberRole");

	Params::PlayFabGroupsAPI_ChangeMemberRole Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabGroupsAPI.CreateGroup
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FGroupsCreateGroupRequest& Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FGroupsCreateGroupResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabGroupsAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabGroupsAPI* UPlayFabGroupsAPI::CreateGroup(const struct FGroupsCreateGroupRequest& Request, TDelegate<void(const struct FGroupsCreateGroupResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabGroupsAPI", "CreateGroup");

	Params::PlayFabGroupsAPI_CreateGroup Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabGroupsAPI.CreateRole
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FGroupsCreateGroupRoleRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FGroupsCreateGroupRoleResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabGroupsAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabGroupsAPI* UPlayFabGroupsAPI::CreateRole(const struct FGroupsCreateGroupRoleRequest& Request, TDelegate<void(const struct FGroupsCreateGroupRoleResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabGroupsAPI", "CreateRole");

	Params::PlayFabGroupsAPI_CreateRole Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabGroupsAPI.DeleteGroup
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FGroupsDeleteGroupRequest& Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabGroupsAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabGroupsAPI* UPlayFabGroupsAPI::DeleteGroup(const struct FGroupsDeleteGroupRequest& Request, TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabGroupsAPI", "DeleteGroup");

	Params::PlayFabGroupsAPI_DeleteGroup Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabGroupsAPI.DeleteRole
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FGroupsDeleteRoleRequest&  Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabGroupsAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabGroupsAPI* UPlayFabGroupsAPI::DeleteRole(const struct FGroupsDeleteRoleRequest& Request, TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabGroupsAPI", "DeleteRole");

	Params::PlayFabGroupsAPI_DeleteRole Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabGroupsAPI.GetGroup
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FGroupsGetGroupRequest&    Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FGroupsGetGroupResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabGroupsAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabGroupsAPI* UPlayFabGroupsAPI::GetGroup(const struct FGroupsGetGroupRequest& Request, TDelegate<void(const struct FGroupsGetGroupResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabGroupsAPI", "GetGroup");

	Params::PlayFabGroupsAPI_GetGroup Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabGroupsAPI.InviteToGroup
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FGroupsInviteToGroupRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FGroupsInviteToGroupResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabGroupsAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabGroupsAPI* UPlayFabGroupsAPI::InviteToGroup(const struct FGroupsInviteToGroupRequest& Request, TDelegate<void(const struct FGroupsInviteToGroupResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabGroupsAPI", "InviteToGroup");

	Params::PlayFabGroupsAPI_InviteToGroup Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabGroupsAPI.IsMember
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FGroupsIsMemberRequest&    Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FGroupsIsMemberResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabGroupsAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabGroupsAPI* UPlayFabGroupsAPI::IsMember(const struct FGroupsIsMemberRequest& Request, TDelegate<void(const struct FGroupsIsMemberResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabGroupsAPI", "IsMember");

	Params::PlayFabGroupsAPI_IsMember Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabGroupsAPI.ListGroupApplications
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FGroupsListGroupApplicationsRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FGroupsListGroupApplicationsResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabGroupsAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabGroupsAPI* UPlayFabGroupsAPI::ListGroupApplications(const struct FGroupsListGroupApplicationsRequest& Request, TDelegate<void(const struct FGroupsListGroupApplicationsResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabGroupsAPI", "ListGroupApplications");

	Params::PlayFabGroupsAPI_ListGroupApplications Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabGroupsAPI.ListGroupBlocks
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FGroupsListGroupBlocksRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FGroupsListGroupBlocksResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabGroupsAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabGroupsAPI* UPlayFabGroupsAPI::ListGroupBlocks(const struct FGroupsListGroupBlocksRequest& Request, TDelegate<void(const struct FGroupsListGroupBlocksResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabGroupsAPI", "ListGroupBlocks");

	Params::PlayFabGroupsAPI_ListGroupBlocks Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabGroupsAPI.ListGroupInvitations
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FGroupsListGroupInvitationsRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FGroupsListGroupInvitationsResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabGroupsAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabGroupsAPI* UPlayFabGroupsAPI::ListGroupInvitations(const struct FGroupsListGroupInvitationsRequest& Request, TDelegate<void(const struct FGroupsListGroupInvitationsResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabGroupsAPI", "ListGroupInvitations");

	Params::PlayFabGroupsAPI_ListGroupInvitations Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabGroupsAPI.ListGroupMembers
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FGroupsListGroupMembersRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FGroupsListGroupMembersResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabGroupsAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabGroupsAPI* UPlayFabGroupsAPI::ListGroupMembers(const struct FGroupsListGroupMembersRequest& Request, TDelegate<void(const struct FGroupsListGroupMembersResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabGroupsAPI", "ListGroupMembers");

	Params::PlayFabGroupsAPI_ListGroupMembers Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabGroupsAPI.ListMembership
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FGroupsListMembershipRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FGroupsListMembershipResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabGroupsAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabGroupsAPI* UPlayFabGroupsAPI::ListMembership(const struct FGroupsListMembershipRequest& Request, TDelegate<void(const struct FGroupsListMembershipResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabGroupsAPI", "ListMembership");

	Params::PlayFabGroupsAPI_ListMembership Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabGroupsAPI.ListMembershipOpportunities
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FGroupsListMembershipOpportunitiesRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FGroupsListMembershipOpportunitiesResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabGroupsAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabGroupsAPI* UPlayFabGroupsAPI::ListMembershipOpportunities(const struct FGroupsListMembershipOpportunitiesRequest& Request, TDelegate<void(const struct FGroupsListMembershipOpportunitiesResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabGroupsAPI", "ListMembershipOpportunities");

	Params::PlayFabGroupsAPI_ListMembershipOpportunities Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabGroupsAPI.RemoveGroupApplication
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FGroupsRemoveGroupApplicationRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabGroupsAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabGroupsAPI* UPlayFabGroupsAPI::RemoveGroupApplication(const struct FGroupsRemoveGroupApplicationRequest& Request, TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabGroupsAPI", "RemoveGroupApplication");

	Params::PlayFabGroupsAPI_RemoveGroupApplication Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabGroupsAPI.RemoveGroupInvitation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FGroupsRemoveGroupInvitationRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabGroupsAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabGroupsAPI* UPlayFabGroupsAPI::RemoveGroupInvitation(const struct FGroupsRemoveGroupInvitationRequest& Request, TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabGroupsAPI", "RemoveGroupInvitation");

	Params::PlayFabGroupsAPI_RemoveGroupInvitation Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabGroupsAPI.RemoveMembers
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FGroupsRemoveMembersRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabGroupsAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabGroupsAPI* UPlayFabGroupsAPI::RemoveMembers(const struct FGroupsRemoveMembersRequest& Request, TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabGroupsAPI", "RemoveMembers");

	Params::PlayFabGroupsAPI_RemoveMembers Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabGroupsAPI.UnblockEntity
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FGroupsUnblockEntityRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabGroupsAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabGroupsAPI* UPlayFabGroupsAPI::UnblockEntity(const struct FGroupsUnblockEntityRequest& Request, TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabGroupsAPI", "UnblockEntity");

	Params::PlayFabGroupsAPI_UnblockEntity Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabGroupsAPI.UpdateGroup
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FGroupsUpdateGroupRequest& Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FGroupsUpdateGroupResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabGroupsAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabGroupsAPI* UPlayFabGroupsAPI::UpdateGroup(const struct FGroupsUpdateGroupRequest& Request, TDelegate<void(const struct FGroupsUpdateGroupResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabGroupsAPI", "UpdateGroup");

	Params::PlayFabGroupsAPI_UpdateGroup Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabGroupsAPI.UpdateRole
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FGroupsUpdateGroupRoleRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FGroupsUpdateGroupRoleResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabGroupsAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabGroupsAPI* UPlayFabGroupsAPI::UpdateRole(const struct FGroupsUpdateGroupRoleRequest& Request, TDelegate<void(const struct FGroupsUpdateGroupRoleResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabGroupsAPI", "UpdateRole");

	Params::PlayFabGroupsAPI_UpdateRole Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabGroupsAPI.HelperAcceptGroupApplication
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabGroupsAPI::HelperAcceptGroupApplication(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabGroupsAPI", "HelperAcceptGroupApplication");

	Params::PlayFabGroupsAPI_HelperAcceptGroupApplication Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabGroupsAPI.HelperAcceptGroupInvitation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabGroupsAPI::HelperAcceptGroupInvitation(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabGroupsAPI", "HelperAcceptGroupInvitation");

	Params::PlayFabGroupsAPI_HelperAcceptGroupInvitation Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabGroupsAPI.HelperAddMembers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabGroupsAPI::HelperAddMembers(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabGroupsAPI", "HelperAddMembers");

	Params::PlayFabGroupsAPI_HelperAddMembers Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabGroupsAPI.HelperApplyToGroup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabGroupsAPI::HelperApplyToGroup(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabGroupsAPI", "HelperApplyToGroup");

	Params::PlayFabGroupsAPI_HelperApplyToGroup Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabGroupsAPI.HelperBlockEntity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabGroupsAPI::HelperBlockEntity(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabGroupsAPI", "HelperBlockEntity");

	Params::PlayFabGroupsAPI_HelperBlockEntity Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabGroupsAPI.HelperChangeMemberRole
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabGroupsAPI::HelperChangeMemberRole(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabGroupsAPI", "HelperChangeMemberRole");

	Params::PlayFabGroupsAPI_HelperChangeMemberRole Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabGroupsAPI.HelperCreateGroup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabGroupsAPI::HelperCreateGroup(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabGroupsAPI", "HelperCreateGroup");

	Params::PlayFabGroupsAPI_HelperCreateGroup Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabGroupsAPI.HelperCreateRole
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabGroupsAPI::HelperCreateRole(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabGroupsAPI", "HelperCreateRole");

	Params::PlayFabGroupsAPI_HelperCreateRole Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabGroupsAPI.HelperDeleteGroup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabGroupsAPI::HelperDeleteGroup(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabGroupsAPI", "HelperDeleteGroup");

	Params::PlayFabGroupsAPI_HelperDeleteGroup Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabGroupsAPI.HelperDeleteRole
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabGroupsAPI::HelperDeleteRole(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabGroupsAPI", "HelperDeleteRole");

	Params::PlayFabGroupsAPI_HelperDeleteRole Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabGroupsAPI.HelperGetGroup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabGroupsAPI::HelperGetGroup(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabGroupsAPI", "HelperGetGroup");

	Params::PlayFabGroupsAPI_HelperGetGroup Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabGroupsAPI.HelperInviteToGroup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabGroupsAPI::HelperInviteToGroup(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabGroupsAPI", "HelperInviteToGroup");

	Params::PlayFabGroupsAPI_HelperInviteToGroup Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabGroupsAPI.HelperIsMember
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabGroupsAPI::HelperIsMember(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabGroupsAPI", "HelperIsMember");

	Params::PlayFabGroupsAPI_HelperIsMember Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabGroupsAPI.HelperListGroupApplications
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabGroupsAPI::HelperListGroupApplications(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabGroupsAPI", "HelperListGroupApplications");

	Params::PlayFabGroupsAPI_HelperListGroupApplications Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabGroupsAPI.HelperListGroupBlocks
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabGroupsAPI::HelperListGroupBlocks(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabGroupsAPI", "HelperListGroupBlocks");

	Params::PlayFabGroupsAPI_HelperListGroupBlocks Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabGroupsAPI.HelperListGroupInvitations
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabGroupsAPI::HelperListGroupInvitations(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabGroupsAPI", "HelperListGroupInvitations");

	Params::PlayFabGroupsAPI_HelperListGroupInvitations Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabGroupsAPI.HelperListGroupMembers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabGroupsAPI::HelperListGroupMembers(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabGroupsAPI", "HelperListGroupMembers");

	Params::PlayFabGroupsAPI_HelperListGroupMembers Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabGroupsAPI.HelperListMembership
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabGroupsAPI::HelperListMembership(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabGroupsAPI", "HelperListMembership");

	Params::PlayFabGroupsAPI_HelperListMembership Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabGroupsAPI.HelperListMembershipOpportunities
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabGroupsAPI::HelperListMembershipOpportunities(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabGroupsAPI", "HelperListMembershipOpportunities");

	Params::PlayFabGroupsAPI_HelperListMembershipOpportunities Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabGroupsAPI.HelperRemoveGroupApplication
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabGroupsAPI::HelperRemoveGroupApplication(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabGroupsAPI", "HelperRemoveGroupApplication");

	Params::PlayFabGroupsAPI_HelperRemoveGroupApplication Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabGroupsAPI.HelperRemoveGroupInvitation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabGroupsAPI::HelperRemoveGroupInvitation(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabGroupsAPI", "HelperRemoveGroupInvitation");

	Params::PlayFabGroupsAPI_HelperRemoveGroupInvitation Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabGroupsAPI.HelperRemoveMembers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabGroupsAPI::HelperRemoveMembers(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabGroupsAPI", "HelperRemoveMembers");

	Params::PlayFabGroupsAPI_HelperRemoveMembers Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabGroupsAPI.HelperUnblockEntity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabGroupsAPI::HelperUnblockEntity(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabGroupsAPI", "HelperUnblockEntity");

	Params::PlayFabGroupsAPI_HelperUnblockEntity Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabGroupsAPI.HelperUpdateGroup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabGroupsAPI::HelperUpdateGroup(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabGroupsAPI", "HelperUpdateGroup");

	Params::PlayFabGroupsAPI_HelperUpdateGroup Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabGroupsAPI.HelperUpdateRole
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabGroupsAPI::HelperUpdateRole(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabGroupsAPI", "HelperUpdateRole");

	Params::PlayFabGroupsAPI_HelperUpdateRole Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabGroupsModelDecoder.decodeApplyToGroupResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGroupsApplyToGroupResponse      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGroupsApplyToGroupResponse UPlayFabGroupsModelDecoder::decodeApplyToGroupResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabGroupsModelDecoder", "decodeApplyToGroupResponseResponse");

	Params::PlayFabGroupsModelDecoder_decodeApplyToGroupResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabGroupsModelDecoder.decodeCreateGroupResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGroupsCreateGroupResponse       ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGroupsCreateGroupResponse UPlayFabGroupsModelDecoder::decodeCreateGroupResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabGroupsModelDecoder", "decodeCreateGroupResponseResponse");

	Params::PlayFabGroupsModelDecoder_decodeCreateGroupResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabGroupsModelDecoder.decodeCreateGroupRoleResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGroupsCreateGroupRoleResponse   ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGroupsCreateGroupRoleResponse UPlayFabGroupsModelDecoder::decodeCreateGroupRoleResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabGroupsModelDecoder", "decodeCreateGroupRoleResponseResponse");

	Params::PlayFabGroupsModelDecoder_decodeCreateGroupRoleResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabGroupsModelDecoder.decodeEmptyResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGroupsEmptyResponse             ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FGroupsEmptyResponse UPlayFabGroupsModelDecoder::decodeEmptyResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabGroupsModelDecoder", "decodeEmptyResponseResponse");

	Params::PlayFabGroupsModelDecoder_decodeEmptyResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabGroupsModelDecoder.decodeGetGroupResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGroupsGetGroupResponse          ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGroupsGetGroupResponse UPlayFabGroupsModelDecoder::decodeGetGroupResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabGroupsModelDecoder", "decodeGetGroupResponseResponse");

	Params::PlayFabGroupsModelDecoder_decodeGetGroupResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabGroupsModelDecoder.decodeInviteToGroupResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGroupsInviteToGroupResponse     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGroupsInviteToGroupResponse UPlayFabGroupsModelDecoder::decodeInviteToGroupResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabGroupsModelDecoder", "decodeInviteToGroupResponseResponse");

	Params::PlayFabGroupsModelDecoder_decodeInviteToGroupResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabGroupsModelDecoder.decodeIsMemberResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGroupsIsMemberResponse          ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FGroupsIsMemberResponse UPlayFabGroupsModelDecoder::decodeIsMemberResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabGroupsModelDecoder", "decodeIsMemberResponseResponse");

	Params::PlayFabGroupsModelDecoder_decodeIsMemberResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabGroupsModelDecoder.decodeListGroupApplicationsResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGroupsListGroupApplicationsResponseReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGroupsListGroupApplicationsResponse UPlayFabGroupsModelDecoder::decodeListGroupApplicationsResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabGroupsModelDecoder", "decodeListGroupApplicationsResponseResponse");

	Params::PlayFabGroupsModelDecoder_decodeListGroupApplicationsResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabGroupsModelDecoder.decodeListGroupBlocksResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGroupsListGroupBlocksResponse   ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGroupsListGroupBlocksResponse UPlayFabGroupsModelDecoder::decodeListGroupBlocksResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabGroupsModelDecoder", "decodeListGroupBlocksResponseResponse");

	Params::PlayFabGroupsModelDecoder_decodeListGroupBlocksResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabGroupsModelDecoder.decodeListGroupInvitationsResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGroupsListGroupInvitationsResponseReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGroupsListGroupInvitationsResponse UPlayFabGroupsModelDecoder::decodeListGroupInvitationsResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabGroupsModelDecoder", "decodeListGroupInvitationsResponseResponse");

	Params::PlayFabGroupsModelDecoder_decodeListGroupInvitationsResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabGroupsModelDecoder.decodeListGroupMembersResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGroupsListGroupMembersResponse  ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGroupsListGroupMembersResponse UPlayFabGroupsModelDecoder::decodeListGroupMembersResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabGroupsModelDecoder", "decodeListGroupMembersResponseResponse");

	Params::PlayFabGroupsModelDecoder_decodeListGroupMembersResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabGroupsModelDecoder.decodeListMembershipOpportunitiesResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGroupsListMembershipOpportunitiesResponseReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGroupsListMembershipOpportunitiesResponse UPlayFabGroupsModelDecoder::decodeListMembershipOpportunitiesResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabGroupsModelDecoder", "decodeListMembershipOpportunitiesResponseResponse");

	Params::PlayFabGroupsModelDecoder_decodeListMembershipOpportunitiesResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabGroupsModelDecoder.decodeListMembershipResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGroupsListMembershipResponse    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGroupsListMembershipResponse UPlayFabGroupsModelDecoder::decodeListMembershipResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabGroupsModelDecoder", "decodeListMembershipResponseResponse");

	Params::PlayFabGroupsModelDecoder_decodeListMembershipResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabGroupsModelDecoder.decodeUpdateGroupResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGroupsUpdateGroupResponse       ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGroupsUpdateGroupResponse UPlayFabGroupsModelDecoder::decodeUpdateGroupResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabGroupsModelDecoder", "decodeUpdateGroupResponseResponse");

	Params::PlayFabGroupsModelDecoder_decodeUpdateGroupResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabGroupsModelDecoder.decodeUpdateGroupRoleResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGroupsUpdateGroupRoleResponse   ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGroupsUpdateGroupRoleResponse UPlayFabGroupsModelDecoder::decodeUpdateGroupRoleResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabGroupsModelDecoder", "decodeUpdateGroupRoleResponseResponse");

	Params::PlayFabGroupsModelDecoder_decodeUpdateGroupRoleResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabInsightsAPI.GetDetails
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FInsightsInsightsEmptyRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FInsightsInsightsGetDetailsResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabInsightsAPI*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabInsightsAPI* UPlayFabInsightsAPI::GetDetails(const struct FInsightsInsightsEmptyRequest& Request, TDelegate<void(const struct FInsightsInsightsGetDetailsResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabInsightsAPI", "GetDetails");

	Params::PlayFabInsightsAPI_GetDetails Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabInsightsAPI.GetLimits
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FInsightsInsightsEmptyRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FInsightsInsightsGetLimitsResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabInsightsAPI*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabInsightsAPI* UPlayFabInsightsAPI::GetLimits(const struct FInsightsInsightsEmptyRequest& Request, TDelegate<void(const struct FInsightsInsightsGetLimitsResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabInsightsAPI", "GetLimits");

	Params::PlayFabInsightsAPI_GetLimits Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabInsightsAPI.GetOperationStatus
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FInsightsInsightsGetOperationStatusRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FInsightsInsightsGetOperationStatusResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabInsightsAPI*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabInsightsAPI* UPlayFabInsightsAPI::GetOperationStatus(const struct FInsightsInsightsGetOperationStatusRequest& Request, TDelegate<void(const struct FInsightsInsightsGetOperationStatusResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabInsightsAPI", "GetOperationStatus");

	Params::PlayFabInsightsAPI_GetOperationStatus Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabInsightsAPI.GetPendingOperations
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FInsightsInsightsGetPendingOperationsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FInsightsInsightsGetPendingOperationsResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabInsightsAPI*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabInsightsAPI* UPlayFabInsightsAPI::GetPendingOperations(const struct FInsightsInsightsGetPendingOperationsRequest& Request, TDelegate<void(const struct FInsightsInsightsGetPendingOperationsResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabInsightsAPI", "GetPendingOperations");

	Params::PlayFabInsightsAPI_GetPendingOperations Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabInsightsAPI.SetPerformance
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FInsightsInsightsSetPerformanceRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FInsightsInsightsOperationResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabInsightsAPI*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabInsightsAPI* UPlayFabInsightsAPI::SetPerformance(const struct FInsightsInsightsSetPerformanceRequest& Request, TDelegate<void(const struct FInsightsInsightsOperationResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabInsightsAPI", "SetPerformance");

	Params::PlayFabInsightsAPI_SetPerformance Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabInsightsAPI.SetStorageRetention
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FInsightsInsightsSetStorageRetentionRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FInsightsInsightsOperationResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabInsightsAPI*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabInsightsAPI* UPlayFabInsightsAPI::SetStorageRetention(const struct FInsightsInsightsSetStorageRetentionRequest& Request, TDelegate<void(const struct FInsightsInsightsOperationResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabInsightsAPI", "SetStorageRetention");

	Params::PlayFabInsightsAPI_SetStorageRetention Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabInsightsAPI.HelperGetDetails
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabInsightsAPI::HelperGetDetails(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabInsightsAPI", "HelperGetDetails");

	Params::PlayFabInsightsAPI_HelperGetDetails Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabInsightsAPI.HelperGetLimits
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabInsightsAPI::HelperGetLimits(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabInsightsAPI", "HelperGetLimits");

	Params::PlayFabInsightsAPI_HelperGetLimits Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabInsightsAPI.HelperGetOperationStatus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabInsightsAPI::HelperGetOperationStatus(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabInsightsAPI", "HelperGetOperationStatus");

	Params::PlayFabInsightsAPI_HelperGetOperationStatus Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabInsightsAPI.HelperGetPendingOperations
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabInsightsAPI::HelperGetPendingOperations(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabInsightsAPI", "HelperGetPendingOperations");

	Params::PlayFabInsightsAPI_HelperGetPendingOperations Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabInsightsAPI.HelperSetPerformance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabInsightsAPI::HelperSetPerformance(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabInsightsAPI", "HelperSetPerformance");

	Params::PlayFabInsightsAPI_HelperSetPerformance Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabInsightsAPI.HelperSetStorageRetention
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabInsightsAPI::HelperSetStorageRetention(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabInsightsAPI", "HelperSetStorageRetention");

	Params::PlayFabInsightsAPI_HelperSetStorageRetention Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabInsightsModelDecoder.decodeInsightsGetDetailsResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FInsightsInsightsGetDetailsResponseReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FInsightsInsightsGetDetailsResponse UPlayFabInsightsModelDecoder::decodeInsightsGetDetailsResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabInsightsModelDecoder", "decodeInsightsGetDetailsResponseResponse");

	Params::PlayFabInsightsModelDecoder_decodeInsightsGetDetailsResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabInsightsModelDecoder.decodeInsightsGetLimitsResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FInsightsInsightsGetLimitsResponseReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FInsightsInsightsGetLimitsResponse UPlayFabInsightsModelDecoder::decodeInsightsGetLimitsResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabInsightsModelDecoder", "decodeInsightsGetLimitsResponseResponse");

	Params::PlayFabInsightsModelDecoder_decodeInsightsGetLimitsResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabInsightsModelDecoder.decodeInsightsGetOperationStatusResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FInsightsInsightsGetOperationStatusResponseReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FInsightsInsightsGetOperationStatusResponse UPlayFabInsightsModelDecoder::decodeInsightsGetOperationStatusResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabInsightsModelDecoder", "decodeInsightsGetOperationStatusResponseResponse");

	Params::PlayFabInsightsModelDecoder_decodeInsightsGetOperationStatusResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabInsightsModelDecoder.decodeInsightsGetPendingOperationsResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FInsightsInsightsGetPendingOperationsResponseReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FInsightsInsightsGetPendingOperationsResponse UPlayFabInsightsModelDecoder::decodeInsightsGetPendingOperationsResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabInsightsModelDecoder", "decodeInsightsGetPendingOperationsResponseResponse");

	Params::PlayFabInsightsModelDecoder_decodeInsightsGetPendingOperationsResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabInsightsModelDecoder.decodeInsightsOperationResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FInsightsInsightsOperationResponseReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FInsightsInsightsOperationResponse UPlayFabInsightsModelDecoder::decodeInsightsOperationResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabInsightsModelDecoder", "decodeInsightsOperationResponseResponse");

	Params::PlayFabInsightsModelDecoder_decodeInsightsOperationResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabJsonObject.ConstructJsonObject
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabJsonObject*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabJsonObject* UPlayFabJsonObject::ConstructJsonObject(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabJsonObject", "ConstructJsonObject");

	Params::PlayFabJsonObject_ConstructJsonObject Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabJsonObject.DecodeJson
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    JsonString                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayFabJsonObject::DecodeJson(const class FString& JsonString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabJsonObject", "DecodeJson");

	Params::PlayFabJsonObject_DecodeJson Parms{};

	Parms.JsonString = std::move(JsonString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabJsonObject.GetArrayField
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    FieldName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UPlayFabJsonValue*>        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UPlayFabJsonValue*> UPlayFabJsonObject::GetArrayField(const class FString& FieldName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabJsonObject", "GetArrayField");

	Params::PlayFabJsonObject_GetArrayField Parms{};

	Parms.FieldName = std::move(FieldName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabJsonObject.GetBoolArrayField
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    FieldName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<bool>                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<bool> UPlayFabJsonObject::GetBoolArrayField(const class FString& FieldName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabJsonObject", "GetBoolArrayField");

	Params::PlayFabJsonObject_GetBoolArrayField Parms{};

	Parms.FieldName = std::move(FieldName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabJsonObject.GetFieldNames
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UPlayFabJsonObject::GetFieldNames()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabJsonObject", "GetFieldNames");

	Params::PlayFabJsonObject_GetFieldNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabJsonObject.GetNumberArrayField
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    FieldName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<float>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<float> UPlayFabJsonObject::GetNumberArrayField(const class FString& FieldName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabJsonObject", "GetNumberArrayField");

	Params::PlayFabJsonObject_GetNumberArrayField Parms{};

	Parms.FieldName = std::move(FieldName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabJsonObject.GetObjectArrayField
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    FieldName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UPlayFabJsonObject*>       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UPlayFabJsonObject*> UPlayFabJsonObject::GetObjectArrayField(const class FString& FieldName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabJsonObject", "GetObjectArrayField");

	Params::PlayFabJsonObject_GetObjectArrayField Parms{};

	Parms.FieldName = std::move(FieldName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabJsonObject.GetStringArrayField
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    FieldName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UPlayFabJsonObject::GetStringArrayField(const class FString& FieldName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabJsonObject", "GetStringArrayField");

	Params::PlayFabJsonObject_GetStringArrayField Parms{};

	Parms.FieldName = std::move(FieldName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabJsonObject.MergeJsonObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               InJsonObject                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Overwrite                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabJsonObject::MergeJsonObject(class UPlayFabJsonObject* InJsonObject, bool Overwrite)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabJsonObject", "MergeJsonObject");

	Params::PlayFabJsonObject_MergeJsonObject Parms{};

	Parms.InJsonObject = InJsonObject;
	Parms.Overwrite = Overwrite;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabJsonObject.RemoveField
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    FieldName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabJsonObject::RemoveField(const class FString& FieldName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabJsonObject", "RemoveField");

	Params::PlayFabJsonObject_RemoveField Parms{};

	Parms.FieldName = std::move(FieldName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabJsonObject.Reset
// (Final, Native, Public, BlueprintCallable)

void UPlayFabJsonObject::Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabJsonObject", "Reset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabJsonObject.SetArrayField
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    FieldName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class UPlayFabJsonValue*>& inArray                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UPlayFabJsonObject::SetArrayField(const class FString& FieldName, const TArray<class UPlayFabJsonValue*>& inArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabJsonObject", "SetArrayField");

	Params::PlayFabJsonObject_SetArrayField Parms{};

	Parms.FieldName = std::move(FieldName);
	Parms.inArray = std::move(inArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabJsonObject.SetBoolArrayField
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    FieldName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<bool>&                     BoolArray                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UPlayFabJsonObject::SetBoolArrayField(const class FString& FieldName, const TArray<bool>& BoolArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabJsonObject", "SetBoolArrayField");

	Params::PlayFabJsonObject_SetBoolArrayField Parms{};

	Parms.FieldName = std::move(FieldName);
	Parms.BoolArray = std::move(BoolArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabJsonObject.SetBoolField
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    FieldName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabJsonObject::SetBoolField(const class FString& FieldName, bool InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabJsonObject", "SetBoolField");

	Params::PlayFabJsonObject_SetBoolField Parms{};

	Parms.FieldName = std::move(FieldName);
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabJsonObject.SetField
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    FieldName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabJsonValue*                JsonValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabJsonObject::SetField(const class FString& FieldName, class UPlayFabJsonValue* JsonValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabJsonObject", "SetField");

	Params::PlayFabJsonObject_SetField Parms{};

	Parms.FieldName = std::move(FieldName);
	Parms.JsonValue = JsonValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabJsonObject.SetFieldNull
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    FieldName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabJsonObject::SetFieldNull(const class FString& FieldName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabJsonObject", "SetFieldNull");

	Params::PlayFabJsonObject_SetFieldNull Parms{};

	Parms.FieldName = std::move(FieldName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabJsonObject.SetNumberArrayField
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    FieldName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<float>&                    NumberArray                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UPlayFabJsonObject::SetNumberArrayField(const class FString& FieldName, const TArray<float>& NumberArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabJsonObject", "SetNumberArrayField");

	Params::PlayFabJsonObject_SetNumberArrayField Parms{};

	Parms.FieldName = std::move(FieldName);
	Parms.NumberArray = std::move(NumberArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabJsonObject.SetNumberField
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    FieldName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Number                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabJsonObject::SetNumberField(const class FString& FieldName, float Number)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabJsonObject", "SetNumberField");

	Params::PlayFabJsonObject_SetNumberField Parms{};

	Parms.FieldName = std::move(FieldName);
	Parms.Number = Number;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabJsonObject.SetObjectArrayField
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    FieldName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class UPlayFabJsonObject*>&ObjectArray                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UPlayFabJsonObject::SetObjectArrayField(const class FString& FieldName, const TArray<class UPlayFabJsonObject*>& ObjectArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabJsonObject", "SetObjectArrayField");

	Params::PlayFabJsonObject_SetObjectArrayField Parms{};

	Parms.FieldName = std::move(FieldName);
	Parms.ObjectArray = std::move(ObjectArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabJsonObject.SetObjectField
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    FieldName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabJsonObject*               JsonObject                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabJsonObject::SetObjectField(const class FString& FieldName, class UPlayFabJsonObject* JsonObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabJsonObject", "SetObjectField");

	Params::PlayFabJsonObject_SetObjectField Parms{};

	Parms.FieldName = std::move(FieldName);
	Parms.JsonObject = JsonObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabJsonObject.SetStringArrayField
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const class FString&                    FieldName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class FString>&            StringArray                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UPlayFabJsonObject::SetStringArrayField(const class FString& FieldName, const TArray<class FString>& StringArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabJsonObject", "SetStringArrayField");

	Params::PlayFabJsonObject_SetStringArrayField Parms{};

	Parms.FieldName = std::move(FieldName);
	Parms.StringArray = std::move(StringArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabJsonObject.SetStringField
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    FieldName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    StringValue                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabJsonObject::SetStringField(const class FString& FieldName, const class FString& StringValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabJsonObject", "SetStringField");

	Params::PlayFabJsonObject_SetStringField Parms{};

	Parms.FieldName = std::move(FieldName);
	Parms.StringValue = std::move(StringValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabJsonObject.EncodeJson
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UPlayFabJsonObject::EncodeJson() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabJsonObject", "EncodeJson");

	Params::PlayFabJsonObject_EncodeJson Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabJsonObject.GetBoolField
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FString&                    FieldName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayFabJsonObject::GetBoolField(const class FString& FieldName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabJsonObject", "GetBoolField");

	Params::PlayFabJsonObject_GetBoolField Parms{};

	Parms.FieldName = std::move(FieldName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabJsonObject.GetField
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FString&                    FieldName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabJsonValue*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabJsonValue* UPlayFabJsonObject::GetField(const class FString& FieldName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabJsonObject", "GetField");

	Params::PlayFabJsonObject_GetField Parms{};

	Parms.FieldName = std::move(FieldName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabJsonObject.GetNumberField
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FString&                    FieldName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPlayFabJsonObject::GetNumberField(const class FString& FieldName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabJsonObject", "GetNumberField");

	Params::PlayFabJsonObject_GetNumberField Parms{};

	Parms.FieldName = std::move(FieldName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabJsonObject.GetObjectField
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FString&                    FieldName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabJsonObject*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabJsonObject* UPlayFabJsonObject::GetObjectField(const class FString& FieldName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabJsonObject", "GetObjectField");

	Params::PlayFabJsonObject_GetObjectField Parms{};

	Parms.FieldName = std::move(FieldName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabJsonObject.GetStringField
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FString&                    FieldName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UPlayFabJsonObject::GetStringField(const class FString& FieldName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabJsonObject", "GetStringField");

	Params::PlayFabJsonObject_GetStringField Parms{};

	Parms.FieldName = std::move(FieldName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabJsonObject.HasField
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FString&                    FieldName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayFabJsonObject::HasField(const class FString& FieldName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabJsonObject", "HasField");

	Params::PlayFabJsonObject_HasField Parms{};

	Parms.FieldName = std::move(FieldName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabJsonValue.ConstructJsonValueArray
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class UPlayFabJsonValue*>& inArray                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class UPlayFabJsonValue*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabJsonValue* UPlayFabJsonValue::ConstructJsonValueArray(class UObject* WorldContextObject, const TArray<class UPlayFabJsonValue*>& inArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabJsonValue", "ConstructJsonValueArray");

	Params::PlayFabJsonValue_ConstructJsonValueArray Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.inArray = std::move(inArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabJsonValue.ConstructJsonValueBool
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabJsonValue*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabJsonValue* UPlayFabJsonValue::ConstructJsonValueBool(class UObject* WorldContextObject, bool InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabJsonValue", "ConstructJsonValueBool");

	Params::PlayFabJsonValue_ConstructJsonValueBool Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabJsonValue.ConstructJsonValueNumber
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Number                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabJsonValue*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabJsonValue* UPlayFabJsonValue::ConstructJsonValueNumber(class UObject* WorldContextObject, float Number)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabJsonValue", "ConstructJsonValueNumber");

	Params::PlayFabJsonValue_ConstructJsonValueNumber Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Number = Number;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabJsonValue.ConstructJsonValueObject
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabJsonObject*               JsonObject                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabJsonValue*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabJsonValue* UPlayFabJsonValue::ConstructJsonValueObject(class UObject* WorldContextObject, class UPlayFabJsonObject* JsonObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabJsonValue", "ConstructJsonValueObject");

	Params::PlayFabJsonValue_ConstructJsonValueObject Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.JsonObject = JsonObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabJsonValue.ConstructJsonValueString
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    StringValue                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabJsonValue*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabJsonValue* UPlayFabJsonValue::ConstructJsonValueString(class UObject* WorldContextObject, const class FString& StringValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabJsonValue", "ConstructJsonValueString");

	Params::PlayFabJsonValue_ConstructJsonValueString Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.StringValue = std::move(StringValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabJsonValue.AsObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabJsonObject* UPlayFabJsonValue::AsObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabJsonValue", "AsObject");

	Params::PlayFabJsonValue_AsObject Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabJsonValue.AsArray
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UPlayFabJsonValue*>        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UPlayFabJsonValue*> UPlayFabJsonValue::AsArray() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabJsonValue", "AsArray");

	Params::PlayFabJsonValue_AsArray Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabJsonValue.AsBool
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayFabJsonValue::AsBool() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabJsonValue", "AsBool");

	Params::PlayFabJsonValue_AsBool Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabJsonValue.AsNumber
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPlayFabJsonValue::AsNumber() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabJsonValue", "AsNumber");

	Params::PlayFabJsonValue_AsNumber Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabJsonValue.AsString
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UPlayFabJsonValue::AsString() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabJsonValue", "AsString");

	Params::PlayFabJsonValue_AsString Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabJsonValue.GetType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPFJson                                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPFJson UPlayFabJsonValue::GetType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabJsonValue", "GetType");

	Params::PlayFabJsonValue_GetType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabJsonValue.GetTypeString
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UPlayFabJsonValue::GetTypeString() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabJsonValue", "GetTypeString");

	Params::PlayFabJsonValue_GetTypeString Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabJsonValue.IsNull
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayFabJsonValue::IsNull() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabJsonValue", "IsNull");

	Params::PlayFabJsonValue_IsNull Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabLocalizationAPI.GetLanguageList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FLocalizationGetLanguageListRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FLocalizationGetLanguageListResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabLocalizationAPI*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabLocalizationAPI* UPlayFabLocalizationAPI::GetLanguageList(const struct FLocalizationGetLanguageListRequest& Request, TDelegate<void(const struct FLocalizationGetLanguageListResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabLocalizationAPI", "GetLanguageList");

	Params::PlayFabLocalizationAPI_GetLanguageList Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabLocalizationAPI.HelperGetLanguageList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabLocalizationAPI::HelperGetLanguageList(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabLocalizationAPI", "HelperGetLanguageList");

	Params::PlayFabLocalizationAPI_HelperGetLanguageList Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabLocalizationModelDecoder.decodeGetLanguageListResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLocalizationGetLanguageListResponseReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FLocalizationGetLanguageListResponse UPlayFabLocalizationModelDecoder::decodeGetLanguageListResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabLocalizationModelDecoder", "decodeGetLanguageListResponseResponse");

	Params::PlayFabLocalizationModelDecoder_decodeGetLanguageListResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMatchmakerAPI.AuthUser
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMatchmakerAuthUserRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMatchmakerAuthUserResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMatchmakerAPI*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMatchmakerAPI* UPlayFabMatchmakerAPI::AuthUser(const struct FMatchmakerAuthUserRequest& Request, TDelegate<void(const struct FMatchmakerAuthUserResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMatchmakerAPI", "AuthUser");

	Params::PlayFabMatchmakerAPI_AuthUser Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMatchmakerAPI.PlayerJoined
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMatchmakerPlayerJoinedRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMatchmakerPlayerJoinedResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMatchmakerAPI*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMatchmakerAPI* UPlayFabMatchmakerAPI::PlayerJoined(const struct FMatchmakerPlayerJoinedRequest& Request, TDelegate<void(const struct FMatchmakerPlayerJoinedResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMatchmakerAPI", "PlayerJoined");

	Params::PlayFabMatchmakerAPI_PlayerJoined Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMatchmakerAPI.PlayerLeft
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMatchmakerPlayerLeftRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMatchmakerPlayerLeftResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMatchmakerAPI*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMatchmakerAPI* UPlayFabMatchmakerAPI::PlayerLeft(const struct FMatchmakerPlayerLeftRequest& Request, TDelegate<void(const struct FMatchmakerPlayerLeftResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMatchmakerAPI", "PlayerLeft");

	Params::PlayFabMatchmakerAPI_PlayerLeft Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMatchmakerAPI.UserInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMatchmakerUserInfoRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMatchmakerUserInfoResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMatchmakerAPI*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMatchmakerAPI* UPlayFabMatchmakerAPI::UserInfo(const struct FMatchmakerUserInfoRequest& Request, TDelegate<void(const struct FMatchmakerUserInfoResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMatchmakerAPI", "UserInfo");

	Params::PlayFabMatchmakerAPI_UserInfo Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMatchmakerAPI.HelperAuthUser
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMatchmakerAPI::HelperAuthUser(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMatchmakerAPI", "HelperAuthUser");

	Params::PlayFabMatchmakerAPI_HelperAuthUser Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMatchmakerAPI.HelperPlayerJoined
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMatchmakerAPI::HelperPlayerJoined(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMatchmakerAPI", "HelperPlayerJoined");

	Params::PlayFabMatchmakerAPI_HelperPlayerJoined Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMatchmakerAPI.HelperPlayerLeft
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMatchmakerAPI::HelperPlayerLeft(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMatchmakerAPI", "HelperPlayerLeft");

	Params::PlayFabMatchmakerAPI_HelperPlayerLeft Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMatchmakerAPI.HelperUserInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMatchmakerAPI::HelperUserInfo(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMatchmakerAPI", "HelperUserInfo");

	Params::PlayFabMatchmakerAPI_HelperUserInfo Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMatchmakerModelDecoder.decodeAuthUserResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMatchmakerAuthUserResponse      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMatchmakerAuthUserResponse UPlayFabMatchmakerModelDecoder::decodeAuthUserResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMatchmakerModelDecoder", "decodeAuthUserResponseResponse");

	Params::PlayFabMatchmakerModelDecoder_decodeAuthUserResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMatchmakerModelDecoder.decodePlayerJoinedResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMatchmakerPlayerJoinedResponse  ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMatchmakerPlayerJoinedResponse UPlayFabMatchmakerModelDecoder::decodePlayerJoinedResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMatchmakerModelDecoder", "decodePlayerJoinedResponseResponse");

	Params::PlayFabMatchmakerModelDecoder_decodePlayerJoinedResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMatchmakerModelDecoder.decodePlayerLeftResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMatchmakerPlayerLeftResponse    ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMatchmakerPlayerLeftResponse UPlayFabMatchmakerModelDecoder::decodePlayerLeftResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMatchmakerModelDecoder", "decodePlayerLeftResponseResponse");

	Params::PlayFabMatchmakerModelDecoder_decodePlayerLeftResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMatchmakerModelDecoder.decodeUserInfoResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMatchmakerUserInfoResponse      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMatchmakerUserInfoResponse UPlayFabMatchmakerModelDecoder::decodeUserInfoResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMatchmakerModelDecoder", "decodeUserInfoResponseResponse");

	Params::PlayFabMatchmakerModelDecoder_decodeUserInfoResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.CancelAllMatchmakingTicketsForPlayer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerCancelAllMatchmakingTicketsForPlayerResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::CancelAllMatchmakingTicketsForPlayer(const struct FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest& Request, TDelegate<void(const struct FMultiplayerCancelAllMatchmakingTicketsForPlayerResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "CancelAllMatchmakingTicketsForPlayer");

	Params::PlayFabMultiplayerAPI_CancelAllMatchmakingTicketsForPlayer Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.CancelAllServerBackfillTicketsForPlayer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerCancelAllServerBackfillTicketsForPlayerResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::CancelAllServerBackfillTicketsForPlayer(const struct FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest& Request, TDelegate<void(const struct FMultiplayerCancelAllServerBackfillTicketsForPlayerResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "CancelAllServerBackfillTicketsForPlayer");

	Params::PlayFabMultiplayerAPI_CancelAllServerBackfillTicketsForPlayer Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.CancelMatchmakingTicket
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerCancelMatchmakingTicketRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerCancelMatchmakingTicketResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::CancelMatchmakingTicket(const struct FMultiplayerCancelMatchmakingTicketRequest& Request, TDelegate<void(const struct FMultiplayerCancelMatchmakingTicketResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "CancelMatchmakingTicket");

	Params::PlayFabMultiplayerAPI_CancelMatchmakingTicket Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.CancelServerBackfillTicket
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerCancelServerBackfillTicketRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerCancelServerBackfillTicketResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::CancelServerBackfillTicket(const struct FMultiplayerCancelServerBackfillTicketRequest& Request, TDelegate<void(const struct FMultiplayerCancelServerBackfillTicketResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "CancelServerBackfillTicket");

	Params::PlayFabMultiplayerAPI_CancelServerBackfillTicket Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.CreateBuildAlias
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerCreateBuildAliasRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerBuildAliasDetailsResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::CreateBuildAlias(const struct FMultiplayerCreateBuildAliasRequest& Request, TDelegate<void(const struct FMultiplayerBuildAliasDetailsResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "CreateBuildAlias");

	Params::PlayFabMultiplayerAPI_CreateBuildAlias Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.CreateBuildWithCustomContainer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerCreateBuildWithCustomContainerRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerCreateBuildWithCustomContainerResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::CreateBuildWithCustomContainer(const struct FMultiplayerCreateBuildWithCustomContainerRequest& Request, TDelegate<void(const struct FMultiplayerCreateBuildWithCustomContainerResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "CreateBuildWithCustomContainer");

	Params::PlayFabMultiplayerAPI_CreateBuildWithCustomContainer Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.CreateBuildWithManagedContainer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerCreateBuildWithManagedContainerRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerCreateBuildWithManagedContainerResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::CreateBuildWithManagedContainer(const struct FMultiplayerCreateBuildWithManagedContainerRequest& Request, TDelegate<void(const struct FMultiplayerCreateBuildWithManagedContainerResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "CreateBuildWithManagedContainer");

	Params::PlayFabMultiplayerAPI_CreateBuildWithManagedContainer Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.CreateBuildWithProcessBasedServer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerCreateBuildWithProcessBasedServerRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerCreateBuildWithProcessBasedServerResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::CreateBuildWithProcessBasedServer(const struct FMultiplayerCreateBuildWithProcessBasedServerRequest& Request, TDelegate<void(const struct FMultiplayerCreateBuildWithProcessBasedServerResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "CreateBuildWithProcessBasedServer");

	Params::PlayFabMultiplayerAPI_CreateBuildWithProcessBasedServer Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.CreateLobby
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerCreateLobbyRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerCreateLobbyResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::CreateLobby(const struct FMultiplayerCreateLobbyRequest& Request, TDelegate<void(const struct FMultiplayerCreateLobbyResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "CreateLobby");

	Params::PlayFabMultiplayerAPI_CreateLobby Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.CreateMatchmakingTicket
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerCreateMatchmakingTicketRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerCreateMatchmakingTicketResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::CreateMatchmakingTicket(const struct FMultiplayerCreateMatchmakingTicketRequest& Request, TDelegate<void(const struct FMultiplayerCreateMatchmakingTicketResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "CreateMatchmakingTicket");

	Params::PlayFabMultiplayerAPI_CreateMatchmakingTicket Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.CreateRemoteUser
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerCreateRemoteUserRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerCreateRemoteUserResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::CreateRemoteUser(const struct FMultiplayerCreateRemoteUserRequest& Request, TDelegate<void(const struct FMultiplayerCreateRemoteUserResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "CreateRemoteUser");

	Params::PlayFabMultiplayerAPI_CreateRemoteUser Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.CreateServerBackfillTicket
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerCreateServerBackfillTicketRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerCreateServerBackfillTicketResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::CreateServerBackfillTicket(const struct FMultiplayerCreateServerBackfillTicketRequest& Request, TDelegate<void(const struct FMultiplayerCreateServerBackfillTicketResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "CreateServerBackfillTicket");

	Params::PlayFabMultiplayerAPI_CreateServerBackfillTicket Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.CreateServerMatchmakingTicket
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerCreateServerMatchmakingTicketRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerCreateMatchmakingTicketResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::CreateServerMatchmakingTicket(const struct FMultiplayerCreateServerMatchmakingTicketRequest& Request, TDelegate<void(const struct FMultiplayerCreateMatchmakingTicketResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "CreateServerMatchmakingTicket");

	Params::PlayFabMultiplayerAPI_CreateServerMatchmakingTicket Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.CreateTitleMultiplayerServersQuotaChange
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::CreateTitleMultiplayerServersQuotaChange(const struct FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest& Request, TDelegate<void(const struct FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "CreateTitleMultiplayerServersQuotaChange");

	Params::PlayFabMultiplayerAPI_CreateTitleMultiplayerServersQuotaChange Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.DeleteAsset
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerDeleteAssetRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::DeleteAsset(const struct FMultiplayerDeleteAssetRequest& Request, TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "DeleteAsset");

	Params::PlayFabMultiplayerAPI_DeleteAsset Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.DeleteBuild
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerDeleteBuildRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::DeleteBuild(const struct FMultiplayerDeleteBuildRequest& Request, TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "DeleteBuild");

	Params::PlayFabMultiplayerAPI_DeleteBuild Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.DeleteBuildAlias
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerDeleteBuildAliasRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::DeleteBuildAlias(const struct FMultiplayerDeleteBuildAliasRequest& Request, TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "DeleteBuildAlias");

	Params::PlayFabMultiplayerAPI_DeleteBuildAlias Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.DeleteBuildRegion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerDeleteBuildRegionRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::DeleteBuildRegion(const struct FMultiplayerDeleteBuildRegionRequest& Request, TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "DeleteBuildRegion");

	Params::PlayFabMultiplayerAPI_DeleteBuildRegion Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.DeleteCertificate
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerDeleteCertificateRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::DeleteCertificate(const struct FMultiplayerDeleteCertificateRequest& Request, TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "DeleteCertificate");

	Params::PlayFabMultiplayerAPI_DeleteCertificate Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.DeleteContainerImageRepository
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerDeleteContainerImageRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::DeleteContainerImageRepository(const struct FMultiplayerDeleteContainerImageRequest& Request, TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "DeleteContainerImageRepository");

	Params::PlayFabMultiplayerAPI_DeleteContainerImageRepository Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.DeleteLobby
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerDeleteLobbyRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerLobbyEmptyResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::DeleteLobby(const struct FMultiplayerDeleteLobbyRequest& Request, TDelegate<void(const struct FMultiplayerLobbyEmptyResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "DeleteLobby");

	Params::PlayFabMultiplayerAPI_DeleteLobby Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.DeleteRemoteUser
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerDeleteRemoteUserRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::DeleteRemoteUser(const struct FMultiplayerDeleteRemoteUserRequest& Request, TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "DeleteRemoteUser");

	Params::PlayFabMultiplayerAPI_DeleteRemoteUser Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.EnableMultiplayerServersForTitle
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerEnableMultiplayerServersForTitleRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerEnableMultiplayerServersForTitleResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::EnableMultiplayerServersForTitle(const struct FMultiplayerEnableMultiplayerServersForTitleRequest& Request, TDelegate<void(const struct FMultiplayerEnableMultiplayerServersForTitleResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "EnableMultiplayerServersForTitle");

	Params::PlayFabMultiplayerAPI_EnableMultiplayerServersForTitle Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.FindFriendLobbies
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerFindFriendLobbiesRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerFindFriendLobbiesResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::FindFriendLobbies(const struct FMultiplayerFindFriendLobbiesRequest& Request, TDelegate<void(const struct FMultiplayerFindFriendLobbiesResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "FindFriendLobbies");

	Params::PlayFabMultiplayerAPI_FindFriendLobbies Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.FindLobbies
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerFindLobbiesRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerFindLobbiesResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::FindLobbies(const struct FMultiplayerFindLobbiesRequest& Request, TDelegate<void(const struct FMultiplayerFindLobbiesResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "FindLobbies");

	Params::PlayFabMultiplayerAPI_FindLobbies Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.GetAssetDownloadUrl
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerGetAssetDownloadUrlRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerGetAssetDownloadUrlResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::GetAssetDownloadUrl(const struct FMultiplayerGetAssetDownloadUrlRequest& Request, TDelegate<void(const struct FMultiplayerGetAssetDownloadUrlResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "GetAssetDownloadUrl");

	Params::PlayFabMultiplayerAPI_GetAssetDownloadUrl Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.GetAssetUploadUrl
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerGetAssetUploadUrlRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerGetAssetUploadUrlResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::GetAssetUploadUrl(const struct FMultiplayerGetAssetUploadUrlRequest& Request, TDelegate<void(const struct FMultiplayerGetAssetUploadUrlResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "GetAssetUploadUrl");

	Params::PlayFabMultiplayerAPI_GetAssetUploadUrl Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.GetBuild
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerGetBuildRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerGetBuildResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::GetBuild(const struct FMultiplayerGetBuildRequest& Request, TDelegate<void(const struct FMultiplayerGetBuildResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "GetBuild");

	Params::PlayFabMultiplayerAPI_GetBuild Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.GetBuildAlias
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerGetBuildAliasRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerBuildAliasDetailsResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::GetBuildAlias(const struct FMultiplayerGetBuildAliasRequest& Request, TDelegate<void(const struct FMultiplayerBuildAliasDetailsResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "GetBuildAlias");

	Params::PlayFabMultiplayerAPI_GetBuildAlias Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.GetContainerRegistryCredentials
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerGetContainerRegistryCredentialsRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerGetContainerRegistryCredentialsResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::GetContainerRegistryCredentials(const struct FMultiplayerGetContainerRegistryCredentialsRequest& Request, TDelegate<void(const struct FMultiplayerGetContainerRegistryCredentialsResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "GetContainerRegistryCredentials");

	Params::PlayFabMultiplayerAPI_GetContainerRegistryCredentials Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.GetLobby
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerGetLobbyRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerGetLobbyResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::GetLobby(const struct FMultiplayerGetLobbyRequest& Request, TDelegate<void(const struct FMultiplayerGetLobbyResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "GetLobby");

	Params::PlayFabMultiplayerAPI_GetLobby Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.GetMatch
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerGetMatchRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerGetMatchResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::GetMatch(const struct FMultiplayerGetMatchRequest& Request, TDelegate<void(const struct FMultiplayerGetMatchResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "GetMatch");

	Params::PlayFabMultiplayerAPI_GetMatch Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.GetMatchmakingTicket
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerGetMatchmakingTicketRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerGetMatchmakingTicketResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::GetMatchmakingTicket(const struct FMultiplayerGetMatchmakingTicketRequest& Request, TDelegate<void(const struct FMultiplayerGetMatchmakingTicketResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "GetMatchmakingTicket");

	Params::PlayFabMultiplayerAPI_GetMatchmakingTicket Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.GetMultiplayerServerDetails
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerGetMultiplayerServerDetailsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerGetMultiplayerServerDetailsResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::GetMultiplayerServerDetails(const struct FMultiplayerGetMultiplayerServerDetailsRequest& Request, TDelegate<void(const struct FMultiplayerGetMultiplayerServerDetailsResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "GetMultiplayerServerDetails");

	Params::PlayFabMultiplayerAPI_GetMultiplayerServerDetails Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.GetMultiplayerServerLogs
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerGetMultiplayerServerLogsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerGetMultiplayerServerLogsResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::GetMultiplayerServerLogs(const struct FMultiplayerGetMultiplayerServerLogsRequest& Request, TDelegate<void(const struct FMultiplayerGetMultiplayerServerLogsResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "GetMultiplayerServerLogs");

	Params::PlayFabMultiplayerAPI_GetMultiplayerServerLogs Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.GetMultiplayerSessionLogsBySessionId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerGetMultiplayerServerLogsResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::GetMultiplayerSessionLogsBySessionId(const struct FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest& Request, TDelegate<void(const struct FMultiplayerGetMultiplayerServerLogsResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "GetMultiplayerSessionLogsBySessionId");

	Params::PlayFabMultiplayerAPI_GetMultiplayerSessionLogsBySessionId Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.GetQueueStatistics
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerGetQueueStatisticsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerGetQueueStatisticsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::GetQueueStatistics(const struct FMultiplayerGetQueueStatisticsRequest& Request, TDelegate<void(const struct FMultiplayerGetQueueStatisticsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "GetQueueStatistics");

	Params::PlayFabMultiplayerAPI_GetQueueStatistics Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.GetRemoteLoginEndpoint
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerGetRemoteLoginEndpointRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerGetRemoteLoginEndpointResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::GetRemoteLoginEndpoint(const struct FMultiplayerGetRemoteLoginEndpointRequest& Request, TDelegate<void(const struct FMultiplayerGetRemoteLoginEndpointResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "GetRemoteLoginEndpoint");

	Params::PlayFabMultiplayerAPI_GetRemoteLoginEndpoint Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.GetServerBackfillTicket
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerGetServerBackfillTicketRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerGetServerBackfillTicketResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::GetServerBackfillTicket(const struct FMultiplayerGetServerBackfillTicketRequest& Request, TDelegate<void(const struct FMultiplayerGetServerBackfillTicketResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "GetServerBackfillTicket");

	Params::PlayFabMultiplayerAPI_GetServerBackfillTicket Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.GetTitleEnabledForMultiplayerServersStatus
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::GetTitleEnabledForMultiplayerServersStatus(const struct FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest& Request, TDelegate<void(const struct FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "GetTitleEnabledForMultiplayerServersStatus");

	Params::PlayFabMultiplayerAPI_GetTitleEnabledForMultiplayerServersStatus Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.GetTitleMultiplayerServersQuotaChange
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::GetTitleMultiplayerServersQuotaChange(const struct FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest& Request, TDelegate<void(const struct FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "GetTitleMultiplayerServersQuotaChange");

	Params::PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotaChange Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.GetTitleMultiplayerServersQuotas
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerGetTitleMultiplayerServersQuotasRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerGetTitleMultiplayerServersQuotasResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::GetTitleMultiplayerServersQuotas(const struct FMultiplayerGetTitleMultiplayerServersQuotasRequest& Request, TDelegate<void(const struct FMultiplayerGetTitleMultiplayerServersQuotasResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "GetTitleMultiplayerServersQuotas");

	Params::PlayFabMultiplayerAPI_GetTitleMultiplayerServersQuotas Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.InviteToLobby
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerInviteToLobbyRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerLobbyEmptyResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::InviteToLobby(const struct FMultiplayerInviteToLobbyRequest& Request, TDelegate<void(const struct FMultiplayerLobbyEmptyResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "InviteToLobby");

	Params::PlayFabMultiplayerAPI_InviteToLobby Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.JoinArrangedLobby
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerJoinArrangedLobbyRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerJoinLobbyResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::JoinArrangedLobby(const struct FMultiplayerJoinArrangedLobbyRequest& Request, TDelegate<void(const struct FMultiplayerJoinLobbyResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "JoinArrangedLobby");

	Params::PlayFabMultiplayerAPI_JoinArrangedLobby Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.JoinLobby
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerJoinLobbyRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerJoinLobbyResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::JoinLobby(const struct FMultiplayerJoinLobbyRequest& Request, TDelegate<void(const struct FMultiplayerJoinLobbyResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "JoinLobby");

	Params::PlayFabMultiplayerAPI_JoinLobby Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.JoinMatchmakingTicket
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerJoinMatchmakingTicketRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerJoinMatchmakingTicketResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::JoinMatchmakingTicket(const struct FMultiplayerJoinMatchmakingTicketRequest& Request, TDelegate<void(const struct FMultiplayerJoinMatchmakingTicketResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "JoinMatchmakingTicket");

	Params::PlayFabMultiplayerAPI_JoinMatchmakingTicket Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.LeaveLobby
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerLeaveLobbyRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerLobbyEmptyResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::LeaveLobby(const struct FMultiplayerLeaveLobbyRequest& Request, TDelegate<void(const struct FMultiplayerLobbyEmptyResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "LeaveLobby");

	Params::PlayFabMultiplayerAPI_LeaveLobby Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.ListArchivedMultiplayerServers
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerListMultiplayerServersRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerListMultiplayerServersResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::ListArchivedMultiplayerServers(const struct FMultiplayerListMultiplayerServersRequest& Request, TDelegate<void(const struct FMultiplayerListMultiplayerServersResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "ListArchivedMultiplayerServers");

	Params::PlayFabMultiplayerAPI_ListArchivedMultiplayerServers Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.ListAssetSummaries
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerListAssetSummariesRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerListAssetSummariesResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::ListAssetSummaries(const struct FMultiplayerListAssetSummariesRequest& Request, TDelegate<void(const struct FMultiplayerListAssetSummariesResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "ListAssetSummaries");

	Params::PlayFabMultiplayerAPI_ListAssetSummaries Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.ListBuildAliases
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerListBuildAliasesRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerListBuildAliasesResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::ListBuildAliases(const struct FMultiplayerListBuildAliasesRequest& Request, TDelegate<void(const struct FMultiplayerListBuildAliasesResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "ListBuildAliases");

	Params::PlayFabMultiplayerAPI_ListBuildAliases Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.ListBuildSummariesV2
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerListBuildSummariesRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerListBuildSummariesResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::ListBuildSummariesV2(const struct FMultiplayerListBuildSummariesRequest& Request, TDelegate<void(const struct FMultiplayerListBuildSummariesResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "ListBuildSummariesV2");

	Params::PlayFabMultiplayerAPI_ListBuildSummariesV2 Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.ListCertificateSummaries
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerListCertificateSummariesRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerListCertificateSummariesResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::ListCertificateSummaries(const struct FMultiplayerListCertificateSummariesRequest& Request, TDelegate<void(const struct FMultiplayerListCertificateSummariesResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "ListCertificateSummaries");

	Params::PlayFabMultiplayerAPI_ListCertificateSummaries Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.ListContainerImages
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerListContainerImagesRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerListContainerImagesResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::ListContainerImages(const struct FMultiplayerListContainerImagesRequest& Request, TDelegate<void(const struct FMultiplayerListContainerImagesResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "ListContainerImages");

	Params::PlayFabMultiplayerAPI_ListContainerImages Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.ListContainerImageTags
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerListContainerImageTagsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerListContainerImageTagsResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::ListContainerImageTags(const struct FMultiplayerListContainerImageTagsRequest& Request, TDelegate<void(const struct FMultiplayerListContainerImageTagsResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "ListContainerImageTags");

	Params::PlayFabMultiplayerAPI_ListContainerImageTags Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.ListMatchmakingTicketsForPlayer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerListMatchmakingTicketsForPlayerRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerListMatchmakingTicketsForPlayerResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::ListMatchmakingTicketsForPlayer(const struct FMultiplayerListMatchmakingTicketsForPlayerRequest& Request, TDelegate<void(const struct FMultiplayerListMatchmakingTicketsForPlayerResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "ListMatchmakingTicketsForPlayer");

	Params::PlayFabMultiplayerAPI_ListMatchmakingTicketsForPlayer Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.ListMultiplayerServers
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerListMultiplayerServersRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerListMultiplayerServersResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::ListMultiplayerServers(const struct FMultiplayerListMultiplayerServersRequest& Request, TDelegate<void(const struct FMultiplayerListMultiplayerServersResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "ListMultiplayerServers");

	Params::PlayFabMultiplayerAPI_ListMultiplayerServers Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.ListPartyQosServers
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerListPartyQosServersRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerListPartyQosServersResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::ListPartyQosServers(const struct FMultiplayerListPartyQosServersRequest& Request, TDelegate<void(const struct FMultiplayerListPartyQosServersResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "ListPartyQosServers");

	Params::PlayFabMultiplayerAPI_ListPartyQosServers Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.ListQosServersForTitle
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerListQosServersForTitleRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerListQosServersForTitleResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::ListQosServersForTitle(const struct FMultiplayerListQosServersForTitleRequest& Request, TDelegate<void(const struct FMultiplayerListQosServersForTitleResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "ListQosServersForTitle");

	Params::PlayFabMultiplayerAPI_ListQosServersForTitle Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.ListServerBackfillTicketsForPlayer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerListServerBackfillTicketsForPlayerRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerListServerBackfillTicketsForPlayerResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::ListServerBackfillTicketsForPlayer(const struct FMultiplayerListServerBackfillTicketsForPlayerRequest& Request, TDelegate<void(const struct FMultiplayerListServerBackfillTicketsForPlayerResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "ListServerBackfillTicketsForPlayer");

	Params::PlayFabMultiplayerAPI_ListServerBackfillTicketsForPlayer Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.ListTitleMultiplayerServersQuotaChanges
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerListTitleMultiplayerServersQuotaChangesRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerListTitleMultiplayerServersQuotaChangesResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::ListTitleMultiplayerServersQuotaChanges(const struct FMultiplayerListTitleMultiplayerServersQuotaChangesRequest& Request, TDelegate<void(const struct FMultiplayerListTitleMultiplayerServersQuotaChangesResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "ListTitleMultiplayerServersQuotaChanges");

	Params::PlayFabMultiplayerAPI_ListTitleMultiplayerServersQuotaChanges Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.ListVirtualMachineSummaries
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerListVirtualMachineSummariesRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerListVirtualMachineSummariesResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::ListVirtualMachineSummaries(const struct FMultiplayerListVirtualMachineSummariesRequest& Request, TDelegate<void(const struct FMultiplayerListVirtualMachineSummariesResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "ListVirtualMachineSummaries");

	Params::PlayFabMultiplayerAPI_ListVirtualMachineSummaries Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.RemoveMember
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerRemoveMemberFromLobbyRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerLobbyEmptyResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::RemoveMember(const struct FMultiplayerRemoveMemberFromLobbyRequest& Request, TDelegate<void(const struct FMultiplayerLobbyEmptyResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "RemoveMember");

	Params::PlayFabMultiplayerAPI_RemoveMember Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.RequestMultiplayerServer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerRequestMultiplayerServerRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerRequestMultiplayerServerResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::RequestMultiplayerServer(const struct FMultiplayerRequestMultiplayerServerRequest& Request, TDelegate<void(const struct FMultiplayerRequestMultiplayerServerResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "RequestMultiplayerServer");

	Params::PlayFabMultiplayerAPI_RequestMultiplayerServer Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.RolloverContainerRegistryCredentials
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerRolloverContainerRegistryCredentialsRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerRolloverContainerRegistryCredentialsResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::RolloverContainerRegistryCredentials(const struct FMultiplayerRolloverContainerRegistryCredentialsRequest& Request, TDelegate<void(const struct FMultiplayerRolloverContainerRegistryCredentialsResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "RolloverContainerRegistryCredentials");

	Params::PlayFabMultiplayerAPI_RolloverContainerRegistryCredentials Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.ShutdownMultiplayerServer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerShutdownMultiplayerServerRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::ShutdownMultiplayerServer(const struct FMultiplayerShutdownMultiplayerServerRequest& Request, TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "ShutdownMultiplayerServer");

	Params::PlayFabMultiplayerAPI_ShutdownMultiplayerServer Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.SubscribeToLobbyResource
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerSubscribeToLobbyResourceRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerSubscribeToLobbyResourceResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::SubscribeToLobbyResource(const struct FMultiplayerSubscribeToLobbyResourceRequest& Request, TDelegate<void(const struct FMultiplayerSubscribeToLobbyResourceResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "SubscribeToLobbyResource");

	Params::PlayFabMultiplayerAPI_SubscribeToLobbyResource Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.UnsubscribeFromLobbyResource
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerUnsubscribeFromLobbyResourceRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerLobbyEmptyResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::UnsubscribeFromLobbyResource(const struct FMultiplayerUnsubscribeFromLobbyResourceRequest& Request, TDelegate<void(const struct FMultiplayerLobbyEmptyResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "UnsubscribeFromLobbyResource");

	Params::PlayFabMultiplayerAPI_UnsubscribeFromLobbyResource Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.UntagContainerImage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerUntagContainerImageRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::UntagContainerImage(const struct FMultiplayerUntagContainerImageRequest& Request, TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "UntagContainerImage");

	Params::PlayFabMultiplayerAPI_UntagContainerImage Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.UpdateBuildAlias
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerUpdateBuildAliasRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerBuildAliasDetailsResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::UpdateBuildAlias(const struct FMultiplayerUpdateBuildAliasRequest& Request, TDelegate<void(const struct FMultiplayerBuildAliasDetailsResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "UpdateBuildAlias");

	Params::PlayFabMultiplayerAPI_UpdateBuildAlias Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.UpdateBuildName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerUpdateBuildNameRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::UpdateBuildName(const struct FMultiplayerUpdateBuildNameRequest& Request, TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "UpdateBuildName");

	Params::PlayFabMultiplayerAPI_UpdateBuildName Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.UpdateBuildRegion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerUpdateBuildRegionRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::UpdateBuildRegion(const struct FMultiplayerUpdateBuildRegionRequest& Request, TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "UpdateBuildRegion");

	Params::PlayFabMultiplayerAPI_UpdateBuildRegion Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.UpdateBuildRegions
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerUpdateBuildRegionsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::UpdateBuildRegions(const struct FMultiplayerUpdateBuildRegionsRequest& Request, TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "UpdateBuildRegions");

	Params::PlayFabMultiplayerAPI_UpdateBuildRegions Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.UpdateLobby
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerUpdateLobbyRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerLobbyEmptyResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::UpdateLobby(const struct FMultiplayerUpdateLobbyRequest& Request, TDelegate<void(const struct FMultiplayerLobbyEmptyResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "UpdateLobby");

	Params::PlayFabMultiplayerAPI_UpdateLobby Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.UploadCertificate
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FMultiplayerUploadCertificateRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabMultiplayerAPI*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabMultiplayerAPI* UPlayFabMultiplayerAPI::UploadCertificate(const struct FMultiplayerUploadCertificateRequest& Request, TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerAPI", "UploadCertificate");

	Params::PlayFabMultiplayerAPI_UploadCertificate Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperCancelAllMatchmakingTicketsForPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperCancelAllMatchmakingTicketsForPlayer(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperCancelAllMatchmakingTicketsForPlayer");

	Params::PlayFabMultiplayerAPI_HelperCancelAllMatchmakingTicketsForPlayer Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperCancelAllServerBackfillTicketsForPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperCancelAllServerBackfillTicketsForPlayer(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperCancelAllServerBackfillTicketsForPlayer");

	Params::PlayFabMultiplayerAPI_HelperCancelAllServerBackfillTicketsForPlayer Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperCancelMatchmakingTicket
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperCancelMatchmakingTicket(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperCancelMatchmakingTicket");

	Params::PlayFabMultiplayerAPI_HelperCancelMatchmakingTicket Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperCancelServerBackfillTicket
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperCancelServerBackfillTicket(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperCancelServerBackfillTicket");

	Params::PlayFabMultiplayerAPI_HelperCancelServerBackfillTicket Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperCreateBuildAlias
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperCreateBuildAlias(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperCreateBuildAlias");

	Params::PlayFabMultiplayerAPI_HelperCreateBuildAlias Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperCreateBuildWithCustomContainer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperCreateBuildWithCustomContainer(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperCreateBuildWithCustomContainer");

	Params::PlayFabMultiplayerAPI_HelperCreateBuildWithCustomContainer Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperCreateBuildWithManagedContainer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperCreateBuildWithManagedContainer(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperCreateBuildWithManagedContainer");

	Params::PlayFabMultiplayerAPI_HelperCreateBuildWithManagedContainer Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperCreateBuildWithProcessBasedServer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperCreateBuildWithProcessBasedServer(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperCreateBuildWithProcessBasedServer");

	Params::PlayFabMultiplayerAPI_HelperCreateBuildWithProcessBasedServer Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperCreateLobby
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperCreateLobby(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperCreateLobby");

	Params::PlayFabMultiplayerAPI_HelperCreateLobby Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperCreateMatchmakingTicket
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperCreateMatchmakingTicket(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperCreateMatchmakingTicket");

	Params::PlayFabMultiplayerAPI_HelperCreateMatchmakingTicket Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperCreateRemoteUser
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperCreateRemoteUser(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperCreateRemoteUser");

	Params::PlayFabMultiplayerAPI_HelperCreateRemoteUser Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperCreateServerBackfillTicket
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperCreateServerBackfillTicket(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperCreateServerBackfillTicket");

	Params::PlayFabMultiplayerAPI_HelperCreateServerBackfillTicket Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperCreateServerMatchmakingTicket
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperCreateServerMatchmakingTicket(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperCreateServerMatchmakingTicket");

	Params::PlayFabMultiplayerAPI_HelperCreateServerMatchmakingTicket Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperCreateTitleMultiplayerServersQuotaChange
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperCreateTitleMultiplayerServersQuotaChange(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperCreateTitleMultiplayerServersQuotaChange");

	Params::PlayFabMultiplayerAPI_HelperCreateTitleMultiplayerServersQuotaChange Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperDeleteAsset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperDeleteAsset(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperDeleteAsset");

	Params::PlayFabMultiplayerAPI_HelperDeleteAsset Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperDeleteBuild
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperDeleteBuild(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperDeleteBuild");

	Params::PlayFabMultiplayerAPI_HelperDeleteBuild Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperDeleteBuildAlias
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperDeleteBuildAlias(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperDeleteBuildAlias");

	Params::PlayFabMultiplayerAPI_HelperDeleteBuildAlias Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperDeleteBuildRegion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperDeleteBuildRegion(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperDeleteBuildRegion");

	Params::PlayFabMultiplayerAPI_HelperDeleteBuildRegion Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperDeleteCertificate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperDeleteCertificate(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperDeleteCertificate");

	Params::PlayFabMultiplayerAPI_HelperDeleteCertificate Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperDeleteContainerImageRepository
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperDeleteContainerImageRepository(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperDeleteContainerImageRepository");

	Params::PlayFabMultiplayerAPI_HelperDeleteContainerImageRepository Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperDeleteLobby
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperDeleteLobby(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperDeleteLobby");

	Params::PlayFabMultiplayerAPI_HelperDeleteLobby Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperDeleteRemoteUser
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperDeleteRemoteUser(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperDeleteRemoteUser");

	Params::PlayFabMultiplayerAPI_HelperDeleteRemoteUser Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperEnableMultiplayerServersForTitle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperEnableMultiplayerServersForTitle(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperEnableMultiplayerServersForTitle");

	Params::PlayFabMultiplayerAPI_HelperEnableMultiplayerServersForTitle Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperFindFriendLobbies
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperFindFriendLobbies(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperFindFriendLobbies");

	Params::PlayFabMultiplayerAPI_HelperFindFriendLobbies Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperFindLobbies
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperFindLobbies(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperFindLobbies");

	Params::PlayFabMultiplayerAPI_HelperFindLobbies Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperGetAssetDownloadUrl
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperGetAssetDownloadUrl(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperGetAssetDownloadUrl");

	Params::PlayFabMultiplayerAPI_HelperGetAssetDownloadUrl Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperGetAssetUploadUrl
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperGetAssetUploadUrl(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperGetAssetUploadUrl");

	Params::PlayFabMultiplayerAPI_HelperGetAssetUploadUrl Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperGetBuild
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperGetBuild(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperGetBuild");

	Params::PlayFabMultiplayerAPI_HelperGetBuild Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperGetBuildAlias
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperGetBuildAlias(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperGetBuildAlias");

	Params::PlayFabMultiplayerAPI_HelperGetBuildAlias Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperGetContainerRegistryCredentials
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperGetContainerRegistryCredentials(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperGetContainerRegistryCredentials");

	Params::PlayFabMultiplayerAPI_HelperGetContainerRegistryCredentials Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperGetLobby
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperGetLobby(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperGetLobby");

	Params::PlayFabMultiplayerAPI_HelperGetLobby Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperGetMatch
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperGetMatch(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperGetMatch");

	Params::PlayFabMultiplayerAPI_HelperGetMatch Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperGetMatchmakingTicket
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperGetMatchmakingTicket(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperGetMatchmakingTicket");

	Params::PlayFabMultiplayerAPI_HelperGetMatchmakingTicket Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperGetMultiplayerServerDetails
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperGetMultiplayerServerDetails(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperGetMultiplayerServerDetails");

	Params::PlayFabMultiplayerAPI_HelperGetMultiplayerServerDetails Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperGetMultiplayerServerLogs
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperGetMultiplayerServerLogs(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperGetMultiplayerServerLogs");

	Params::PlayFabMultiplayerAPI_HelperGetMultiplayerServerLogs Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperGetMultiplayerSessionLogsBySessionId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperGetMultiplayerSessionLogsBySessionId(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperGetMultiplayerSessionLogsBySessionId");

	Params::PlayFabMultiplayerAPI_HelperGetMultiplayerSessionLogsBySessionId Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperGetQueueStatistics
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperGetQueueStatistics(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperGetQueueStatistics");

	Params::PlayFabMultiplayerAPI_HelperGetQueueStatistics Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperGetRemoteLoginEndpoint
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperGetRemoteLoginEndpoint(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperGetRemoteLoginEndpoint");

	Params::PlayFabMultiplayerAPI_HelperGetRemoteLoginEndpoint Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperGetServerBackfillTicket
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperGetServerBackfillTicket(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperGetServerBackfillTicket");

	Params::PlayFabMultiplayerAPI_HelperGetServerBackfillTicket Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperGetTitleEnabledForMultiplayerServersStatus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperGetTitleEnabledForMultiplayerServersStatus(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperGetTitleEnabledForMultiplayerServersStatus");

	Params::PlayFabMultiplayerAPI_HelperGetTitleEnabledForMultiplayerServersStatus Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperGetTitleMultiplayerServersQuotaChange
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperGetTitleMultiplayerServersQuotaChange(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperGetTitleMultiplayerServersQuotaChange");

	Params::PlayFabMultiplayerAPI_HelperGetTitleMultiplayerServersQuotaChange Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperGetTitleMultiplayerServersQuotas
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperGetTitleMultiplayerServersQuotas(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperGetTitleMultiplayerServersQuotas");

	Params::PlayFabMultiplayerAPI_HelperGetTitleMultiplayerServersQuotas Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperInviteToLobby
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperInviteToLobby(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperInviteToLobby");

	Params::PlayFabMultiplayerAPI_HelperInviteToLobby Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperJoinArrangedLobby
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperJoinArrangedLobby(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperJoinArrangedLobby");

	Params::PlayFabMultiplayerAPI_HelperJoinArrangedLobby Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperJoinLobby
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperJoinLobby(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperJoinLobby");

	Params::PlayFabMultiplayerAPI_HelperJoinLobby Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperJoinMatchmakingTicket
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperJoinMatchmakingTicket(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperJoinMatchmakingTicket");

	Params::PlayFabMultiplayerAPI_HelperJoinMatchmakingTicket Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperLeaveLobby
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperLeaveLobby(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperLeaveLobby");

	Params::PlayFabMultiplayerAPI_HelperLeaveLobby Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperListArchivedMultiplayerServers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperListArchivedMultiplayerServers(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperListArchivedMultiplayerServers");

	Params::PlayFabMultiplayerAPI_HelperListArchivedMultiplayerServers Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperListAssetSummaries
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperListAssetSummaries(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperListAssetSummaries");

	Params::PlayFabMultiplayerAPI_HelperListAssetSummaries Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperListBuildAliases
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperListBuildAliases(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperListBuildAliases");

	Params::PlayFabMultiplayerAPI_HelperListBuildAliases Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperListBuildSummariesV2
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperListBuildSummariesV2(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperListBuildSummariesV2");

	Params::PlayFabMultiplayerAPI_HelperListBuildSummariesV2 Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperListCertificateSummaries
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperListCertificateSummaries(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperListCertificateSummaries");

	Params::PlayFabMultiplayerAPI_HelperListCertificateSummaries Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperListContainerImages
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperListContainerImages(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperListContainerImages");

	Params::PlayFabMultiplayerAPI_HelperListContainerImages Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperListContainerImageTags
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperListContainerImageTags(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperListContainerImageTags");

	Params::PlayFabMultiplayerAPI_HelperListContainerImageTags Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperListMatchmakingTicketsForPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperListMatchmakingTicketsForPlayer(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperListMatchmakingTicketsForPlayer");

	Params::PlayFabMultiplayerAPI_HelperListMatchmakingTicketsForPlayer Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperListMultiplayerServers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperListMultiplayerServers(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperListMultiplayerServers");

	Params::PlayFabMultiplayerAPI_HelperListMultiplayerServers Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperListPartyQosServers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperListPartyQosServers(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperListPartyQosServers");

	Params::PlayFabMultiplayerAPI_HelperListPartyQosServers Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperListQosServersForTitle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperListQosServersForTitle(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperListQosServersForTitle");

	Params::PlayFabMultiplayerAPI_HelperListQosServersForTitle Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperListServerBackfillTicketsForPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperListServerBackfillTicketsForPlayer(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperListServerBackfillTicketsForPlayer");

	Params::PlayFabMultiplayerAPI_HelperListServerBackfillTicketsForPlayer Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperListTitleMultiplayerServersQuotaChanges
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperListTitleMultiplayerServersQuotaChanges(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperListTitleMultiplayerServersQuotaChanges");

	Params::PlayFabMultiplayerAPI_HelperListTitleMultiplayerServersQuotaChanges Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperListVirtualMachineSummaries
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperListVirtualMachineSummaries(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperListVirtualMachineSummaries");

	Params::PlayFabMultiplayerAPI_HelperListVirtualMachineSummaries Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperRemoveMember
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperRemoveMember(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperRemoveMember");

	Params::PlayFabMultiplayerAPI_HelperRemoveMember Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperRequestMultiplayerServer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperRequestMultiplayerServer(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperRequestMultiplayerServer");

	Params::PlayFabMultiplayerAPI_HelperRequestMultiplayerServer Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperRolloverContainerRegistryCredentials
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperRolloverContainerRegistryCredentials(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperRolloverContainerRegistryCredentials");

	Params::PlayFabMultiplayerAPI_HelperRolloverContainerRegistryCredentials Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperShutdownMultiplayerServer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperShutdownMultiplayerServer(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperShutdownMultiplayerServer");

	Params::PlayFabMultiplayerAPI_HelperShutdownMultiplayerServer Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperSubscribeToLobbyResource
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperSubscribeToLobbyResource(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperSubscribeToLobbyResource");

	Params::PlayFabMultiplayerAPI_HelperSubscribeToLobbyResource Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperUnsubscribeFromLobbyResource
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperUnsubscribeFromLobbyResource(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperUnsubscribeFromLobbyResource");

	Params::PlayFabMultiplayerAPI_HelperUnsubscribeFromLobbyResource Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperUntagContainerImage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperUntagContainerImage(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperUntagContainerImage");

	Params::PlayFabMultiplayerAPI_HelperUntagContainerImage Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperUpdateBuildAlias
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperUpdateBuildAlias(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperUpdateBuildAlias");

	Params::PlayFabMultiplayerAPI_HelperUpdateBuildAlias Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperUpdateBuildName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperUpdateBuildName(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperUpdateBuildName");

	Params::PlayFabMultiplayerAPI_HelperUpdateBuildName Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperUpdateBuildRegion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperUpdateBuildRegion(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperUpdateBuildRegion");

	Params::PlayFabMultiplayerAPI_HelperUpdateBuildRegion Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperUpdateBuildRegions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperUpdateBuildRegions(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperUpdateBuildRegions");

	Params::PlayFabMultiplayerAPI_HelperUpdateBuildRegions Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperUpdateLobby
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperUpdateLobby(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperUpdateLobby");

	Params::PlayFabMultiplayerAPI_HelperUpdateLobby Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerAPI.HelperUploadCertificate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabMultiplayerAPI::HelperUploadCertificate(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabMultiplayerAPI", "HelperUploadCertificate");

	Params::PlayFabMultiplayerAPI_HelperUploadCertificate Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeBuildAliasDetailsResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerBuildAliasDetailsResponseReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMultiplayerBuildAliasDetailsResponse UPlayFabMultiplayerModelDecoder::decodeBuildAliasDetailsResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeBuildAliasDetailsResponseResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeBuildAliasDetailsResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeCancelAllMatchmakingTicketsForPlayerResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerCancelAllMatchmakingTicketsForPlayerResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMultiplayerCancelAllMatchmakingTicketsForPlayerResult UPlayFabMultiplayerModelDecoder::decodeCancelAllMatchmakingTicketsForPlayerResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeCancelAllMatchmakingTicketsForPlayerResultResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeCancelAllMatchmakingTicketsForPlayerResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeCancelAllServerBackfillTicketsForPlayerResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerCancelAllServerBackfillTicketsForPlayerResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMultiplayerCancelAllServerBackfillTicketsForPlayerResult UPlayFabMultiplayerModelDecoder::decodeCancelAllServerBackfillTicketsForPlayerResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeCancelAllServerBackfillTicketsForPlayerResultResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeCancelAllServerBackfillTicketsForPlayerResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeCancelMatchmakingTicketResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerCancelMatchmakingTicketResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMultiplayerCancelMatchmakingTicketResult UPlayFabMultiplayerModelDecoder::decodeCancelMatchmakingTicketResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeCancelMatchmakingTicketResultResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeCancelMatchmakingTicketResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeCancelServerBackfillTicketResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerCancelServerBackfillTicketResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMultiplayerCancelServerBackfillTicketResult UPlayFabMultiplayerModelDecoder::decodeCancelServerBackfillTicketResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeCancelServerBackfillTicketResultResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeCancelServerBackfillTicketResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeCreateBuildWithCustomContainerResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerCreateBuildWithCustomContainerResponseReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMultiplayerCreateBuildWithCustomContainerResponse UPlayFabMultiplayerModelDecoder::decodeCreateBuildWithCustomContainerResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeCreateBuildWithCustomContainerResponseResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeCreateBuildWithCustomContainerResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeCreateBuildWithManagedContainerResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerCreateBuildWithManagedContainerResponseReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMultiplayerCreateBuildWithManagedContainerResponse UPlayFabMultiplayerModelDecoder::decodeCreateBuildWithManagedContainerResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeCreateBuildWithManagedContainerResponseResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeCreateBuildWithManagedContainerResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeCreateBuildWithProcessBasedServerResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerCreateBuildWithProcessBasedServerResponseReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMultiplayerCreateBuildWithProcessBasedServerResponse UPlayFabMultiplayerModelDecoder::decodeCreateBuildWithProcessBasedServerResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeCreateBuildWithProcessBasedServerResponseResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeCreateBuildWithProcessBasedServerResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeCreateLobbyResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerCreateLobbyResult    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMultiplayerCreateLobbyResult UPlayFabMultiplayerModelDecoder::decodeCreateLobbyResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeCreateLobbyResultResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeCreateLobbyResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeCreateMatchmakingTicketResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerCreateMatchmakingTicketResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMultiplayerCreateMatchmakingTicketResult UPlayFabMultiplayerModelDecoder::decodeCreateMatchmakingTicketResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeCreateMatchmakingTicketResultResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeCreateMatchmakingTicketResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeCreateRemoteUserResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerCreateRemoteUserResponseReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMultiplayerCreateRemoteUserResponse UPlayFabMultiplayerModelDecoder::decodeCreateRemoteUserResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeCreateRemoteUserResponseResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeCreateRemoteUserResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeCreateServerBackfillTicketResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerCreateServerBackfillTicketResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMultiplayerCreateServerBackfillTicketResult UPlayFabMultiplayerModelDecoder::decodeCreateServerBackfillTicketResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeCreateServerBackfillTicketResultResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeCreateServerBackfillTicketResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeCreateTitleMultiplayerServersQuotaChangeResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponseReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse UPlayFabMultiplayerModelDecoder::decodeCreateTitleMultiplayerServersQuotaChangeResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeCreateTitleMultiplayerServersQuotaChangeResponseResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeCreateTitleMultiplayerServersQuotaChangeResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeEmptyResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerEmptyResponse        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMultiplayerEmptyResponse UPlayFabMultiplayerModelDecoder::decodeEmptyResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeEmptyResponseResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeEmptyResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeEnableMultiplayerServersForTitleResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerEnableMultiplayerServersForTitleResponseReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMultiplayerEnableMultiplayerServersForTitleResponse UPlayFabMultiplayerModelDecoder::decodeEnableMultiplayerServersForTitleResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeEnableMultiplayerServersForTitleResponseResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeEnableMultiplayerServersForTitleResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeFindFriendLobbiesResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerFindFriendLobbiesResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMultiplayerFindFriendLobbiesResult UPlayFabMultiplayerModelDecoder::decodeFindFriendLobbiesResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeFindFriendLobbiesResultResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeFindFriendLobbiesResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeFindLobbiesResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerFindLobbiesResult    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMultiplayerFindLobbiesResult UPlayFabMultiplayerModelDecoder::decodeFindLobbiesResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeFindLobbiesResultResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeFindLobbiesResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeGetAssetDownloadUrlResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerGetAssetDownloadUrlResponseReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMultiplayerGetAssetDownloadUrlResponse UPlayFabMultiplayerModelDecoder::decodeGetAssetDownloadUrlResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeGetAssetDownloadUrlResponseResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeGetAssetDownloadUrlResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeGetAssetUploadUrlResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerGetAssetUploadUrlResponseReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMultiplayerGetAssetUploadUrlResponse UPlayFabMultiplayerModelDecoder::decodeGetAssetUploadUrlResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeGetAssetUploadUrlResponseResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeGetAssetUploadUrlResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeGetBuildResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerGetBuildResponse     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMultiplayerGetBuildResponse UPlayFabMultiplayerModelDecoder::decodeGetBuildResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeGetBuildResponseResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeGetBuildResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeGetContainerRegistryCredentialsResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerGetContainerRegistryCredentialsResponseReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMultiplayerGetContainerRegistryCredentialsResponse UPlayFabMultiplayerModelDecoder::decodeGetContainerRegistryCredentialsResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeGetContainerRegistryCredentialsResponseResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeGetContainerRegistryCredentialsResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeGetLobbyResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerGetLobbyResult       ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMultiplayerGetLobbyResult UPlayFabMultiplayerModelDecoder::decodeGetLobbyResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeGetLobbyResultResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeGetLobbyResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeGetMatchmakingTicketResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerGetMatchmakingTicketResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMultiplayerGetMatchmakingTicketResult UPlayFabMultiplayerModelDecoder::decodeGetMatchmakingTicketResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeGetMatchmakingTicketResultResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeGetMatchmakingTicketResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeGetMatchResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerGetMatchResult       ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMultiplayerGetMatchResult UPlayFabMultiplayerModelDecoder::decodeGetMatchResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeGetMatchResultResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeGetMatchResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeGetMultiplayerServerDetailsResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerGetMultiplayerServerDetailsResponseReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMultiplayerGetMultiplayerServerDetailsResponse UPlayFabMultiplayerModelDecoder::decodeGetMultiplayerServerDetailsResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeGetMultiplayerServerDetailsResponseResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeGetMultiplayerServerDetailsResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeGetMultiplayerServerLogsResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerGetMultiplayerServerLogsResponseReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMultiplayerGetMultiplayerServerLogsResponse UPlayFabMultiplayerModelDecoder::decodeGetMultiplayerServerLogsResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeGetMultiplayerServerLogsResponseResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeGetMultiplayerServerLogsResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeGetQueueStatisticsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerGetQueueStatisticsResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMultiplayerGetQueueStatisticsResult UPlayFabMultiplayerModelDecoder::decodeGetQueueStatisticsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeGetQueueStatisticsResultResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeGetQueueStatisticsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeGetRemoteLoginEndpointResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerGetRemoteLoginEndpointResponseReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMultiplayerGetRemoteLoginEndpointResponse UPlayFabMultiplayerModelDecoder::decodeGetRemoteLoginEndpointResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeGetRemoteLoginEndpointResponseResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeGetRemoteLoginEndpointResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeGetServerBackfillTicketResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerGetServerBackfillTicketResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMultiplayerGetServerBackfillTicketResult UPlayFabMultiplayerModelDecoder::decodeGetServerBackfillTicketResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeGetServerBackfillTicketResultResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeGetServerBackfillTicketResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeGetTitleEnabledForMultiplayerServersStatusResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponseReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse UPlayFabMultiplayerModelDecoder::decodeGetTitleEnabledForMultiplayerServersStatusResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeGetTitleEnabledForMultiplayerServersStatusResponseResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeGetTitleEnabledForMultiplayerServersStatusResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeGetTitleMultiplayerServersQuotaChangeResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerGetTitleMultiplayerServersQuotaChangeResponseReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse UPlayFabMultiplayerModelDecoder::decodeGetTitleMultiplayerServersQuotaChangeResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeGetTitleMultiplayerServersQuotaChangeResponseResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeGetTitleMultiplayerServersQuotaChangeResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeGetTitleMultiplayerServersQuotasResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerGetTitleMultiplayerServersQuotasResponseReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMultiplayerGetTitleMultiplayerServersQuotasResponse UPlayFabMultiplayerModelDecoder::decodeGetTitleMultiplayerServersQuotasResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeGetTitleMultiplayerServersQuotasResponseResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeGetTitleMultiplayerServersQuotasResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeJoinLobbyResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerJoinLobbyResult      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMultiplayerJoinLobbyResult UPlayFabMultiplayerModelDecoder::decodeJoinLobbyResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeJoinLobbyResultResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeJoinLobbyResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeJoinMatchmakingTicketResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerJoinMatchmakingTicketResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMultiplayerJoinMatchmakingTicketResult UPlayFabMultiplayerModelDecoder::decodeJoinMatchmakingTicketResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeJoinMatchmakingTicketResultResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeJoinMatchmakingTicketResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeListAssetSummariesResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerListAssetSummariesResponseReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMultiplayerListAssetSummariesResponse UPlayFabMultiplayerModelDecoder::decodeListAssetSummariesResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeListAssetSummariesResponseResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeListAssetSummariesResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeListBuildAliasesResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerListBuildAliasesResponseReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMultiplayerListBuildAliasesResponse UPlayFabMultiplayerModelDecoder::decodeListBuildAliasesResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeListBuildAliasesResponseResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeListBuildAliasesResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeListBuildSummariesResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerListBuildSummariesResponseReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMultiplayerListBuildSummariesResponse UPlayFabMultiplayerModelDecoder::decodeListBuildSummariesResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeListBuildSummariesResponseResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeListBuildSummariesResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeListCertificateSummariesResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerListCertificateSummariesResponseReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMultiplayerListCertificateSummariesResponse UPlayFabMultiplayerModelDecoder::decodeListCertificateSummariesResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeListCertificateSummariesResponseResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeListCertificateSummariesResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeListContainerImagesResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerListContainerImagesResponseReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMultiplayerListContainerImagesResponse UPlayFabMultiplayerModelDecoder::decodeListContainerImagesResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeListContainerImagesResponseResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeListContainerImagesResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeListContainerImageTagsResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerListContainerImageTagsResponseReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMultiplayerListContainerImageTagsResponse UPlayFabMultiplayerModelDecoder::decodeListContainerImageTagsResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeListContainerImageTagsResponseResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeListContainerImageTagsResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeListMatchmakingTicketsForPlayerResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerListMatchmakingTicketsForPlayerResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMultiplayerListMatchmakingTicketsForPlayerResult UPlayFabMultiplayerModelDecoder::decodeListMatchmakingTicketsForPlayerResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeListMatchmakingTicketsForPlayerResultResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeListMatchmakingTicketsForPlayerResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeListMultiplayerServersResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerListMultiplayerServersResponseReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMultiplayerListMultiplayerServersResponse UPlayFabMultiplayerModelDecoder::decodeListMultiplayerServersResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeListMultiplayerServersResponseResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeListMultiplayerServersResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeListPartyQosServersResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerListPartyQosServersResponseReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMultiplayerListPartyQosServersResponse UPlayFabMultiplayerModelDecoder::decodeListPartyQosServersResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeListPartyQosServersResponseResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeListPartyQosServersResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeListQosServersForTitleResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerListQosServersForTitleResponseReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMultiplayerListQosServersForTitleResponse UPlayFabMultiplayerModelDecoder::decodeListQosServersForTitleResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeListQosServersForTitleResponseResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeListQosServersForTitleResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeListServerBackfillTicketsForPlayerResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerListServerBackfillTicketsForPlayerResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMultiplayerListServerBackfillTicketsForPlayerResult UPlayFabMultiplayerModelDecoder::decodeListServerBackfillTicketsForPlayerResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeListServerBackfillTicketsForPlayerResultResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeListServerBackfillTicketsForPlayerResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeListTitleMultiplayerServersQuotaChangesResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerListTitleMultiplayerServersQuotaChangesResponseReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMultiplayerListTitleMultiplayerServersQuotaChangesResponse UPlayFabMultiplayerModelDecoder::decodeListTitleMultiplayerServersQuotaChangesResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeListTitleMultiplayerServersQuotaChangesResponseResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeListTitleMultiplayerServersQuotaChangesResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeListVirtualMachineSummariesResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerListVirtualMachineSummariesResponseReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMultiplayerListVirtualMachineSummariesResponse UPlayFabMultiplayerModelDecoder::decodeListVirtualMachineSummariesResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeListVirtualMachineSummariesResponseResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeListVirtualMachineSummariesResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeLobbyEmptyResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerLobbyEmptyResult     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMultiplayerLobbyEmptyResult UPlayFabMultiplayerModelDecoder::decodeLobbyEmptyResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeLobbyEmptyResultResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeLobbyEmptyResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeRequestMultiplayerServerResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerRequestMultiplayerServerResponseReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMultiplayerRequestMultiplayerServerResponse UPlayFabMultiplayerModelDecoder::decodeRequestMultiplayerServerResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeRequestMultiplayerServerResponseResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeRequestMultiplayerServerResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeRolloverContainerRegistryCredentialsResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerRolloverContainerRegistryCredentialsResponseReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMultiplayerRolloverContainerRegistryCredentialsResponse UPlayFabMultiplayerModelDecoder::decodeRolloverContainerRegistryCredentialsResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeRolloverContainerRegistryCredentialsResponseResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeRolloverContainerRegistryCredentialsResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabMultiplayerModelDecoder.decodeSubscribeToLobbyResourceResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMultiplayerSubscribeToLobbyResourceResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMultiplayerSubscribeToLobbyResourceResult UPlayFabMultiplayerModelDecoder::decodeSubscribeToLobbyResourceResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabMultiplayerModelDecoder", "decodeSubscribeToLobbyResourceResultResponse");

	Params::PlayFabMultiplayerModelDecoder_decodeSubscribeToLobbyResourceResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabProfilesAPI.GetGlobalPolicy
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FProfilesGetGlobalPolicyRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FProfilesGetGlobalPolicyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabProfilesAPI*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabProfilesAPI* UPlayFabProfilesAPI::GetGlobalPolicy(const struct FProfilesGetGlobalPolicyRequest& Request, TDelegate<void(const struct FProfilesGetGlobalPolicyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabProfilesAPI", "GetGlobalPolicy");

	Params::PlayFabProfilesAPI_GetGlobalPolicy Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabProfilesAPI.GetProfile
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FProfilesGetEntityProfileRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FProfilesGetEntityProfileResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabProfilesAPI*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabProfilesAPI* UPlayFabProfilesAPI::GetProfile(const struct FProfilesGetEntityProfileRequest& Request, TDelegate<void(const struct FProfilesGetEntityProfileResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabProfilesAPI", "GetProfile");

	Params::PlayFabProfilesAPI_GetProfile Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabProfilesAPI.GetProfiles
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FProfilesGetEntityProfilesRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FProfilesGetEntityProfilesResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabProfilesAPI*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabProfilesAPI* UPlayFabProfilesAPI::GetProfiles(const struct FProfilesGetEntityProfilesRequest& Request, TDelegate<void(const struct FProfilesGetEntityProfilesResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabProfilesAPI", "GetProfiles");

	Params::PlayFabProfilesAPI_GetProfiles Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabProfilesAPI.GetTitlePlayersFromMasterPlayerAccountIds
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FProfilesGetTitlePlayersFromMasterPlayerAccountIdsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FProfilesGetTitlePlayersFromMasterPlayerAccountIdsResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabProfilesAPI*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabProfilesAPI* UPlayFabProfilesAPI::GetTitlePlayersFromMasterPlayerAccountIds(const struct FProfilesGetTitlePlayersFromMasterPlayerAccountIdsRequest& Request, TDelegate<void(const struct FProfilesGetTitlePlayersFromMasterPlayerAccountIdsResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabProfilesAPI", "GetTitlePlayersFromMasterPlayerAccountIds");

	Params::PlayFabProfilesAPI_GetTitlePlayersFromMasterPlayerAccountIds Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabProfilesAPI.SetGlobalPolicy
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FProfilesSetGlobalPolicyRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FProfilesSetGlobalPolicyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabProfilesAPI*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabProfilesAPI* UPlayFabProfilesAPI::SetGlobalPolicy(const struct FProfilesSetGlobalPolicyRequest& Request, TDelegate<void(const struct FProfilesSetGlobalPolicyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabProfilesAPI", "SetGlobalPolicy");

	Params::PlayFabProfilesAPI_SetGlobalPolicy Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabProfilesAPI.SetProfileLanguage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FProfilesSetProfileLanguageRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FProfilesSetProfileLanguageResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabProfilesAPI*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabProfilesAPI* UPlayFabProfilesAPI::SetProfileLanguage(const struct FProfilesSetProfileLanguageRequest& Request, TDelegate<void(const struct FProfilesSetProfileLanguageResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabProfilesAPI", "SetProfileLanguage");

	Params::PlayFabProfilesAPI_SetProfileLanguage Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabProfilesAPI.SetProfilePolicy
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FProfilesSetEntityProfilePolicyRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FProfilesSetEntityProfilePolicyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabProfilesAPI*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabProfilesAPI* UPlayFabProfilesAPI::SetProfilePolicy(const struct FProfilesSetEntityProfilePolicyRequest& Request, TDelegate<void(const struct FProfilesSetEntityProfilePolicyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabProfilesAPI", "SetProfilePolicy");

	Params::PlayFabProfilesAPI_SetProfilePolicy Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabProfilesAPI.HelperGetGlobalPolicy
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabProfilesAPI::HelperGetGlobalPolicy(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabProfilesAPI", "HelperGetGlobalPolicy");

	Params::PlayFabProfilesAPI_HelperGetGlobalPolicy Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabProfilesAPI.HelperGetProfile
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabProfilesAPI::HelperGetProfile(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabProfilesAPI", "HelperGetProfile");

	Params::PlayFabProfilesAPI_HelperGetProfile Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabProfilesAPI.HelperGetProfiles
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabProfilesAPI::HelperGetProfiles(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabProfilesAPI", "HelperGetProfiles");

	Params::PlayFabProfilesAPI_HelperGetProfiles Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabProfilesAPI.HelperGetTitlePlayersFromMasterPlayerAccountIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabProfilesAPI::HelperGetTitlePlayersFromMasterPlayerAccountIds(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabProfilesAPI", "HelperGetTitlePlayersFromMasterPlayerAccountIds");

	Params::PlayFabProfilesAPI_HelperGetTitlePlayersFromMasterPlayerAccountIds Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabProfilesAPI.HelperSetGlobalPolicy
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabProfilesAPI::HelperSetGlobalPolicy(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabProfilesAPI", "HelperSetGlobalPolicy");

	Params::PlayFabProfilesAPI_HelperSetGlobalPolicy Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabProfilesAPI.HelperSetProfileLanguage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabProfilesAPI::HelperSetProfileLanguage(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabProfilesAPI", "HelperSetProfileLanguage");

	Params::PlayFabProfilesAPI_HelperSetProfileLanguage Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabProfilesAPI.HelperSetProfilePolicy
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabProfilesAPI::HelperSetProfilePolicy(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabProfilesAPI", "HelperSetProfilePolicy");

	Params::PlayFabProfilesAPI_HelperSetProfilePolicy Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabProfilesModelDecoder.decodeGetEntityProfileResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FProfilesGetEntityProfileResponseReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FProfilesGetEntityProfileResponse UPlayFabProfilesModelDecoder::decodeGetEntityProfileResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabProfilesModelDecoder", "decodeGetEntityProfileResponseResponse");

	Params::PlayFabProfilesModelDecoder_decodeGetEntityProfileResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabProfilesModelDecoder.decodeGetEntityProfilesResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FProfilesGetEntityProfilesResponseReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FProfilesGetEntityProfilesResponse UPlayFabProfilesModelDecoder::decodeGetEntityProfilesResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabProfilesModelDecoder", "decodeGetEntityProfilesResponseResponse");

	Params::PlayFabProfilesModelDecoder_decodeGetEntityProfilesResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabProfilesModelDecoder.decodeGetGlobalPolicyResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FProfilesGetGlobalPolicyResponse ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FProfilesGetGlobalPolicyResponse UPlayFabProfilesModelDecoder::decodeGetGlobalPolicyResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabProfilesModelDecoder", "decodeGetGlobalPolicyResponseResponse");

	Params::PlayFabProfilesModelDecoder_decodeGetGlobalPolicyResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabProfilesModelDecoder.decodeGetTitlePlayersFromMasterPlayerAccountIdsResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FProfilesGetTitlePlayersFromMasterPlayerAccountIdsResponseReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FProfilesGetTitlePlayersFromMasterPlayerAccountIdsResponse UPlayFabProfilesModelDecoder::decodeGetTitlePlayersFromMasterPlayerAccountIdsResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabProfilesModelDecoder", "decodeGetTitlePlayersFromMasterPlayerAccountIdsResponseResponse");

	Params::PlayFabProfilesModelDecoder_decodeGetTitlePlayersFromMasterPlayerAccountIdsResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabProfilesModelDecoder.decodeSetEntityProfilePolicyResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FProfilesSetEntityProfilePolicyResponseReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FProfilesSetEntityProfilePolicyResponse UPlayFabProfilesModelDecoder::decodeSetEntityProfilePolicyResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabProfilesModelDecoder", "decodeSetEntityProfilePolicyResponseResponse");

	Params::PlayFabProfilesModelDecoder_decodeSetEntityProfilePolicyResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabProfilesModelDecoder.decodeSetGlobalPolicyResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FProfilesSetGlobalPolicyResponse ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FProfilesSetGlobalPolicyResponse UPlayFabProfilesModelDecoder::decodeSetGlobalPolicyResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabProfilesModelDecoder", "decodeSetGlobalPolicyResponseResponse");

	Params::PlayFabProfilesModelDecoder_decodeSetGlobalPolicyResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabProfilesModelDecoder.decodeSetProfileLanguageResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FProfilesSetProfileLanguageResponseReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FProfilesSetProfileLanguageResponse UPlayFabProfilesModelDecoder::decodeSetProfileLanguageResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabProfilesModelDecoder", "decodeSetProfileLanguageResponseResponse");

	Params::PlayFabProfilesModelDecoder_decodeSetProfileLanguageResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.AddCharacterVirtualCurrency
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerAddCharacterVirtualCurrencyRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerModifyCharacterVirtualCurrencyResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::AddCharacterVirtualCurrency(const struct FServerAddCharacterVirtualCurrencyRequest& Request, TDelegate<void(const struct FServerModifyCharacterVirtualCurrencyResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "AddCharacterVirtualCurrency");

	Params::PlayFabServerAPI_AddCharacterVirtualCurrency Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.AddFriend
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerAddFriendRequest&   Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::AddFriend(const struct FServerAddFriendRequest& Request, TDelegate<void(const struct FServerEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "AddFriend");

	Params::PlayFabServerAPI_AddFriend Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.AddGenericID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerAddGenericIDRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerEmptyResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::AddGenericID(const struct FServerAddGenericIDRequest& Request, TDelegate<void(const struct FServerEmptyResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "AddGenericID");

	Params::PlayFabServerAPI_AddGenericID Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.AddPlayerTag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerAddPlayerTagRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerAddPlayerTagResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::AddPlayerTag(const struct FServerAddPlayerTagRequest& Request, TDelegate<void(const struct FServerAddPlayerTagResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "AddPlayerTag");

	Params::PlayFabServerAPI_AddPlayerTag Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.AddSharedGroupMembers
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerAddSharedGroupMembersRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerAddSharedGroupMembersResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::AddSharedGroupMembers(const struct FServerAddSharedGroupMembersRequest& Request, TDelegate<void(const struct FServerAddSharedGroupMembersResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "AddSharedGroupMembers");

	Params::PlayFabServerAPI_AddSharedGroupMembers Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.AddUserVirtualCurrency
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerAddUserVirtualCurrencyRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerModifyUserVirtualCurrencyResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::AddUserVirtualCurrency(const struct FServerAddUserVirtualCurrencyRequest& Request, TDelegate<void(const struct FServerModifyUserVirtualCurrencyResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "AddUserVirtualCurrency");

	Params::PlayFabServerAPI_AddUserVirtualCurrency Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.AuthenticateSessionTicket
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerAuthenticateSessionTicketRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerAuthenticateSessionTicketResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::AuthenticateSessionTicket(const struct FServerAuthenticateSessionTicketRequest& Request, TDelegate<void(const struct FServerAuthenticateSessionTicketResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "AuthenticateSessionTicket");

	Params::PlayFabServerAPI_AuthenticateSessionTicket Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.AwardSteamAchievement
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerAwardSteamAchievementRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerAwardSteamAchievementResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::AwardSteamAchievement(const struct FServerAwardSteamAchievementRequest& Request, TDelegate<void(const struct FServerAwardSteamAchievementResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "AwardSteamAchievement");

	Params::PlayFabServerAPI_AwardSteamAchievement Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.BanUsers
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerBanUsersRequest&    Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerBanUsersResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::BanUsers(const struct FServerBanUsersRequest& Request, TDelegate<void(const struct FServerBanUsersResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "BanUsers");

	Params::PlayFabServerAPI_BanUsers Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.ConsumeItem
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerConsumeItemRequest& Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerConsumeItemResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::ConsumeItem(const struct FServerConsumeItemRequest& Request, TDelegate<void(const struct FServerConsumeItemResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "ConsumeItem");

	Params::PlayFabServerAPI_ConsumeItem Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.CreateSharedGroup
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerCreateSharedGroupRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerCreateSharedGroupResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::CreateSharedGroup(const struct FServerCreateSharedGroupRequest& Request, TDelegate<void(const struct FServerCreateSharedGroupResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "CreateSharedGroup");

	Params::PlayFabServerAPI_CreateSharedGroup Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.DeleteCharacterFromUser
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerDeleteCharacterFromUserRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerDeleteCharacterFromUserResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::DeleteCharacterFromUser(const struct FServerDeleteCharacterFromUserRequest& Request, TDelegate<void(const struct FServerDeleteCharacterFromUserResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "DeleteCharacterFromUser");

	Params::PlayFabServerAPI_DeleteCharacterFromUser Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.DeletePlayer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerDeletePlayerRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerDeletePlayerResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::DeletePlayer(const struct FServerDeletePlayerRequest& Request, TDelegate<void(const struct FServerDeletePlayerResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "DeletePlayer");

	Params::PlayFabServerAPI_DeletePlayer Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.DeletePushNotificationTemplate
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerDeletePushNotificationTemplateRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerDeletePushNotificationTemplateResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::DeletePushNotificationTemplate(const struct FServerDeletePushNotificationTemplateRequest& Request, TDelegate<void(const struct FServerDeletePushNotificationTemplateResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "DeletePushNotificationTemplate");

	Params::PlayFabServerAPI_DeletePushNotificationTemplate Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.DeleteSharedGroup
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerDeleteSharedGroupRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::DeleteSharedGroup(const struct FServerDeleteSharedGroupRequest& Request, TDelegate<void(const struct FServerEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "DeleteSharedGroup");

	Params::PlayFabServerAPI_DeleteSharedGroup Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.DeregisterGame
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerDeregisterGameRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerDeregisterGameResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::DeregisterGame(const struct FServerDeregisterGameRequest& Request, TDelegate<void(const struct FServerDeregisterGameResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "DeregisterGame");

	Params::PlayFabServerAPI_DeregisterGame Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.EvaluateRandomResultTable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerEvaluateRandomResultTableRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerEvaluateRandomResultTableResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::EvaluateRandomResultTable(const struct FServerEvaluateRandomResultTableRequest& Request, TDelegate<void(const struct FServerEvaluateRandomResultTableResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "EvaluateRandomResultTable");

	Params::PlayFabServerAPI_EvaluateRandomResultTable Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.ExecuteCloudScript
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerExecuteCloudScriptServerRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerExecuteCloudScriptResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::ExecuteCloudScript(const struct FServerExecuteCloudScriptServerRequest& Request, TDelegate<void(const struct FServerExecuteCloudScriptResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "ExecuteCloudScript");

	Params::PlayFabServerAPI_ExecuteCloudScript Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetAllSegments
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetAllSegmentsRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetAllSegmentsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetAllSegments(const struct FServerGetAllSegmentsRequest& Request, TDelegate<void(const struct FServerGetAllSegmentsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetAllSegments");

	Params::PlayFabServerAPI_GetAllSegments Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetAllUsersCharacters
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerListUsersCharactersRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerListUsersCharactersResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetAllUsersCharacters(const struct FServerListUsersCharactersRequest& Request, TDelegate<void(const struct FServerListUsersCharactersResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetAllUsersCharacters");

	Params::PlayFabServerAPI_GetAllUsersCharacters Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetCatalogItems
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetCatalogItemsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetCatalogItemsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetCatalogItems(const struct FServerGetCatalogItemsRequest& Request, TDelegate<void(const struct FServerGetCatalogItemsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetCatalogItems");

	Params::PlayFabServerAPI_GetCatalogItems Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetCharacterData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetCharacterDataRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetCharacterDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetCharacterData(const struct FServerGetCharacterDataRequest& Request, TDelegate<void(const struct FServerGetCharacterDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetCharacterData");

	Params::PlayFabServerAPI_GetCharacterData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetCharacterInternalData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetCharacterDataRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetCharacterDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetCharacterInternalData(const struct FServerGetCharacterDataRequest& Request, TDelegate<void(const struct FServerGetCharacterDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetCharacterInternalData");

	Params::PlayFabServerAPI_GetCharacterInternalData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetCharacterInventory
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetCharacterInventoryRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetCharacterInventoryResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetCharacterInventory(const struct FServerGetCharacterInventoryRequest& Request, TDelegate<void(const struct FServerGetCharacterInventoryResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetCharacterInventory");

	Params::PlayFabServerAPI_GetCharacterInventory Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetCharacterLeaderboard
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetCharacterLeaderboardRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetCharacterLeaderboardResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetCharacterLeaderboard(const struct FServerGetCharacterLeaderboardRequest& Request, TDelegate<void(const struct FServerGetCharacterLeaderboardResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetCharacterLeaderboard");

	Params::PlayFabServerAPI_GetCharacterLeaderboard Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetCharacterReadOnlyData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetCharacterDataRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetCharacterDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetCharacterReadOnlyData(const struct FServerGetCharacterDataRequest& Request, TDelegate<void(const struct FServerGetCharacterDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetCharacterReadOnlyData");

	Params::PlayFabServerAPI_GetCharacterReadOnlyData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetCharacterStatistics
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetCharacterStatisticsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetCharacterStatisticsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetCharacterStatistics(const struct FServerGetCharacterStatisticsRequest& Request, TDelegate<void(const struct FServerGetCharacterStatisticsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetCharacterStatistics");

	Params::PlayFabServerAPI_GetCharacterStatistics Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetContentDownloadUrl
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetContentDownloadUrlRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetContentDownloadUrlResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetContentDownloadUrl(const struct FServerGetContentDownloadUrlRequest& Request, TDelegate<void(const struct FServerGetContentDownloadUrlResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetContentDownloadUrl");

	Params::PlayFabServerAPI_GetContentDownloadUrl Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetFriendLeaderboard
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetFriendLeaderboardRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetLeaderboardResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetFriendLeaderboard(const struct FServerGetFriendLeaderboardRequest& Request, TDelegate<void(const struct FServerGetLeaderboardResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetFriendLeaderboard");

	Params::PlayFabServerAPI_GetFriendLeaderboard Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetFriendsList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetFriendsListRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetFriendsListResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetFriendsList(const struct FServerGetFriendsListRequest& Request, TDelegate<void(const struct FServerGetFriendsListResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetFriendsList");

	Params::PlayFabServerAPI_GetFriendsList Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetLeaderboard
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetLeaderboardRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetLeaderboardResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetLeaderboard(const struct FServerGetLeaderboardRequest& Request, TDelegate<void(const struct FServerGetLeaderboardResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetLeaderboard");

	Params::PlayFabServerAPI_GetLeaderboard Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetLeaderboardAroundCharacter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetLeaderboardAroundCharacterRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetLeaderboardAroundCharacterResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetLeaderboardAroundCharacter(const struct FServerGetLeaderboardAroundCharacterRequest& Request, TDelegate<void(const struct FServerGetLeaderboardAroundCharacterResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetLeaderboardAroundCharacter");

	Params::PlayFabServerAPI_GetLeaderboardAroundCharacter Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetLeaderboardAroundUser
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetLeaderboardAroundUserRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetLeaderboardAroundUserResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetLeaderboardAroundUser(const struct FServerGetLeaderboardAroundUserRequest& Request, TDelegate<void(const struct FServerGetLeaderboardAroundUserResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetLeaderboardAroundUser");

	Params::PlayFabServerAPI_GetLeaderboardAroundUser Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetLeaderboardForUserCharacters
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetLeaderboardForUsersCharactersRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetLeaderboardForUsersCharactersResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetLeaderboardForUserCharacters(const struct FServerGetLeaderboardForUsersCharactersRequest& Request, TDelegate<void(const struct FServerGetLeaderboardForUsersCharactersResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetLeaderboardForUserCharacters");

	Params::PlayFabServerAPI_GetLeaderboardForUserCharacters Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetPlayerCombinedInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetPlayerCombinedInfoRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetPlayerCombinedInfoResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetPlayerCombinedInfo(const struct FServerGetPlayerCombinedInfoRequest& Request, TDelegate<void(const struct FServerGetPlayerCombinedInfoResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetPlayerCombinedInfo");

	Params::PlayFabServerAPI_GetPlayerCombinedInfo Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetPlayerProfile
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetPlayerProfileRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetPlayerProfileResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetPlayerProfile(const struct FServerGetPlayerProfileRequest& Request, TDelegate<void(const struct FServerGetPlayerProfileResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetPlayerProfile");

	Params::PlayFabServerAPI_GetPlayerProfile Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetPlayerSegments
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetPlayersSegmentsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetPlayerSegmentsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetPlayerSegments(const struct FServerGetPlayersSegmentsRequest& Request, TDelegate<void(const struct FServerGetPlayerSegmentsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetPlayerSegments");

	Params::PlayFabServerAPI_GetPlayerSegments Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetPlayersInSegment
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetPlayersInSegmentRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetPlayersInSegmentResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetPlayersInSegment(const struct FServerGetPlayersInSegmentRequest& Request, TDelegate<void(const struct FServerGetPlayersInSegmentResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetPlayersInSegment");

	Params::PlayFabServerAPI_GetPlayersInSegment Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetPlayerStatistics
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetPlayerStatisticsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetPlayerStatisticsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetPlayerStatistics(const struct FServerGetPlayerStatisticsRequest& Request, TDelegate<void(const struct FServerGetPlayerStatisticsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetPlayerStatistics");

	Params::PlayFabServerAPI_GetPlayerStatistics Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetPlayerStatisticVersions
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetPlayerStatisticVersionsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetPlayerStatisticVersionsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetPlayerStatisticVersions(const struct FServerGetPlayerStatisticVersionsRequest& Request, TDelegate<void(const struct FServerGetPlayerStatisticVersionsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetPlayerStatisticVersions");

	Params::PlayFabServerAPI_GetPlayerStatisticVersions Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetPlayerTags
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetPlayerTagsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetPlayerTagsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetPlayerTags(const struct FServerGetPlayerTagsRequest& Request, TDelegate<void(const struct FServerGetPlayerTagsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetPlayerTags");

	Params::PlayFabServerAPI_GetPlayerTags Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetPlayFabIDsFromFacebookIDs
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetPlayFabIDsFromFacebookIDsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetPlayFabIDsFromFacebookIDsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetPlayFabIDsFromFacebookIDs(const struct FServerGetPlayFabIDsFromFacebookIDsRequest& Request, TDelegate<void(const struct FServerGetPlayFabIDsFromFacebookIDsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetPlayFabIDsFromFacebookIDs");

	Params::PlayFabServerAPI_GetPlayFabIDsFromFacebookIDs Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetPlayFabIDsFromFacebookInstantGamesIds
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetPlayFabIDsFromFacebookInstantGamesIdsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetPlayFabIDsFromFacebookInstantGamesIdsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetPlayFabIDsFromFacebookInstantGamesIds(const struct FServerGetPlayFabIDsFromFacebookInstantGamesIdsRequest& Request, TDelegate<void(const struct FServerGetPlayFabIDsFromFacebookInstantGamesIdsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetPlayFabIDsFromFacebookInstantGamesIds");

	Params::PlayFabServerAPI_GetPlayFabIDsFromFacebookInstantGamesIds Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetPlayFabIDsFromGenericIDs
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetPlayFabIDsFromGenericIDsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetPlayFabIDsFromGenericIDsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetPlayFabIDsFromGenericIDs(const struct FServerGetPlayFabIDsFromGenericIDsRequest& Request, TDelegate<void(const struct FServerGetPlayFabIDsFromGenericIDsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetPlayFabIDsFromGenericIDs");

	Params::PlayFabServerAPI_GetPlayFabIDsFromGenericIDs Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetPlayFabIDsFromNintendoServiceAccountIds
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetPlayFabIDsFromNintendoServiceAccountIdsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetPlayFabIDsFromNintendoServiceAccountIdsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetPlayFabIDsFromNintendoServiceAccountIds(const struct FServerGetPlayFabIDsFromNintendoServiceAccountIdsRequest& Request, TDelegate<void(const struct FServerGetPlayFabIDsFromNintendoServiceAccountIdsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetPlayFabIDsFromNintendoServiceAccountIds");

	Params::PlayFabServerAPI_GetPlayFabIDsFromNintendoServiceAccountIds Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetPlayFabIDsFromNintendoSwitchDeviceIds
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetPlayFabIDsFromNintendoSwitchDeviceIdsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetPlayFabIDsFromNintendoSwitchDeviceIdsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetPlayFabIDsFromNintendoSwitchDeviceIds(const struct FServerGetPlayFabIDsFromNintendoSwitchDeviceIdsRequest& Request, TDelegate<void(const struct FServerGetPlayFabIDsFromNintendoSwitchDeviceIdsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetPlayFabIDsFromNintendoSwitchDeviceIds");

	Params::PlayFabServerAPI_GetPlayFabIDsFromNintendoSwitchDeviceIds Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetPlayFabIDsFromPSNAccountIDs
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetPlayFabIDsFromPSNAccountIDsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetPlayFabIDsFromPSNAccountIDsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetPlayFabIDsFromPSNAccountIDs(const struct FServerGetPlayFabIDsFromPSNAccountIDsRequest& Request, TDelegate<void(const struct FServerGetPlayFabIDsFromPSNAccountIDsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetPlayFabIDsFromPSNAccountIDs");

	Params::PlayFabServerAPI_GetPlayFabIDsFromPSNAccountIDs Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetPlayFabIDsFromSteamIDs
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetPlayFabIDsFromSteamIDsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetPlayFabIDsFromSteamIDsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetPlayFabIDsFromSteamIDs(const struct FServerGetPlayFabIDsFromSteamIDsRequest& Request, TDelegate<void(const struct FServerGetPlayFabIDsFromSteamIDsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetPlayFabIDsFromSteamIDs");

	Params::PlayFabServerAPI_GetPlayFabIDsFromSteamIDs Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetPlayFabIDsFromTwitchIDs
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetPlayFabIDsFromTwitchIDsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetPlayFabIDsFromTwitchIDsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetPlayFabIDsFromTwitchIDs(const struct FServerGetPlayFabIDsFromTwitchIDsRequest& Request, TDelegate<void(const struct FServerGetPlayFabIDsFromTwitchIDsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetPlayFabIDsFromTwitchIDs");

	Params::PlayFabServerAPI_GetPlayFabIDsFromTwitchIDs Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetPlayFabIDsFromXboxLiveIDs
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetPlayFabIDsFromXboxLiveIDsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetPlayFabIDsFromXboxLiveIDsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetPlayFabIDsFromXboxLiveIDs(const struct FServerGetPlayFabIDsFromXboxLiveIDsRequest& Request, TDelegate<void(const struct FServerGetPlayFabIDsFromXboxLiveIDsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetPlayFabIDsFromXboxLiveIDs");

	Params::PlayFabServerAPI_GetPlayFabIDsFromXboxLiveIDs Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetPublisherData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetPublisherDataRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetPublisherDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetPublisherData(const struct FServerGetPublisherDataRequest& Request, TDelegate<void(const struct FServerGetPublisherDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetPublisherData");

	Params::PlayFabServerAPI_GetPublisherData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetRandomResultTables
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetRandomResultTablesRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetRandomResultTablesResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetRandomResultTables(const struct FServerGetRandomResultTablesRequest& Request, TDelegate<void(const struct FServerGetRandomResultTablesResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetRandomResultTables");

	Params::PlayFabServerAPI_GetRandomResultTables Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetServerCustomIDsFromPlayFabIDs
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetServerCustomIDsFromPlayFabIDsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetServerCustomIDsFromPlayFabIDsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetServerCustomIDsFromPlayFabIDs(const struct FServerGetServerCustomIDsFromPlayFabIDsRequest& Request, TDelegate<void(const struct FServerGetServerCustomIDsFromPlayFabIDsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetServerCustomIDsFromPlayFabIDs");

	Params::PlayFabServerAPI_GetServerCustomIDsFromPlayFabIDs Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetSharedGroupData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetSharedGroupDataRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetSharedGroupDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetSharedGroupData(const struct FServerGetSharedGroupDataRequest& Request, TDelegate<void(const struct FServerGetSharedGroupDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetSharedGroupData");

	Params::PlayFabServerAPI_GetSharedGroupData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetStoreItems
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetStoreItemsServerRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetStoreItemsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetStoreItems(const struct FServerGetStoreItemsServerRequest& Request, TDelegate<void(const struct FServerGetStoreItemsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetStoreItems");

	Params::PlayFabServerAPI_GetStoreItems Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetTime
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetTimeRequest&     Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetTimeResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetTime(const struct FServerGetTimeRequest& Request, TDelegate<void(const struct FServerGetTimeResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetTime");

	Params::PlayFabServerAPI_GetTime Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetTitleData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetTitleDataRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetTitleDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetTitleData(const struct FServerGetTitleDataRequest& Request, TDelegate<void(const struct FServerGetTitleDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetTitleData");

	Params::PlayFabServerAPI_GetTitleData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetTitleInternalData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetTitleDataRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetTitleDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetTitleInternalData(const struct FServerGetTitleDataRequest& Request, TDelegate<void(const struct FServerGetTitleDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetTitleInternalData");

	Params::PlayFabServerAPI_GetTitleInternalData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetTitleNews
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetTitleNewsRequest&Request                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetTitleNewsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetTitleNews(const struct FServerGetTitleNewsRequest& Request, TDelegate<void(const struct FServerGetTitleNewsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetTitleNews");

	Params::PlayFabServerAPI_GetTitleNews Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetUserAccountInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetUserAccountInfoRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetUserAccountInfoResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetUserAccountInfo(const struct FServerGetUserAccountInfoRequest& Request, TDelegate<void(const struct FServerGetUserAccountInfoResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetUserAccountInfo");

	Params::PlayFabServerAPI_GetUserAccountInfo Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetUserBans
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetUserBansRequest& Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetUserBansResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetUserBans(const struct FServerGetUserBansRequest& Request, TDelegate<void(const struct FServerGetUserBansResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetUserBans");

	Params::PlayFabServerAPI_GetUserBans Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetUserData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetUserDataRequest& Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetUserDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetUserData(const struct FServerGetUserDataRequest& Request, TDelegate<void(const struct FServerGetUserDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetUserData");

	Params::PlayFabServerAPI_GetUserData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetUserInternalData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetUserDataRequest& Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetUserDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetUserInternalData(const struct FServerGetUserDataRequest& Request, TDelegate<void(const struct FServerGetUserDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetUserInternalData");

	Params::PlayFabServerAPI_GetUserInternalData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetUserInventory
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetUserInventoryRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetUserInventoryResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetUserInventory(const struct FServerGetUserInventoryRequest& Request, TDelegate<void(const struct FServerGetUserInventoryResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetUserInventory");

	Params::PlayFabServerAPI_GetUserInventory Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetUserPublisherData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetUserDataRequest& Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetUserDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetUserPublisherData(const struct FServerGetUserDataRequest& Request, TDelegate<void(const struct FServerGetUserDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetUserPublisherData");

	Params::PlayFabServerAPI_GetUserPublisherData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetUserPublisherInternalData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetUserDataRequest& Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetUserDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetUserPublisherInternalData(const struct FServerGetUserDataRequest& Request, TDelegate<void(const struct FServerGetUserDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetUserPublisherInternalData");

	Params::PlayFabServerAPI_GetUserPublisherInternalData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetUserPublisherReadOnlyData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetUserDataRequest& Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetUserDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetUserPublisherReadOnlyData(const struct FServerGetUserDataRequest& Request, TDelegate<void(const struct FServerGetUserDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetUserPublisherReadOnlyData");

	Params::PlayFabServerAPI_GetUserPublisherReadOnlyData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GetUserReadOnlyData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGetUserDataRequest& Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGetUserDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GetUserReadOnlyData(const struct FServerGetUserDataRequest& Request, TDelegate<void(const struct FServerGetUserDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GetUserReadOnlyData");

	Params::PlayFabServerAPI_GetUserReadOnlyData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GrantCharacterToUser
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGrantCharacterToUserRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGrantCharacterToUserResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GrantCharacterToUser(const struct FServerGrantCharacterToUserRequest& Request, TDelegate<void(const struct FServerGrantCharacterToUserResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GrantCharacterToUser");

	Params::PlayFabServerAPI_GrantCharacterToUser Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GrantItemsToCharacter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGrantItemsToCharacterRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGrantItemsToCharacterResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GrantItemsToCharacter(const struct FServerGrantItemsToCharacterRequest& Request, TDelegate<void(const struct FServerGrantItemsToCharacterResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GrantItemsToCharacter");

	Params::PlayFabServerAPI_GrantItemsToCharacter Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GrantItemsToUser
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGrantItemsToUserRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGrantItemsToUserResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GrantItemsToUser(const struct FServerGrantItemsToUserRequest& Request, TDelegate<void(const struct FServerGrantItemsToUserResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GrantItemsToUser");

	Params::PlayFabServerAPI_GrantItemsToUser Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.GrantItemsToUsers
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerGrantItemsToUsersRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerGrantItemsToUsersResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::GrantItemsToUsers(const struct FServerGrantItemsToUsersRequest& Request, TDelegate<void(const struct FServerGrantItemsToUsersResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "GrantItemsToUsers");

	Params::PlayFabServerAPI_GrantItemsToUsers Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.LinkPSNAccount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerLinkPSNAccountRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerLinkPSNAccountResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::LinkPSNAccount(const struct FServerLinkPSNAccountRequest& Request, TDelegate<void(const struct FServerLinkPSNAccountResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "LinkPSNAccount");

	Params::PlayFabServerAPI_LinkPSNAccount Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.LinkServerCustomId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerLinkServerCustomIdRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerLinkServerCustomIdResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::LinkServerCustomId(const struct FServerLinkServerCustomIdRequest& Request, TDelegate<void(const struct FServerLinkServerCustomIdResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "LinkServerCustomId");

	Params::PlayFabServerAPI_LinkServerCustomId Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.LinkXboxAccount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerLinkXboxAccountRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerLinkXboxAccountResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::LinkXboxAccount(const struct FServerLinkXboxAccountRequest& Request, TDelegate<void(const struct FServerLinkXboxAccountResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "LinkXboxAccount");

	Params::PlayFabServerAPI_LinkXboxAccount Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.LoginWithServerCustomId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerLoginWithServerCustomIdRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerServerLoginResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::LoginWithServerCustomId(const struct FServerLoginWithServerCustomIdRequest& Request, TDelegate<void(const struct FServerServerLoginResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "LoginWithServerCustomId");

	Params::PlayFabServerAPI_LoginWithServerCustomId Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.LoginWithSteamId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerLoginWithSteamIdRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerServerLoginResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::LoginWithSteamId(const struct FServerLoginWithSteamIdRequest& Request, TDelegate<void(const struct FServerServerLoginResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "LoginWithSteamId");

	Params::PlayFabServerAPI_LoginWithSteamId Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.LoginWithXbox
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerLoginWithXboxRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerServerLoginResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::LoginWithXbox(const struct FServerLoginWithXboxRequest& Request, TDelegate<void(const struct FServerServerLoginResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "LoginWithXbox");

	Params::PlayFabServerAPI_LoginWithXbox Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.LoginWithXboxId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerLoginWithXboxIdRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerServerLoginResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::LoginWithXboxId(const struct FServerLoginWithXboxIdRequest& Request, TDelegate<void(const struct FServerServerLoginResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "LoginWithXboxId");

	Params::PlayFabServerAPI_LoginWithXboxId Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.ModifyItemUses
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerModifyItemUsesRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerModifyItemUsesResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::ModifyItemUses(const struct FServerModifyItemUsesRequest& Request, TDelegate<void(const struct FServerModifyItemUsesResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "ModifyItemUses");

	Params::PlayFabServerAPI_ModifyItemUses Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.MoveItemToCharacterFromCharacter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerMoveItemToCharacterFromCharacterRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerMoveItemToCharacterFromCharacterResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::MoveItemToCharacterFromCharacter(const struct FServerMoveItemToCharacterFromCharacterRequest& Request, TDelegate<void(const struct FServerMoveItemToCharacterFromCharacterResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "MoveItemToCharacterFromCharacter");

	Params::PlayFabServerAPI_MoveItemToCharacterFromCharacter Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.MoveItemToCharacterFromUser
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerMoveItemToCharacterFromUserRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerMoveItemToCharacterFromUserResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::MoveItemToCharacterFromUser(const struct FServerMoveItemToCharacterFromUserRequest& Request, TDelegate<void(const struct FServerMoveItemToCharacterFromUserResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "MoveItemToCharacterFromUser");

	Params::PlayFabServerAPI_MoveItemToCharacterFromUser Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.MoveItemToUserFromCharacter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerMoveItemToUserFromCharacterRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerMoveItemToUserFromCharacterResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::MoveItemToUserFromCharacter(const struct FServerMoveItemToUserFromCharacterRequest& Request, TDelegate<void(const struct FServerMoveItemToUserFromCharacterResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "MoveItemToUserFromCharacter");

	Params::PlayFabServerAPI_MoveItemToUserFromCharacter Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.NotifyMatchmakerPlayerLeft
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerNotifyMatchmakerPlayerLeftRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerNotifyMatchmakerPlayerLeftResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::NotifyMatchmakerPlayerLeft(const struct FServerNotifyMatchmakerPlayerLeftRequest& Request, TDelegate<void(const struct FServerNotifyMatchmakerPlayerLeftResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "NotifyMatchmakerPlayerLeft");

	Params::PlayFabServerAPI_NotifyMatchmakerPlayerLeft Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.RedeemCoupon
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerRedeemCouponRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerRedeemCouponResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::RedeemCoupon(const struct FServerRedeemCouponRequest& Request, TDelegate<void(const struct FServerRedeemCouponResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "RedeemCoupon");

	Params::PlayFabServerAPI_RedeemCoupon Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.RedeemMatchmakerTicket
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerRedeemMatchmakerTicketRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerRedeemMatchmakerTicketResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::RedeemMatchmakerTicket(const struct FServerRedeemMatchmakerTicketRequest& Request, TDelegate<void(const struct FServerRedeemMatchmakerTicketResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "RedeemMatchmakerTicket");

	Params::PlayFabServerAPI_RedeemMatchmakerTicket Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.RefreshGameServerInstanceHeartbeat
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerRefreshGameServerInstanceHeartbeatRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerRefreshGameServerInstanceHeartbeatResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::RefreshGameServerInstanceHeartbeat(const struct FServerRefreshGameServerInstanceHeartbeatRequest& Request, TDelegate<void(const struct FServerRefreshGameServerInstanceHeartbeatResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "RefreshGameServerInstanceHeartbeat");

	Params::PlayFabServerAPI_RefreshGameServerInstanceHeartbeat Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.RegisterGame
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerRegisterGameRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerRegisterGameResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::RegisterGame(const struct FServerRegisterGameRequest& Request, TDelegate<void(const struct FServerRegisterGameResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "RegisterGame");

	Params::PlayFabServerAPI_RegisterGame Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.RemoveFriend
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerRemoveFriendRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::RemoveFriend(const struct FServerRemoveFriendRequest& Request, TDelegate<void(const struct FServerEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "RemoveFriend");

	Params::PlayFabServerAPI_RemoveFriend Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.RemoveGenericID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerRemoveGenericIDRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerEmptyResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::RemoveGenericID(const struct FServerRemoveGenericIDRequest& Request, TDelegate<void(const struct FServerEmptyResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "RemoveGenericID");

	Params::PlayFabServerAPI_RemoveGenericID Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.RemovePlayerTag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerRemovePlayerTagRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerRemovePlayerTagResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::RemovePlayerTag(const struct FServerRemovePlayerTagRequest& Request, TDelegate<void(const struct FServerRemovePlayerTagResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "RemovePlayerTag");

	Params::PlayFabServerAPI_RemovePlayerTag Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.RemoveSharedGroupMembers
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerRemoveSharedGroupMembersRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerRemoveSharedGroupMembersResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::RemoveSharedGroupMembers(const struct FServerRemoveSharedGroupMembersRequest& Request, TDelegate<void(const struct FServerRemoveSharedGroupMembersResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "RemoveSharedGroupMembers");

	Params::PlayFabServerAPI_RemoveSharedGroupMembers Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.ReportPlayer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerReportPlayerServerRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerReportPlayerServerResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::ReportPlayer(const struct FServerReportPlayerServerRequest& Request, TDelegate<void(const struct FServerReportPlayerServerResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "ReportPlayer");

	Params::PlayFabServerAPI_ReportPlayer Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.RevokeAllBansForUser
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerRevokeAllBansForUserRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerRevokeAllBansForUserResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::RevokeAllBansForUser(const struct FServerRevokeAllBansForUserRequest& Request, TDelegate<void(const struct FServerRevokeAllBansForUserResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "RevokeAllBansForUser");

	Params::PlayFabServerAPI_RevokeAllBansForUser Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.RevokeBans
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerRevokeBansRequest&  Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerRevokeBansResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::RevokeBans(const struct FServerRevokeBansRequest& Request, TDelegate<void(const struct FServerRevokeBansResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "RevokeBans");

	Params::PlayFabServerAPI_RevokeBans Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.RevokeInventoryItem
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerRevokeInventoryItemRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerRevokeInventoryResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::RevokeInventoryItem(const struct FServerRevokeInventoryItemRequest& Request, TDelegate<void(const struct FServerRevokeInventoryResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "RevokeInventoryItem");

	Params::PlayFabServerAPI_RevokeInventoryItem Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.RevokeInventoryItems
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerRevokeInventoryItemsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerRevokeInventoryItemsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::RevokeInventoryItems(const struct FServerRevokeInventoryItemsRequest& Request, TDelegate<void(const struct FServerRevokeInventoryItemsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "RevokeInventoryItems");

	Params::PlayFabServerAPI_RevokeInventoryItems Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.SavePushNotificationTemplate
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerSavePushNotificationTemplateRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerSavePushNotificationTemplateResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::SavePushNotificationTemplate(const struct FServerSavePushNotificationTemplateRequest& Request, TDelegate<void(const struct FServerSavePushNotificationTemplateResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "SavePushNotificationTemplate");

	Params::PlayFabServerAPI_SavePushNotificationTemplate Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.SendCustomAccountRecoveryEmail
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerSendCustomAccountRecoveryEmailRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerSendCustomAccountRecoveryEmailResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::SendCustomAccountRecoveryEmail(const struct FServerSendCustomAccountRecoveryEmailRequest& Request, TDelegate<void(const struct FServerSendCustomAccountRecoveryEmailResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "SendCustomAccountRecoveryEmail");

	Params::PlayFabServerAPI_SendCustomAccountRecoveryEmail Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.SendEmailFromTemplate
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerSendEmailFromTemplateRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerSendEmailFromTemplateResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::SendEmailFromTemplate(const struct FServerSendEmailFromTemplateRequest& Request, TDelegate<void(const struct FServerSendEmailFromTemplateResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "SendEmailFromTemplate");

	Params::PlayFabServerAPI_SendEmailFromTemplate Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.SendPushNotification
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerSendPushNotificationRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerSendPushNotificationResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::SendPushNotification(const struct FServerSendPushNotificationRequest& Request, TDelegate<void(const struct FServerSendPushNotificationResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "SendPushNotification");

	Params::PlayFabServerAPI_SendPushNotification Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.SendPushNotificationFromTemplate
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerSendPushNotificationFromTemplateRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerSendPushNotificationResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::SendPushNotificationFromTemplate(const struct FServerSendPushNotificationFromTemplateRequest& Request, TDelegate<void(const struct FServerSendPushNotificationResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "SendPushNotificationFromTemplate");

	Params::PlayFabServerAPI_SendPushNotificationFromTemplate Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.SetFriendTags
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerSetFriendTagsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::SetFriendTags(const struct FServerSetFriendTagsRequest& Request, TDelegate<void(const struct FServerEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "SetFriendTags");

	Params::PlayFabServerAPI_SetFriendTags Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.SetGameServerInstanceData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerSetGameServerInstanceDataRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerSetGameServerInstanceDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::SetGameServerInstanceData(const struct FServerSetGameServerInstanceDataRequest& Request, TDelegate<void(const struct FServerSetGameServerInstanceDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "SetGameServerInstanceData");

	Params::PlayFabServerAPI_SetGameServerInstanceData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.SetGameServerInstanceState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerSetGameServerInstanceStateRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerSetGameServerInstanceStateResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::SetGameServerInstanceState(const struct FServerSetGameServerInstanceStateRequest& Request, TDelegate<void(const struct FServerSetGameServerInstanceStateResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "SetGameServerInstanceState");

	Params::PlayFabServerAPI_SetGameServerInstanceState Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.SetGameServerInstanceTags
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerSetGameServerInstanceTagsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerSetGameServerInstanceTagsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::SetGameServerInstanceTags(const struct FServerSetGameServerInstanceTagsRequest& Request, TDelegate<void(const struct FServerSetGameServerInstanceTagsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "SetGameServerInstanceTags");

	Params::PlayFabServerAPI_SetGameServerInstanceTags Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.SetPlayerSecret
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerSetPlayerSecretRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerSetPlayerSecretResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::SetPlayerSecret(const struct FServerSetPlayerSecretRequest& Request, TDelegate<void(const struct FServerSetPlayerSecretResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "SetPlayerSecret");

	Params::PlayFabServerAPI_SetPlayerSecret Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.SetPublisherData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerSetPublisherDataRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerSetPublisherDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::SetPublisherData(const struct FServerSetPublisherDataRequest& Request, TDelegate<void(const struct FServerSetPublisherDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "SetPublisherData");

	Params::PlayFabServerAPI_SetPublisherData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.SetTitleData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerSetTitleDataRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerSetTitleDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::SetTitleData(const struct FServerSetTitleDataRequest& Request, TDelegate<void(const struct FServerSetTitleDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "SetTitleData");

	Params::PlayFabServerAPI_SetTitleData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.SetTitleInternalData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerSetTitleDataRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerSetTitleDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::SetTitleInternalData(const struct FServerSetTitleDataRequest& Request, TDelegate<void(const struct FServerSetTitleDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "SetTitleInternalData");

	Params::PlayFabServerAPI_SetTitleInternalData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.SubtractCharacterVirtualCurrency
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerSubtractCharacterVirtualCurrencyRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerModifyCharacterVirtualCurrencyResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::SubtractCharacterVirtualCurrency(const struct FServerSubtractCharacterVirtualCurrencyRequest& Request, TDelegate<void(const struct FServerModifyCharacterVirtualCurrencyResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "SubtractCharacterVirtualCurrency");

	Params::PlayFabServerAPI_SubtractCharacterVirtualCurrency Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.SubtractUserVirtualCurrency
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerSubtractUserVirtualCurrencyRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerModifyUserVirtualCurrencyResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::SubtractUserVirtualCurrency(const struct FServerSubtractUserVirtualCurrencyRequest& Request, TDelegate<void(const struct FServerModifyUserVirtualCurrencyResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "SubtractUserVirtualCurrency");

	Params::PlayFabServerAPI_SubtractUserVirtualCurrency Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.UnlinkPSNAccount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerUnlinkPSNAccountRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerUnlinkPSNAccountResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::UnlinkPSNAccount(const struct FServerUnlinkPSNAccountRequest& Request, TDelegate<void(const struct FServerUnlinkPSNAccountResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "UnlinkPSNAccount");

	Params::PlayFabServerAPI_UnlinkPSNAccount Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.UnlinkServerCustomId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerUnlinkServerCustomIdRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerUnlinkServerCustomIdResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::UnlinkServerCustomId(const struct FServerUnlinkServerCustomIdRequest& Request, TDelegate<void(const struct FServerUnlinkServerCustomIdResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "UnlinkServerCustomId");

	Params::PlayFabServerAPI_UnlinkServerCustomId Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.UnlinkXboxAccount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerUnlinkXboxAccountRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerUnlinkXboxAccountResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::UnlinkXboxAccount(const struct FServerUnlinkXboxAccountRequest& Request, TDelegate<void(const struct FServerUnlinkXboxAccountResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "UnlinkXboxAccount");

	Params::PlayFabServerAPI_UnlinkXboxAccount Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.UnlockContainerInstance
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerUnlockContainerInstanceRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerUnlockContainerItemResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::UnlockContainerInstance(const struct FServerUnlockContainerInstanceRequest& Request, TDelegate<void(const struct FServerUnlockContainerItemResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "UnlockContainerInstance");

	Params::PlayFabServerAPI_UnlockContainerInstance Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.UnlockContainerItem
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerUnlockContainerItemRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerUnlockContainerItemResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::UnlockContainerItem(const struct FServerUnlockContainerItemRequest& Request, TDelegate<void(const struct FServerUnlockContainerItemResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "UnlockContainerItem");

	Params::PlayFabServerAPI_UnlockContainerItem Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.UpdateAvatarUrl
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerUpdateAvatarUrlRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::UpdateAvatarUrl(const struct FServerUpdateAvatarUrlRequest& Request, TDelegate<void(const struct FServerEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "UpdateAvatarUrl");

	Params::PlayFabServerAPI_UpdateAvatarUrl Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.UpdateBans
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerUpdateBansRequest&  Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerUpdateBansResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::UpdateBans(const struct FServerUpdateBansRequest& Request, TDelegate<void(const struct FServerUpdateBansResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "UpdateBans");

	Params::PlayFabServerAPI_UpdateBans Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.UpdateCharacterData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerUpdateCharacterDataRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerUpdateCharacterDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::UpdateCharacterData(const struct FServerUpdateCharacterDataRequest& Request, TDelegate<void(const struct FServerUpdateCharacterDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "UpdateCharacterData");

	Params::PlayFabServerAPI_UpdateCharacterData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.UpdateCharacterInternalData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerUpdateCharacterDataRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerUpdateCharacterDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::UpdateCharacterInternalData(const struct FServerUpdateCharacterDataRequest& Request, TDelegate<void(const struct FServerUpdateCharacterDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "UpdateCharacterInternalData");

	Params::PlayFabServerAPI_UpdateCharacterInternalData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.UpdateCharacterReadOnlyData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerUpdateCharacterDataRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerUpdateCharacterDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::UpdateCharacterReadOnlyData(const struct FServerUpdateCharacterDataRequest& Request, TDelegate<void(const struct FServerUpdateCharacterDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "UpdateCharacterReadOnlyData");

	Params::PlayFabServerAPI_UpdateCharacterReadOnlyData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.UpdateCharacterStatistics
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerUpdateCharacterStatisticsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerUpdateCharacterStatisticsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::UpdateCharacterStatistics(const struct FServerUpdateCharacterStatisticsRequest& Request, TDelegate<void(const struct FServerUpdateCharacterStatisticsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "UpdateCharacterStatistics");

	Params::PlayFabServerAPI_UpdateCharacterStatistics Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.UpdatePlayerStatistics
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerUpdatePlayerStatisticsRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerUpdatePlayerStatisticsResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::UpdatePlayerStatistics(const struct FServerUpdatePlayerStatisticsRequest& Request, TDelegate<void(const struct FServerUpdatePlayerStatisticsResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "UpdatePlayerStatistics");

	Params::PlayFabServerAPI_UpdatePlayerStatistics Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.UpdateSharedGroupData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerUpdateSharedGroupDataRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerUpdateSharedGroupDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::UpdateSharedGroupData(const struct FServerUpdateSharedGroupDataRequest& Request, TDelegate<void(const struct FServerUpdateSharedGroupDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "UpdateSharedGroupData");

	Params::PlayFabServerAPI_UpdateSharedGroupData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.UpdateUserData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerUpdateUserDataRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerUpdateUserDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::UpdateUserData(const struct FServerUpdateUserDataRequest& Request, TDelegate<void(const struct FServerUpdateUserDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "UpdateUserData");

	Params::PlayFabServerAPI_UpdateUserData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.UpdateUserInternalData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerUpdateUserInternalDataRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerUpdateUserDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::UpdateUserInternalData(const struct FServerUpdateUserInternalDataRequest& Request, TDelegate<void(const struct FServerUpdateUserDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "UpdateUserInternalData");

	Params::PlayFabServerAPI_UpdateUserInternalData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.UpdateUserInventoryItemCustomData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerUpdateUserInventoryItemDataRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerEmptyResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::UpdateUserInventoryItemCustomData(const struct FServerUpdateUserInventoryItemDataRequest& Request, TDelegate<void(const struct FServerEmptyResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "UpdateUserInventoryItemCustomData");

	Params::PlayFabServerAPI_UpdateUserInventoryItemCustomData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.UpdateUserPublisherData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerUpdateUserDataRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerUpdateUserDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::UpdateUserPublisherData(const struct FServerUpdateUserDataRequest& Request, TDelegate<void(const struct FServerUpdateUserDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "UpdateUserPublisherData");

	Params::PlayFabServerAPI_UpdateUserPublisherData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.UpdateUserPublisherInternalData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerUpdateUserInternalDataRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerUpdateUserDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::UpdateUserPublisherInternalData(const struct FServerUpdateUserInternalDataRequest& Request, TDelegate<void(const struct FServerUpdateUserDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "UpdateUserPublisherInternalData");

	Params::PlayFabServerAPI_UpdateUserPublisherInternalData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.UpdateUserPublisherReadOnlyData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerUpdateUserDataRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerUpdateUserDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::UpdateUserPublisherReadOnlyData(const struct FServerUpdateUserDataRequest& Request, TDelegate<void(const struct FServerUpdateUserDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "UpdateUserPublisherReadOnlyData");

	Params::PlayFabServerAPI_UpdateUserPublisherReadOnlyData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.UpdateUserReadOnlyData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerUpdateUserDataRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerUpdateUserDataResult& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::UpdateUserReadOnlyData(const struct FServerUpdateUserDataRequest& Request, TDelegate<void(const struct FServerUpdateUserDataResult& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "UpdateUserReadOnlyData");

	Params::PlayFabServerAPI_UpdateUserReadOnlyData Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.WriteCharacterEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerWriteServerCharacterEventRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerWriteEventResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::WriteCharacterEvent(const struct FServerWriteServerCharacterEventRequest& Request, TDelegate<void(const struct FServerWriteEventResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "WriteCharacterEvent");

	Params::PlayFabServerAPI_WriteCharacterEvent Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.WritePlayerEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerWriteServerPlayerEventRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerWriteEventResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::WritePlayerEvent(const struct FServerWriteServerPlayerEventRequest& Request, TDelegate<void(const struct FServerWriteEventResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "WritePlayerEvent");

	Params::PlayFabServerAPI_WritePlayerEvent Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.WriteTitleEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const struct FServerWriteTitleEventRequest&Request                                                (Parm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FServerWriteEventResponse& Result, class UObject* customData)>OnSuccess                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)>OnFailure                                              (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPlayFabServerAPI*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPlayFabServerAPI* UPlayFabServerAPI::WriteTitleEvent(const struct FServerWriteTitleEventRequest& Request, TDelegate<void(const struct FServerWriteEventResponse& Result, class UObject* customData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* customData)> OnFailure, class UObject* customData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerAPI", "WriteTitleEvent");

	Params::PlayFabServerAPI_WriteTitleEvent Parms{};

	Parms.Request = std::move(Request);
	Parms.OnSuccess = OnSuccess;
	Parms.OnFailure = OnFailure;
	Parms.customData = customData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerAPI.HelperAddCharacterVirtualCurrency
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperAddCharacterVirtualCurrency(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperAddCharacterVirtualCurrency");

	Params::PlayFabServerAPI_HelperAddCharacterVirtualCurrency Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperAddFriend
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperAddFriend(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperAddFriend");

	Params::PlayFabServerAPI_HelperAddFriend Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperAddGenericID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperAddGenericID(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperAddGenericID");

	Params::PlayFabServerAPI_HelperAddGenericID Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperAddPlayerTag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperAddPlayerTag(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperAddPlayerTag");

	Params::PlayFabServerAPI_HelperAddPlayerTag Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperAddSharedGroupMembers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperAddSharedGroupMembers(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperAddSharedGroupMembers");

	Params::PlayFabServerAPI_HelperAddSharedGroupMembers Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperAddUserVirtualCurrency
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperAddUserVirtualCurrency(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperAddUserVirtualCurrency");

	Params::PlayFabServerAPI_HelperAddUserVirtualCurrency Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperAuthenticateSessionTicket
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperAuthenticateSessionTicket(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperAuthenticateSessionTicket");

	Params::PlayFabServerAPI_HelperAuthenticateSessionTicket Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperAwardSteamAchievement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperAwardSteamAchievement(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperAwardSteamAchievement");

	Params::PlayFabServerAPI_HelperAwardSteamAchievement Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperBanUsers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperBanUsers(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperBanUsers");

	Params::PlayFabServerAPI_HelperBanUsers Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperConsumeItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperConsumeItem(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperConsumeItem");

	Params::PlayFabServerAPI_HelperConsumeItem Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperCreateSharedGroup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperCreateSharedGroup(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperCreateSharedGroup");

	Params::PlayFabServerAPI_HelperCreateSharedGroup Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperDeleteCharacterFromUser
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperDeleteCharacterFromUser(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperDeleteCharacterFromUser");

	Params::PlayFabServerAPI_HelperDeleteCharacterFromUser Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperDeletePlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperDeletePlayer(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperDeletePlayer");

	Params::PlayFabServerAPI_HelperDeletePlayer Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperDeletePushNotificationTemplate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperDeletePushNotificationTemplate(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperDeletePushNotificationTemplate");

	Params::PlayFabServerAPI_HelperDeletePushNotificationTemplate Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperDeleteSharedGroup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperDeleteSharedGroup(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperDeleteSharedGroup");

	Params::PlayFabServerAPI_HelperDeleteSharedGroup Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperDeregisterGame
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperDeregisterGame(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperDeregisterGame");

	Params::PlayFabServerAPI_HelperDeregisterGame Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperEvaluateRandomResultTable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperEvaluateRandomResultTable(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperEvaluateRandomResultTable");

	Params::PlayFabServerAPI_HelperEvaluateRandomResultTable Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperExecuteCloudScript
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperExecuteCloudScript(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperExecuteCloudScript");

	Params::PlayFabServerAPI_HelperExecuteCloudScript Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetAllSegments
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetAllSegments(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetAllSegments");

	Params::PlayFabServerAPI_HelperGetAllSegments Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetAllUsersCharacters
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetAllUsersCharacters(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetAllUsersCharacters");

	Params::PlayFabServerAPI_HelperGetAllUsersCharacters Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetCatalogItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetCatalogItems(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetCatalogItems");

	Params::PlayFabServerAPI_HelperGetCatalogItems Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetCharacterData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetCharacterData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetCharacterData");

	Params::PlayFabServerAPI_HelperGetCharacterData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetCharacterInternalData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetCharacterInternalData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetCharacterInternalData");

	Params::PlayFabServerAPI_HelperGetCharacterInternalData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetCharacterInventory
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetCharacterInventory(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetCharacterInventory");

	Params::PlayFabServerAPI_HelperGetCharacterInventory Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetCharacterLeaderboard
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetCharacterLeaderboard(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetCharacterLeaderboard");

	Params::PlayFabServerAPI_HelperGetCharacterLeaderboard Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetCharacterReadOnlyData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetCharacterReadOnlyData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetCharacterReadOnlyData");

	Params::PlayFabServerAPI_HelperGetCharacterReadOnlyData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetCharacterStatistics
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetCharacterStatistics(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetCharacterStatistics");

	Params::PlayFabServerAPI_HelperGetCharacterStatistics Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetContentDownloadUrl
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetContentDownloadUrl(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetContentDownloadUrl");

	Params::PlayFabServerAPI_HelperGetContentDownloadUrl Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetFriendLeaderboard
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetFriendLeaderboard(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetFriendLeaderboard");

	Params::PlayFabServerAPI_HelperGetFriendLeaderboard Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetFriendsList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetFriendsList(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetFriendsList");

	Params::PlayFabServerAPI_HelperGetFriendsList Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetLeaderboard
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetLeaderboard(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetLeaderboard");

	Params::PlayFabServerAPI_HelperGetLeaderboard Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetLeaderboardAroundCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetLeaderboardAroundCharacter(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetLeaderboardAroundCharacter");

	Params::PlayFabServerAPI_HelperGetLeaderboardAroundCharacter Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetLeaderboardAroundUser
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetLeaderboardAroundUser(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetLeaderboardAroundUser");

	Params::PlayFabServerAPI_HelperGetLeaderboardAroundUser Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetLeaderboardForUserCharacters
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetLeaderboardForUserCharacters(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetLeaderboardForUserCharacters");

	Params::PlayFabServerAPI_HelperGetLeaderboardForUserCharacters Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetPlayerCombinedInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetPlayerCombinedInfo(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetPlayerCombinedInfo");

	Params::PlayFabServerAPI_HelperGetPlayerCombinedInfo Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetPlayerProfile
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetPlayerProfile(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetPlayerProfile");

	Params::PlayFabServerAPI_HelperGetPlayerProfile Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetPlayerSegments
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetPlayerSegments(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetPlayerSegments");

	Params::PlayFabServerAPI_HelperGetPlayerSegments Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetPlayersInSegment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetPlayersInSegment(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetPlayersInSegment");

	Params::PlayFabServerAPI_HelperGetPlayersInSegment Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetPlayerStatistics
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetPlayerStatistics(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetPlayerStatistics");

	Params::PlayFabServerAPI_HelperGetPlayerStatistics Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetPlayerStatisticVersions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetPlayerStatisticVersions(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetPlayerStatisticVersions");

	Params::PlayFabServerAPI_HelperGetPlayerStatisticVersions Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetPlayerTags
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetPlayerTags(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetPlayerTags");

	Params::PlayFabServerAPI_HelperGetPlayerTags Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetPlayFabIDsFromFacebookIDs
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetPlayFabIDsFromFacebookIDs(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetPlayFabIDsFromFacebookIDs");

	Params::PlayFabServerAPI_HelperGetPlayFabIDsFromFacebookIDs Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetPlayFabIDsFromFacebookInstantGamesIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetPlayFabIDsFromFacebookInstantGamesIds(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetPlayFabIDsFromFacebookInstantGamesIds");

	Params::PlayFabServerAPI_HelperGetPlayFabIDsFromFacebookInstantGamesIds Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetPlayFabIDsFromGenericIDs
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetPlayFabIDsFromGenericIDs(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetPlayFabIDsFromGenericIDs");

	Params::PlayFabServerAPI_HelperGetPlayFabIDsFromGenericIDs Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetPlayFabIDsFromNintendoServiceAccountIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetPlayFabIDsFromNintendoServiceAccountIds(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetPlayFabIDsFromNintendoServiceAccountIds");

	Params::PlayFabServerAPI_HelperGetPlayFabIDsFromNintendoServiceAccountIds Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetPlayFabIDsFromNintendoSwitchDeviceIds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetPlayFabIDsFromNintendoSwitchDeviceIds(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetPlayFabIDsFromNintendoSwitchDeviceIds");

	Params::PlayFabServerAPI_HelperGetPlayFabIDsFromNintendoSwitchDeviceIds Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetPlayFabIDsFromPSNAccountIDs
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetPlayFabIDsFromPSNAccountIDs(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetPlayFabIDsFromPSNAccountIDs");

	Params::PlayFabServerAPI_HelperGetPlayFabIDsFromPSNAccountIDs Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetPlayFabIDsFromSteamIDs
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetPlayFabIDsFromSteamIDs(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetPlayFabIDsFromSteamIDs");

	Params::PlayFabServerAPI_HelperGetPlayFabIDsFromSteamIDs Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetPlayFabIDsFromTwitchIDs
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetPlayFabIDsFromTwitchIDs(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetPlayFabIDsFromTwitchIDs");

	Params::PlayFabServerAPI_HelperGetPlayFabIDsFromTwitchIDs Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetPlayFabIDsFromXboxLiveIDs
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetPlayFabIDsFromXboxLiveIDs(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetPlayFabIDsFromXboxLiveIDs");

	Params::PlayFabServerAPI_HelperGetPlayFabIDsFromXboxLiveIDs Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetPublisherData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetPublisherData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetPublisherData");

	Params::PlayFabServerAPI_HelperGetPublisherData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetRandomResultTables
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetRandomResultTables(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetRandomResultTables");

	Params::PlayFabServerAPI_HelperGetRandomResultTables Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetServerCustomIDsFromPlayFabIDs
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetServerCustomIDsFromPlayFabIDs(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetServerCustomIDsFromPlayFabIDs");

	Params::PlayFabServerAPI_HelperGetServerCustomIDsFromPlayFabIDs Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetSharedGroupData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetSharedGroupData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetSharedGroupData");

	Params::PlayFabServerAPI_HelperGetSharedGroupData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetStoreItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetStoreItems(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetStoreItems");

	Params::PlayFabServerAPI_HelperGetStoreItems Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetTime(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetTime");

	Params::PlayFabServerAPI_HelperGetTime Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetTitleData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetTitleData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetTitleData");

	Params::PlayFabServerAPI_HelperGetTitleData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetTitleInternalData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetTitleInternalData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetTitleInternalData");

	Params::PlayFabServerAPI_HelperGetTitleInternalData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetTitleNews
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetTitleNews(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetTitleNews");

	Params::PlayFabServerAPI_HelperGetTitleNews Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetUserAccountInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetUserAccountInfo(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetUserAccountInfo");

	Params::PlayFabServerAPI_HelperGetUserAccountInfo Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetUserBans
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetUserBans(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetUserBans");

	Params::PlayFabServerAPI_HelperGetUserBans Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetUserData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetUserData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetUserData");

	Params::PlayFabServerAPI_HelperGetUserData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetUserInternalData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetUserInternalData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetUserInternalData");

	Params::PlayFabServerAPI_HelperGetUserInternalData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetUserInventory
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetUserInventory(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetUserInventory");

	Params::PlayFabServerAPI_HelperGetUserInventory Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetUserPublisherData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetUserPublisherData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetUserPublisherData");

	Params::PlayFabServerAPI_HelperGetUserPublisherData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetUserPublisherInternalData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetUserPublisherInternalData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetUserPublisherInternalData");

	Params::PlayFabServerAPI_HelperGetUserPublisherInternalData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetUserPublisherReadOnlyData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetUserPublisherReadOnlyData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetUserPublisherReadOnlyData");

	Params::PlayFabServerAPI_HelperGetUserPublisherReadOnlyData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGetUserReadOnlyData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGetUserReadOnlyData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGetUserReadOnlyData");

	Params::PlayFabServerAPI_HelperGetUserReadOnlyData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGrantCharacterToUser
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGrantCharacterToUser(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGrantCharacterToUser");

	Params::PlayFabServerAPI_HelperGrantCharacterToUser Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGrantItemsToCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGrantItemsToCharacter(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGrantItemsToCharacter");

	Params::PlayFabServerAPI_HelperGrantItemsToCharacter Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGrantItemsToUser
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGrantItemsToUser(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGrantItemsToUser");

	Params::PlayFabServerAPI_HelperGrantItemsToUser Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperGrantItemsToUsers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperGrantItemsToUsers(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperGrantItemsToUsers");

	Params::PlayFabServerAPI_HelperGrantItemsToUsers Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperLinkPSNAccount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperLinkPSNAccount(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperLinkPSNAccount");

	Params::PlayFabServerAPI_HelperLinkPSNAccount Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperLinkServerCustomId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperLinkServerCustomId(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperLinkServerCustomId");

	Params::PlayFabServerAPI_HelperLinkServerCustomId Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperLinkXboxAccount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperLinkXboxAccount(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperLinkXboxAccount");

	Params::PlayFabServerAPI_HelperLinkXboxAccount Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperLoginWithServerCustomId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperLoginWithServerCustomId(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperLoginWithServerCustomId");

	Params::PlayFabServerAPI_HelperLoginWithServerCustomId Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperLoginWithSteamId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperLoginWithSteamId(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperLoginWithSteamId");

	Params::PlayFabServerAPI_HelperLoginWithSteamId Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperLoginWithXbox
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperLoginWithXbox(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperLoginWithXbox");

	Params::PlayFabServerAPI_HelperLoginWithXbox Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperLoginWithXboxId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperLoginWithXboxId(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperLoginWithXboxId");

	Params::PlayFabServerAPI_HelperLoginWithXboxId Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperModifyItemUses
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperModifyItemUses(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperModifyItemUses");

	Params::PlayFabServerAPI_HelperModifyItemUses Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperMoveItemToCharacterFromCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperMoveItemToCharacterFromCharacter(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperMoveItemToCharacterFromCharacter");

	Params::PlayFabServerAPI_HelperMoveItemToCharacterFromCharacter Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperMoveItemToCharacterFromUser
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperMoveItemToCharacterFromUser(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperMoveItemToCharacterFromUser");

	Params::PlayFabServerAPI_HelperMoveItemToCharacterFromUser Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperMoveItemToUserFromCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperMoveItemToUserFromCharacter(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperMoveItemToUserFromCharacter");

	Params::PlayFabServerAPI_HelperMoveItemToUserFromCharacter Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperNotifyMatchmakerPlayerLeft
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperNotifyMatchmakerPlayerLeft(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperNotifyMatchmakerPlayerLeft");

	Params::PlayFabServerAPI_HelperNotifyMatchmakerPlayerLeft Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperRedeemCoupon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperRedeemCoupon(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperRedeemCoupon");

	Params::PlayFabServerAPI_HelperRedeemCoupon Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperRedeemMatchmakerTicket
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperRedeemMatchmakerTicket(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperRedeemMatchmakerTicket");

	Params::PlayFabServerAPI_HelperRedeemMatchmakerTicket Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperRefreshGameServerInstanceHeartbeat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperRefreshGameServerInstanceHeartbeat(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperRefreshGameServerInstanceHeartbeat");

	Params::PlayFabServerAPI_HelperRefreshGameServerInstanceHeartbeat Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperRegisterGame
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperRegisterGame(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperRegisterGame");

	Params::PlayFabServerAPI_HelperRegisterGame Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperRemoveFriend
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperRemoveFriend(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperRemoveFriend");

	Params::PlayFabServerAPI_HelperRemoveFriend Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperRemoveGenericID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperRemoveGenericID(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperRemoveGenericID");

	Params::PlayFabServerAPI_HelperRemoveGenericID Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperRemovePlayerTag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperRemovePlayerTag(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperRemovePlayerTag");

	Params::PlayFabServerAPI_HelperRemovePlayerTag Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperRemoveSharedGroupMembers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperRemoveSharedGroupMembers(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperRemoveSharedGroupMembers");

	Params::PlayFabServerAPI_HelperRemoveSharedGroupMembers Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperReportPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperReportPlayer(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperReportPlayer");

	Params::PlayFabServerAPI_HelperReportPlayer Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperRevokeAllBansForUser
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperRevokeAllBansForUser(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperRevokeAllBansForUser");

	Params::PlayFabServerAPI_HelperRevokeAllBansForUser Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperRevokeBans
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperRevokeBans(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperRevokeBans");

	Params::PlayFabServerAPI_HelperRevokeBans Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperRevokeInventoryItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperRevokeInventoryItem(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperRevokeInventoryItem");

	Params::PlayFabServerAPI_HelperRevokeInventoryItem Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperRevokeInventoryItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperRevokeInventoryItems(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperRevokeInventoryItems");

	Params::PlayFabServerAPI_HelperRevokeInventoryItems Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperSavePushNotificationTemplate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperSavePushNotificationTemplate(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperSavePushNotificationTemplate");

	Params::PlayFabServerAPI_HelperSavePushNotificationTemplate Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperSendCustomAccountRecoveryEmail
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperSendCustomAccountRecoveryEmail(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperSendCustomAccountRecoveryEmail");

	Params::PlayFabServerAPI_HelperSendCustomAccountRecoveryEmail Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperSendEmailFromTemplate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperSendEmailFromTemplate(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperSendEmailFromTemplate");

	Params::PlayFabServerAPI_HelperSendEmailFromTemplate Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperSendPushNotification
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperSendPushNotification(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperSendPushNotification");

	Params::PlayFabServerAPI_HelperSendPushNotification Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperSendPushNotificationFromTemplate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperSendPushNotificationFromTemplate(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperSendPushNotificationFromTemplate");

	Params::PlayFabServerAPI_HelperSendPushNotificationFromTemplate Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperSetFriendTags
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperSetFriendTags(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperSetFriendTags");

	Params::PlayFabServerAPI_HelperSetFriendTags Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperSetGameServerInstanceData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperSetGameServerInstanceData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperSetGameServerInstanceData");

	Params::PlayFabServerAPI_HelperSetGameServerInstanceData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperSetGameServerInstanceState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperSetGameServerInstanceState(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperSetGameServerInstanceState");

	Params::PlayFabServerAPI_HelperSetGameServerInstanceState Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperSetGameServerInstanceTags
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperSetGameServerInstanceTags(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperSetGameServerInstanceTags");

	Params::PlayFabServerAPI_HelperSetGameServerInstanceTags Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperSetPlayerSecret
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperSetPlayerSecret(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperSetPlayerSecret");

	Params::PlayFabServerAPI_HelperSetPlayerSecret Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperSetPublisherData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperSetPublisherData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperSetPublisherData");

	Params::PlayFabServerAPI_HelperSetPublisherData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperSetTitleData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperSetTitleData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperSetTitleData");

	Params::PlayFabServerAPI_HelperSetTitleData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperSetTitleInternalData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperSetTitleInternalData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperSetTitleInternalData");

	Params::PlayFabServerAPI_HelperSetTitleInternalData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperSubtractCharacterVirtualCurrency
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperSubtractCharacterVirtualCurrency(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperSubtractCharacterVirtualCurrency");

	Params::PlayFabServerAPI_HelperSubtractCharacterVirtualCurrency Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperSubtractUserVirtualCurrency
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperSubtractUserVirtualCurrency(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperSubtractUserVirtualCurrency");

	Params::PlayFabServerAPI_HelperSubtractUserVirtualCurrency Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperUnlinkPSNAccount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperUnlinkPSNAccount(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperUnlinkPSNAccount");

	Params::PlayFabServerAPI_HelperUnlinkPSNAccount Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperUnlinkServerCustomId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperUnlinkServerCustomId(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperUnlinkServerCustomId");

	Params::PlayFabServerAPI_HelperUnlinkServerCustomId Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperUnlinkXboxAccount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperUnlinkXboxAccount(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperUnlinkXboxAccount");

	Params::PlayFabServerAPI_HelperUnlinkXboxAccount Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperUnlockContainerInstance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperUnlockContainerInstance(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperUnlockContainerInstance");

	Params::PlayFabServerAPI_HelperUnlockContainerInstance Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperUnlockContainerItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperUnlockContainerItem(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperUnlockContainerItem");

	Params::PlayFabServerAPI_HelperUnlockContainerItem Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperUpdateAvatarUrl
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperUpdateAvatarUrl(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperUpdateAvatarUrl");

	Params::PlayFabServerAPI_HelperUpdateAvatarUrl Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperUpdateBans
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperUpdateBans(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperUpdateBans");

	Params::PlayFabServerAPI_HelperUpdateBans Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperUpdateCharacterData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperUpdateCharacterData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperUpdateCharacterData");

	Params::PlayFabServerAPI_HelperUpdateCharacterData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperUpdateCharacterInternalData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperUpdateCharacterInternalData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperUpdateCharacterInternalData");

	Params::PlayFabServerAPI_HelperUpdateCharacterInternalData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperUpdateCharacterReadOnlyData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperUpdateCharacterReadOnlyData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperUpdateCharacterReadOnlyData");

	Params::PlayFabServerAPI_HelperUpdateCharacterReadOnlyData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperUpdateCharacterStatistics
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperUpdateCharacterStatistics(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperUpdateCharacterStatistics");

	Params::PlayFabServerAPI_HelperUpdateCharacterStatistics Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperUpdatePlayerStatistics
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperUpdatePlayerStatistics(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperUpdatePlayerStatistics");

	Params::PlayFabServerAPI_HelperUpdatePlayerStatistics Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperUpdateSharedGroupData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperUpdateSharedGroupData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperUpdateSharedGroupData");

	Params::PlayFabServerAPI_HelperUpdateSharedGroupData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperUpdateUserData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperUpdateUserData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperUpdateUserData");

	Params::PlayFabServerAPI_HelperUpdateUserData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperUpdateUserInternalData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperUpdateUserInternalData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperUpdateUserInternalData");

	Params::PlayFabServerAPI_HelperUpdateUserInternalData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperUpdateUserInventoryItemCustomData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperUpdateUserInventoryItemCustomData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperUpdateUserInventoryItemCustomData");

	Params::PlayFabServerAPI_HelperUpdateUserInventoryItemCustomData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperUpdateUserPublisherData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperUpdateUserPublisherData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperUpdateUserPublisherData");

	Params::PlayFabServerAPI_HelperUpdateUserPublisherData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperUpdateUserPublisherInternalData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperUpdateUserPublisherInternalData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperUpdateUserPublisherInternalData");

	Params::PlayFabServerAPI_HelperUpdateUserPublisherInternalData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperUpdateUserPublisherReadOnlyData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperUpdateUserPublisherReadOnlyData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperUpdateUserPublisherReadOnlyData");

	Params::PlayFabServerAPI_HelperUpdateUserPublisherReadOnlyData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperUpdateUserReadOnlyData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperUpdateUserReadOnlyData(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperUpdateUserReadOnlyData");

	Params::PlayFabServerAPI_HelperUpdateUserReadOnlyData Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperWriteCharacterEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperWriteCharacterEvent(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperWriteCharacterEvent");

	Params::PlayFabServerAPI_HelperWriteCharacterEvent Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperWritePlayerEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperWritePlayerEvent(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperWritePlayerEvent");

	Params::PlayFabServerAPI_HelperWritePlayerEvent Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerAPI.HelperWriteTitleEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FPlayFabBaseModel&         response                                               (Parm, NativeAccessSpecifierPublic)
// class UObject*                          customData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    successful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabServerAPI::HelperWriteTitleEvent(const struct FPlayFabBaseModel& response, class UObject* customData, bool successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayFabServerAPI", "HelperWriteTitleEvent");

	Params::PlayFabServerAPI_HelperWriteTitleEvent Parms{};

	Parms.response = std::move(response);
	Parms.customData = customData;
	Parms.successful = successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeAddPlayerTagResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerAddPlayerTagResult        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FServerAddPlayerTagResult UPlayFabServerModelDecoder::decodeAddPlayerTagResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeAddPlayerTagResultResponse");

	Params::PlayFabServerModelDecoder_decodeAddPlayerTagResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeAddSharedGroupMembersResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerAddSharedGroupMembersResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FServerAddSharedGroupMembersResult UPlayFabServerModelDecoder::decodeAddSharedGroupMembersResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeAddSharedGroupMembersResultResponse");

	Params::PlayFabServerModelDecoder_decodeAddSharedGroupMembersResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeAuthenticateSessionTicketResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerAuthenticateSessionTicketResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FServerAuthenticateSessionTicketResult UPlayFabServerModelDecoder::decodeAuthenticateSessionTicketResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeAuthenticateSessionTicketResultResponse");

	Params::PlayFabServerModelDecoder_decodeAuthenticateSessionTicketResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeAwardSteamAchievementResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerAwardSteamAchievementResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerAwardSteamAchievementResult UPlayFabServerModelDecoder::decodeAwardSteamAchievementResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeAwardSteamAchievementResultResponse");

	Params::PlayFabServerModelDecoder_decodeAwardSteamAchievementResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeBanUsersResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerBanUsersResult            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerBanUsersResult UPlayFabServerModelDecoder::decodeBanUsersResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeBanUsersResultResponse");

	Params::PlayFabServerModelDecoder_decodeBanUsersResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeConsumeItemResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerConsumeItemResult         ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerConsumeItemResult UPlayFabServerModelDecoder::decodeConsumeItemResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeConsumeItemResultResponse");

	Params::PlayFabServerModelDecoder_decodeConsumeItemResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeCreateSharedGroupResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerCreateSharedGroupResult   ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerCreateSharedGroupResult UPlayFabServerModelDecoder::decodeCreateSharedGroupResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeCreateSharedGroupResultResponse");

	Params::PlayFabServerModelDecoder_decodeCreateSharedGroupResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeDeleteCharacterFromUserResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerDeleteCharacterFromUserResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FServerDeleteCharacterFromUserResult UPlayFabServerModelDecoder::decodeDeleteCharacterFromUserResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeDeleteCharacterFromUserResultResponse");

	Params::PlayFabServerModelDecoder_decodeDeleteCharacterFromUserResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeDeletePlayerResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerDeletePlayerResult        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FServerDeletePlayerResult UPlayFabServerModelDecoder::decodeDeletePlayerResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeDeletePlayerResultResponse");

	Params::PlayFabServerModelDecoder_decodeDeletePlayerResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeDeletePushNotificationTemplateResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerDeletePushNotificationTemplateResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FServerDeletePushNotificationTemplateResult UPlayFabServerModelDecoder::decodeDeletePushNotificationTemplateResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeDeletePushNotificationTemplateResultResponse");

	Params::PlayFabServerModelDecoder_decodeDeletePushNotificationTemplateResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeDeregisterGameResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerDeregisterGameResponse    ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FServerDeregisterGameResponse UPlayFabServerModelDecoder::decodeDeregisterGameResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeDeregisterGameResponseResponse");

	Params::PlayFabServerModelDecoder_decodeDeregisterGameResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeEmptyResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerEmptyResponse             ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FServerEmptyResponse UPlayFabServerModelDecoder::decodeEmptyResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeEmptyResponseResponse");

	Params::PlayFabServerModelDecoder_decodeEmptyResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeEmptyResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerEmptyResult               ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FServerEmptyResult UPlayFabServerModelDecoder::decodeEmptyResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeEmptyResultResponse");

	Params::PlayFabServerModelDecoder_decodeEmptyResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeEvaluateRandomResultTableResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerEvaluateRandomResultTableResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerEvaluateRandomResultTableResult UPlayFabServerModelDecoder::decodeEvaluateRandomResultTableResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeEvaluateRandomResultTableResultResponse");

	Params::PlayFabServerModelDecoder_decodeEvaluateRandomResultTableResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeExecuteCloudScriptResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerExecuteCloudScriptResult  ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerExecuteCloudScriptResult UPlayFabServerModelDecoder::decodeExecuteCloudScriptResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeExecuteCloudScriptResultResponse");

	Params::PlayFabServerModelDecoder_decodeExecuteCloudScriptResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeGetAllSegmentsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerGetAllSegmentsResult      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerGetAllSegmentsResult UPlayFabServerModelDecoder::decodeGetAllSegmentsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeGetAllSegmentsResultResponse");

	Params::PlayFabServerModelDecoder_decodeGetAllSegmentsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeGetCatalogItemsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerGetCatalogItemsResult     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerGetCatalogItemsResult UPlayFabServerModelDecoder::decodeGetCatalogItemsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeGetCatalogItemsResultResponse");

	Params::PlayFabServerModelDecoder_decodeGetCatalogItemsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeGetCharacterDataResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerGetCharacterDataResult    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerGetCharacterDataResult UPlayFabServerModelDecoder::decodeGetCharacterDataResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeGetCharacterDataResultResponse");

	Params::PlayFabServerModelDecoder_decodeGetCharacterDataResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeGetCharacterInventoryResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerGetCharacterInventoryResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerGetCharacterInventoryResult UPlayFabServerModelDecoder::decodeGetCharacterInventoryResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeGetCharacterInventoryResultResponse");

	Params::PlayFabServerModelDecoder_decodeGetCharacterInventoryResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeGetCharacterLeaderboardResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerGetCharacterLeaderboardResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerGetCharacterLeaderboardResult UPlayFabServerModelDecoder::decodeGetCharacterLeaderboardResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeGetCharacterLeaderboardResultResponse");

	Params::PlayFabServerModelDecoder_decodeGetCharacterLeaderboardResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeGetCharacterStatisticsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerGetCharacterStatisticsResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerGetCharacterStatisticsResult UPlayFabServerModelDecoder::decodeGetCharacterStatisticsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeGetCharacterStatisticsResultResponse");

	Params::PlayFabServerModelDecoder_decodeGetCharacterStatisticsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeGetContentDownloadUrlResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerGetContentDownloadUrlResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerGetContentDownloadUrlResult UPlayFabServerModelDecoder::decodeGetContentDownloadUrlResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeGetContentDownloadUrlResultResponse");

	Params::PlayFabServerModelDecoder_decodeGetContentDownloadUrlResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeGetFriendsListResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerGetFriendsListResult      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerGetFriendsListResult UPlayFabServerModelDecoder::decodeGetFriendsListResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeGetFriendsListResultResponse");

	Params::PlayFabServerModelDecoder_decodeGetFriendsListResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeGetLeaderboardAroundCharacterResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerGetLeaderboardAroundCharacterResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerGetLeaderboardAroundCharacterResult UPlayFabServerModelDecoder::decodeGetLeaderboardAroundCharacterResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeGetLeaderboardAroundCharacterResultResponse");

	Params::PlayFabServerModelDecoder_decodeGetLeaderboardAroundCharacterResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeGetLeaderboardAroundUserResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerGetLeaderboardAroundUserResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerGetLeaderboardAroundUserResult UPlayFabServerModelDecoder::decodeGetLeaderboardAroundUserResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeGetLeaderboardAroundUserResultResponse");

	Params::PlayFabServerModelDecoder_decodeGetLeaderboardAroundUserResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeGetLeaderboardForUsersCharactersResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerGetLeaderboardForUsersCharactersResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerGetLeaderboardForUsersCharactersResult UPlayFabServerModelDecoder::decodeGetLeaderboardForUsersCharactersResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeGetLeaderboardForUsersCharactersResultResponse");

	Params::PlayFabServerModelDecoder_decodeGetLeaderboardForUsersCharactersResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeGetLeaderboardResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerGetLeaderboardResult      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerGetLeaderboardResult UPlayFabServerModelDecoder::decodeGetLeaderboardResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeGetLeaderboardResultResponse");

	Params::PlayFabServerModelDecoder_decodeGetLeaderboardResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayerCombinedInfoResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerGetPlayerCombinedInfoResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerGetPlayerCombinedInfoResult UPlayFabServerModelDecoder::decodeGetPlayerCombinedInfoResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeGetPlayerCombinedInfoResultResponse");

	Params::PlayFabServerModelDecoder_decodeGetPlayerCombinedInfoResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayerProfileResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerGetPlayerProfileResult    ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FServerGetPlayerProfileResult UPlayFabServerModelDecoder::decodeGetPlayerProfileResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeGetPlayerProfileResultResponse");

	Params::PlayFabServerModelDecoder_decodeGetPlayerProfileResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayerSegmentsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerGetPlayerSegmentsResult   ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerGetPlayerSegmentsResult UPlayFabServerModelDecoder::decodeGetPlayerSegmentsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeGetPlayerSegmentsResultResponse");

	Params::PlayFabServerModelDecoder_decodeGetPlayerSegmentsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayersInSegmentResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerGetPlayersInSegmentResult ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerGetPlayersInSegmentResult UPlayFabServerModelDecoder::decodeGetPlayersInSegmentResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeGetPlayersInSegmentResultResponse");

	Params::PlayFabServerModelDecoder_decodeGetPlayersInSegmentResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayerStatisticsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerGetPlayerStatisticsResult ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerGetPlayerStatisticsResult UPlayFabServerModelDecoder::decodeGetPlayerStatisticsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeGetPlayerStatisticsResultResponse");

	Params::PlayFabServerModelDecoder_decodeGetPlayerStatisticsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayerStatisticVersionsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerGetPlayerStatisticVersionsResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerGetPlayerStatisticVersionsResult UPlayFabServerModelDecoder::decodeGetPlayerStatisticVersionsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeGetPlayerStatisticVersionsResultResponse");

	Params::PlayFabServerModelDecoder_decodeGetPlayerStatisticVersionsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayerTagsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerGetPlayerTagsResult       ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerGetPlayerTagsResult UPlayFabServerModelDecoder::decodeGetPlayerTagsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeGetPlayerTagsResultResponse");

	Params::PlayFabServerModelDecoder_decodeGetPlayerTagsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayFabIDsFromFacebookIDsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerGetPlayFabIDsFromFacebookIDsResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerGetPlayFabIDsFromFacebookIDsResult UPlayFabServerModelDecoder::decodeGetPlayFabIDsFromFacebookIDsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeGetPlayFabIDsFromFacebookIDsResultResponse");

	Params::PlayFabServerModelDecoder_decodeGetPlayFabIDsFromFacebookIDsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerGetPlayFabIDsFromFacebookInstantGamesIdsResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerGetPlayFabIDsFromFacebookInstantGamesIdsResult UPlayFabServerModelDecoder::decodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse");

	Params::PlayFabServerModelDecoder_decodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayFabIDsFromGenericIDsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerGetPlayFabIDsFromGenericIDsResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerGetPlayFabIDsFromGenericIDsResult UPlayFabServerModelDecoder::decodeGetPlayFabIDsFromGenericIDsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeGetPlayFabIDsFromGenericIDsResultResponse");

	Params::PlayFabServerModelDecoder_decodeGetPlayFabIDsFromGenericIDsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerGetPlayFabIDsFromNintendoServiceAccountIdsResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerGetPlayFabIDsFromNintendoServiceAccountIdsResult UPlayFabServerModelDecoder::decodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse");

	Params::PlayFabServerModelDecoder_decodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerGetPlayFabIDsFromNintendoSwitchDeviceIdsResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerGetPlayFabIDsFromNintendoSwitchDeviceIdsResult UPlayFabServerModelDecoder::decodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse");

	Params::PlayFabServerModelDecoder_decodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayFabIDsFromPSNAccountIDsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerGetPlayFabIDsFromPSNAccountIDsResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerGetPlayFabIDsFromPSNAccountIDsResult UPlayFabServerModelDecoder::decodeGetPlayFabIDsFromPSNAccountIDsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeGetPlayFabIDsFromPSNAccountIDsResultResponse");

	Params::PlayFabServerModelDecoder_decodeGetPlayFabIDsFromPSNAccountIDsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayFabIDsFromSteamIDsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerGetPlayFabIDsFromSteamIDsResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerGetPlayFabIDsFromSteamIDsResult UPlayFabServerModelDecoder::decodeGetPlayFabIDsFromSteamIDsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeGetPlayFabIDsFromSteamIDsResultResponse");

	Params::PlayFabServerModelDecoder_decodeGetPlayFabIDsFromSteamIDsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayFabIDsFromTwitchIDsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerGetPlayFabIDsFromTwitchIDsResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerGetPlayFabIDsFromTwitchIDsResult UPlayFabServerModelDecoder::decodeGetPlayFabIDsFromTwitchIDsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeGetPlayFabIDsFromTwitchIDsResultResponse");

	Params::PlayFabServerModelDecoder_decodeGetPlayFabIDsFromTwitchIDsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeGetPlayFabIDsFromXboxLiveIDsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerGetPlayFabIDsFromXboxLiveIDsResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerGetPlayFabIDsFromXboxLiveIDsResult UPlayFabServerModelDecoder::decodeGetPlayFabIDsFromXboxLiveIDsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeGetPlayFabIDsFromXboxLiveIDsResultResponse");

	Params::PlayFabServerModelDecoder_decodeGetPlayFabIDsFromXboxLiveIDsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeGetPublisherDataResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerGetPublisherDataResult    ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FServerGetPublisherDataResult UPlayFabServerModelDecoder::decodeGetPublisherDataResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeGetPublisherDataResultResponse");

	Params::PlayFabServerModelDecoder_decodeGetPublisherDataResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeGetRandomResultTablesResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerGetRandomResultTablesResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FServerGetRandomResultTablesResult UPlayFabServerModelDecoder::decodeGetRandomResultTablesResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeGetRandomResultTablesResultResponse");

	Params::PlayFabServerModelDecoder_decodeGetRandomResultTablesResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeGetServerCustomIDsFromPlayFabIDsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerGetServerCustomIDsFromPlayFabIDsResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerGetServerCustomIDsFromPlayFabIDsResult UPlayFabServerModelDecoder::decodeGetServerCustomIDsFromPlayFabIDsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeGetServerCustomIDsFromPlayFabIDsResultResponse");

	Params::PlayFabServerModelDecoder_decodeGetServerCustomIDsFromPlayFabIDsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeGetSharedGroupDataResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerGetSharedGroupDataResult  ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerGetSharedGroupDataResult UPlayFabServerModelDecoder::decodeGetSharedGroupDataResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeGetSharedGroupDataResultResponse");

	Params::PlayFabServerModelDecoder_decodeGetSharedGroupDataResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeGetStoreItemsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerGetStoreItemsResult       ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerGetStoreItemsResult UPlayFabServerModelDecoder::decodeGetStoreItemsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeGetStoreItemsResultResponse");

	Params::PlayFabServerModelDecoder_decodeGetStoreItemsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeGetTimeResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerGetTimeResult             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerGetTimeResult UPlayFabServerModelDecoder::decodeGetTimeResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeGetTimeResultResponse");

	Params::PlayFabServerModelDecoder_decodeGetTimeResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeGetTitleDataResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerGetTitleDataResult        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FServerGetTitleDataResult UPlayFabServerModelDecoder::decodeGetTitleDataResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeGetTitleDataResultResponse");

	Params::PlayFabServerModelDecoder_decodeGetTitleDataResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeGetTitleNewsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerGetTitleNewsResult        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerGetTitleNewsResult UPlayFabServerModelDecoder::decodeGetTitleNewsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeGetTitleNewsResultResponse");

	Params::PlayFabServerModelDecoder_decodeGetTitleNewsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeGetUserAccountInfoResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerGetUserAccountInfoResult  ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FServerGetUserAccountInfoResult UPlayFabServerModelDecoder::decodeGetUserAccountInfoResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeGetUserAccountInfoResultResponse");

	Params::PlayFabServerModelDecoder_decodeGetUserAccountInfoResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeGetUserBansResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerGetUserBansResult         ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerGetUserBansResult UPlayFabServerModelDecoder::decodeGetUserBansResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeGetUserBansResultResponse");

	Params::PlayFabServerModelDecoder_decodeGetUserBansResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeGetUserDataResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerGetUserDataResult         ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerGetUserDataResult UPlayFabServerModelDecoder::decodeGetUserDataResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeGetUserDataResultResponse");

	Params::PlayFabServerModelDecoder_decodeGetUserDataResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeGetUserInventoryResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerGetUserInventoryResult    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerGetUserInventoryResult UPlayFabServerModelDecoder::decodeGetUserInventoryResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeGetUserInventoryResultResponse");

	Params::PlayFabServerModelDecoder_decodeGetUserInventoryResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeGrantCharacterToUserResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerGrantCharacterToUserResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerGrantCharacterToUserResult UPlayFabServerModelDecoder::decodeGrantCharacterToUserResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeGrantCharacterToUserResultResponse");

	Params::PlayFabServerModelDecoder_decodeGrantCharacterToUserResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeGrantItemsToCharacterResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerGrantItemsToCharacterResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerGrantItemsToCharacterResult UPlayFabServerModelDecoder::decodeGrantItemsToCharacterResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeGrantItemsToCharacterResultResponse");

	Params::PlayFabServerModelDecoder_decodeGrantItemsToCharacterResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeGrantItemsToUserResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerGrantItemsToUserResult    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerGrantItemsToUserResult UPlayFabServerModelDecoder::decodeGrantItemsToUserResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeGrantItemsToUserResultResponse");

	Params::PlayFabServerModelDecoder_decodeGrantItemsToUserResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeGrantItemsToUsersResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerGrantItemsToUsersResult   ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerGrantItemsToUsersResult UPlayFabServerModelDecoder::decodeGrantItemsToUsersResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeGrantItemsToUsersResultResponse");

	Params::PlayFabServerModelDecoder_decodeGrantItemsToUsersResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeLinkPSNAccountResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerLinkPSNAccountResult      ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FServerLinkPSNAccountResult UPlayFabServerModelDecoder::decodeLinkPSNAccountResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeLinkPSNAccountResultResponse");

	Params::PlayFabServerModelDecoder_decodeLinkPSNAccountResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeLinkServerCustomIdResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerLinkServerCustomIdResult  ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FServerLinkServerCustomIdResult UPlayFabServerModelDecoder::decodeLinkServerCustomIdResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeLinkServerCustomIdResultResponse");

	Params::PlayFabServerModelDecoder_decodeLinkServerCustomIdResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeLinkXboxAccountResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerLinkXboxAccountResult     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FServerLinkXboxAccountResult UPlayFabServerModelDecoder::decodeLinkXboxAccountResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeLinkXboxAccountResultResponse");

	Params::PlayFabServerModelDecoder_decodeLinkXboxAccountResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeListUsersCharactersResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerListUsersCharactersResult ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerListUsersCharactersResult UPlayFabServerModelDecoder::decodeListUsersCharactersResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeListUsersCharactersResultResponse");

	Params::PlayFabServerModelDecoder_decodeListUsersCharactersResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeModifyCharacterVirtualCurrencyResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerModifyCharacterVirtualCurrencyResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerModifyCharacterVirtualCurrencyResult UPlayFabServerModelDecoder::decodeModifyCharacterVirtualCurrencyResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeModifyCharacterVirtualCurrencyResultResponse");

	Params::PlayFabServerModelDecoder_decodeModifyCharacterVirtualCurrencyResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeModifyItemUsesResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerModifyItemUsesResult      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerModifyItemUsesResult UPlayFabServerModelDecoder::decodeModifyItemUsesResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeModifyItemUsesResultResponse");

	Params::PlayFabServerModelDecoder_decodeModifyItemUsesResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeModifyUserVirtualCurrencyResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerModifyUserVirtualCurrencyResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerModifyUserVirtualCurrencyResult UPlayFabServerModelDecoder::decodeModifyUserVirtualCurrencyResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeModifyUserVirtualCurrencyResultResponse");

	Params::PlayFabServerModelDecoder_decodeModifyUserVirtualCurrencyResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeMoveItemToCharacterFromCharacterResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerMoveItemToCharacterFromCharacterResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FServerMoveItemToCharacterFromCharacterResult UPlayFabServerModelDecoder::decodeMoveItemToCharacterFromCharacterResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeMoveItemToCharacterFromCharacterResultResponse");

	Params::PlayFabServerModelDecoder_decodeMoveItemToCharacterFromCharacterResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeMoveItemToCharacterFromUserResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerMoveItemToCharacterFromUserResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FServerMoveItemToCharacterFromUserResult UPlayFabServerModelDecoder::decodeMoveItemToCharacterFromUserResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeMoveItemToCharacterFromUserResultResponse");

	Params::PlayFabServerModelDecoder_decodeMoveItemToCharacterFromUserResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeMoveItemToUserFromCharacterResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerMoveItemToUserFromCharacterResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FServerMoveItemToUserFromCharacterResult UPlayFabServerModelDecoder::decodeMoveItemToUserFromCharacterResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeMoveItemToUserFromCharacterResultResponse");

	Params::PlayFabServerModelDecoder_decodeMoveItemToUserFromCharacterResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeNotifyMatchmakerPlayerLeftResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerNotifyMatchmakerPlayerLeftResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FServerNotifyMatchmakerPlayerLeftResult UPlayFabServerModelDecoder::decodeNotifyMatchmakerPlayerLeftResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeNotifyMatchmakerPlayerLeftResultResponse");

	Params::PlayFabServerModelDecoder_decodeNotifyMatchmakerPlayerLeftResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeRedeemCouponResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerRedeemCouponResult        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerRedeemCouponResult UPlayFabServerModelDecoder::decodeRedeemCouponResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeRedeemCouponResultResponse");

	Params::PlayFabServerModelDecoder_decodeRedeemCouponResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeRedeemMatchmakerTicketResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerRedeemMatchmakerTicketResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerRedeemMatchmakerTicketResult UPlayFabServerModelDecoder::decodeRedeemMatchmakerTicketResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeRedeemMatchmakerTicketResultResponse");

	Params::PlayFabServerModelDecoder_decodeRedeemMatchmakerTicketResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeRefreshGameServerInstanceHeartbeatResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerRefreshGameServerInstanceHeartbeatResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FServerRefreshGameServerInstanceHeartbeatResult UPlayFabServerModelDecoder::decodeRefreshGameServerInstanceHeartbeatResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeRefreshGameServerInstanceHeartbeatResultResponse");

	Params::PlayFabServerModelDecoder_decodeRefreshGameServerInstanceHeartbeatResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeRegisterGameResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerRegisterGameResponse      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerRegisterGameResponse UPlayFabServerModelDecoder::decodeRegisterGameResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeRegisterGameResponseResponse");

	Params::PlayFabServerModelDecoder_decodeRegisterGameResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeRemovePlayerTagResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerRemovePlayerTagResult     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FServerRemovePlayerTagResult UPlayFabServerModelDecoder::decodeRemovePlayerTagResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeRemovePlayerTagResultResponse");

	Params::PlayFabServerModelDecoder_decodeRemovePlayerTagResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeRemoveSharedGroupMembersResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerRemoveSharedGroupMembersResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FServerRemoveSharedGroupMembersResult UPlayFabServerModelDecoder::decodeRemoveSharedGroupMembersResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeRemoveSharedGroupMembersResultResponse");

	Params::PlayFabServerModelDecoder_decodeRemoveSharedGroupMembersResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeReportPlayerServerResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerReportPlayerServerResult  ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FServerReportPlayerServerResult UPlayFabServerModelDecoder::decodeReportPlayerServerResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeReportPlayerServerResultResponse");

	Params::PlayFabServerModelDecoder_decodeReportPlayerServerResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeRevokeAllBansForUserResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerRevokeAllBansForUserResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerRevokeAllBansForUserResult UPlayFabServerModelDecoder::decodeRevokeAllBansForUserResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeRevokeAllBansForUserResultResponse");

	Params::PlayFabServerModelDecoder_decodeRevokeAllBansForUserResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeRevokeBansResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerRevokeBansResult          ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerRevokeBansResult UPlayFabServerModelDecoder::decodeRevokeBansResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeRevokeBansResultResponse");

	Params::PlayFabServerModelDecoder_decodeRevokeBansResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeRevokeInventoryItemsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerRevokeInventoryItemsResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerRevokeInventoryItemsResult UPlayFabServerModelDecoder::decodeRevokeInventoryItemsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeRevokeInventoryItemsResultResponse");

	Params::PlayFabServerModelDecoder_decodeRevokeInventoryItemsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeRevokeInventoryResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerRevokeInventoryResult     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FServerRevokeInventoryResult UPlayFabServerModelDecoder::decodeRevokeInventoryResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeRevokeInventoryResultResponse");

	Params::PlayFabServerModelDecoder_decodeRevokeInventoryResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeSavePushNotificationTemplateResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerSavePushNotificationTemplateResultReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerSavePushNotificationTemplateResult UPlayFabServerModelDecoder::decodeSavePushNotificationTemplateResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeSavePushNotificationTemplateResultResponse");

	Params::PlayFabServerModelDecoder_decodeSavePushNotificationTemplateResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeSendCustomAccountRecoveryEmailResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerSendCustomAccountRecoveryEmailResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FServerSendCustomAccountRecoveryEmailResult UPlayFabServerModelDecoder::decodeSendCustomAccountRecoveryEmailResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeSendCustomAccountRecoveryEmailResultResponse");

	Params::PlayFabServerModelDecoder_decodeSendCustomAccountRecoveryEmailResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeSendEmailFromTemplateResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerSendEmailFromTemplateResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FServerSendEmailFromTemplateResult UPlayFabServerModelDecoder::decodeSendEmailFromTemplateResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeSendEmailFromTemplateResultResponse");

	Params::PlayFabServerModelDecoder_decodeSendEmailFromTemplateResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeSendPushNotificationResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerSendPushNotificationResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FServerSendPushNotificationResult UPlayFabServerModelDecoder::decodeSendPushNotificationResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeSendPushNotificationResultResponse");

	Params::PlayFabServerModelDecoder_decodeSendPushNotificationResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeServerLoginResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerServerLoginResult         ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerServerLoginResult UPlayFabServerModelDecoder::decodeServerLoginResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeServerLoginResultResponse");

	Params::PlayFabServerModelDecoder_decodeServerLoginResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeSetGameServerInstanceDataResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerSetGameServerInstanceDataResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FServerSetGameServerInstanceDataResult UPlayFabServerModelDecoder::decodeSetGameServerInstanceDataResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeSetGameServerInstanceDataResultResponse");

	Params::PlayFabServerModelDecoder_decodeSetGameServerInstanceDataResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeSetGameServerInstanceStateResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerSetGameServerInstanceStateResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FServerSetGameServerInstanceStateResult UPlayFabServerModelDecoder::decodeSetGameServerInstanceStateResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeSetGameServerInstanceStateResultResponse");

	Params::PlayFabServerModelDecoder_decodeSetGameServerInstanceStateResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeSetGameServerInstanceTagsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerSetGameServerInstanceTagsResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FServerSetGameServerInstanceTagsResult UPlayFabServerModelDecoder::decodeSetGameServerInstanceTagsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeSetGameServerInstanceTagsResultResponse");

	Params::PlayFabServerModelDecoder_decodeSetGameServerInstanceTagsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeSetPlayerSecretResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerSetPlayerSecretResult     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FServerSetPlayerSecretResult UPlayFabServerModelDecoder::decodeSetPlayerSecretResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeSetPlayerSecretResultResponse");

	Params::PlayFabServerModelDecoder_decodeSetPlayerSecretResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeSetPublisherDataResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerSetPublisherDataResult    ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FServerSetPublisherDataResult UPlayFabServerModelDecoder::decodeSetPublisherDataResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeSetPublisherDataResultResponse");

	Params::PlayFabServerModelDecoder_decodeSetPublisherDataResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeSetTitleDataResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerSetTitleDataResult        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FServerSetTitleDataResult UPlayFabServerModelDecoder::decodeSetTitleDataResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeSetTitleDataResultResponse");

	Params::PlayFabServerModelDecoder_decodeSetTitleDataResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeUnlinkPSNAccountResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerUnlinkPSNAccountResult    ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FServerUnlinkPSNAccountResult UPlayFabServerModelDecoder::decodeUnlinkPSNAccountResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeUnlinkPSNAccountResultResponse");

	Params::PlayFabServerModelDecoder_decodeUnlinkPSNAccountResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeUnlinkServerCustomIdResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerUnlinkServerCustomIdResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FServerUnlinkServerCustomIdResult UPlayFabServerModelDecoder::decodeUnlinkServerCustomIdResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeUnlinkServerCustomIdResultResponse");

	Params::PlayFabServerModelDecoder_decodeUnlinkServerCustomIdResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeUnlinkXboxAccountResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerUnlinkXboxAccountResult   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FServerUnlinkXboxAccountResult UPlayFabServerModelDecoder::decodeUnlinkXboxAccountResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeUnlinkXboxAccountResultResponse");

	Params::PlayFabServerModelDecoder_decodeUnlinkXboxAccountResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeUnlockContainerItemResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerUnlockContainerItemResult ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerUnlockContainerItemResult UPlayFabServerModelDecoder::decodeUnlockContainerItemResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeUnlockContainerItemResultResponse");

	Params::PlayFabServerModelDecoder_decodeUnlockContainerItemResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeUpdateBansResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerUpdateBansResult          ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerUpdateBansResult UPlayFabServerModelDecoder::decodeUpdateBansResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeUpdateBansResultResponse");

	Params::PlayFabServerModelDecoder_decodeUpdateBansResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeUpdateCharacterDataResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerUpdateCharacterDataResult ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FServerUpdateCharacterDataResult UPlayFabServerModelDecoder::decodeUpdateCharacterDataResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeUpdateCharacterDataResultResponse");

	Params::PlayFabServerModelDecoder_decodeUpdateCharacterDataResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeUpdateCharacterStatisticsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerUpdateCharacterStatisticsResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FServerUpdateCharacterStatisticsResult UPlayFabServerModelDecoder::decodeUpdateCharacterStatisticsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeUpdateCharacterStatisticsResultResponse");

	Params::PlayFabServerModelDecoder_decodeUpdateCharacterStatisticsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeUpdatePlayerStatisticsResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerUpdatePlayerStatisticsResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FServerUpdatePlayerStatisticsResult UPlayFabServerModelDecoder::decodeUpdatePlayerStatisticsResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeUpdatePlayerStatisticsResultResponse");

	Params::PlayFabServerModelDecoder_decodeUpdatePlayerStatisticsResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeUpdateSharedGroupDataResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerUpdateSharedGroupDataResultReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FServerUpdateSharedGroupDataResult UPlayFabServerModelDecoder::decodeUpdateSharedGroupDataResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeUpdateSharedGroupDataResultResponse");

	Params::PlayFabServerModelDecoder_decodeUpdateSharedGroupDataResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeUpdateUserDataResultResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerUpdateUserDataResult      ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FServerUpdateUserDataResult UPlayFabServerModelDecoder::decodeUpdateUserDataResultResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeUpdateUserDataResultResponse");

	Params::PlayFabServerModelDecoder_decodeUpdateUserDataResultResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabServerModelDecoder.decodeWriteEventResponseResponse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPlayFabJsonObject*               response                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FServerWriteEventResponse        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FServerWriteEventResponse UPlayFabServerModelDecoder::decodeWriteEventResponseResponse(class UPlayFabJsonObject* response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabServerModelDecoder", "decodeWriteEventResponseResponse");

	Params::PlayFabServerModelDecoder_decodeWriteEventResponseResponse Parms{};

	Parms.response = response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabUtilities.getErrorText
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   code                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UPlayFabUtilities::getErrorText(int32 code)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabUtilities", "getErrorText");

	Params::PlayFabUtilities_getErrorText Parms{};

	Parms.code = code;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabUtilities.getPhotonAppId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    Realtime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Chat                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Turnbased                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UPlayFabUtilities::getPhotonAppId(bool Realtime, bool Chat, bool Turnbased)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabUtilities", "getPhotonAppId");

	Params::PlayFabUtilities_getPhotonAppId Parms{};

	Parms.Realtime = Realtime;
	Parms.Chat = Chat;
	Parms.Turnbased = Turnbased;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PlayFab.PlayFabUtilities.setPlayFabSettings
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FString&                    GameTitleId                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    PlayFabSecretApiKey                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    ProductionUrl                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    PhotonRealtimeAppId                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    PhotonTurnbasedAppId                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    PhotonChatAppId                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayFabUtilities::setPlayFabSettings(const class FString& GameTitleId, const class FString& PlayFabSecretApiKey, const class FString& ProductionUrl, const class FString& PhotonRealtimeAppId, const class FString& PhotonTurnbasedAppId, const class FString& PhotonChatAppId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PlayFabUtilities", "setPlayFabSettings");

	Params::PlayFabUtilities_setPlayFabSettings Parms{};

	Parms.GameTitleId = std::move(GameTitleId);
	Parms.PlayFabSecretApiKey = std::move(PlayFabSecretApiKey);
	Parms.ProductionUrl = std::move(ProductionUrl);
	Parms.PhotonRealtimeAppId = std::move(PhotonRealtimeAppId);
	Parms.PhotonTurnbasedAppId = std::move(PhotonTurnbasedAppId);
	Parms.PhotonChatAppId = std::move(PhotonChatAppId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

