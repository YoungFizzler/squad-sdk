#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SquadGameInstance

#include "Basic.hpp"

#include "BP_SquadGameInstance_classes.hpp"
#include "BP_SquadGameInstance_parameters.hpp"


namespace SDK
{

// Function BP_SquadGameInstance.BP_SquadGameInstance_C.ExecuteUbergraph_BP_SquadGameInstance
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SquadGameInstance_C::ExecuteUbergraph_BP_SquadGameInstance(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SquadGameInstance_C", "ExecuteUbergraph_BP_SquadGameInstance");

	Params::BP_SquadGameInstance_C_ExecuteUbergraph_BP_SquadGameInstance Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SquadGameInstance.BP_SquadGameInstance_C.PostInit
// (Event, Protected, BlueprintEvent)

void UBP_SquadGameInstance_C::PostInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SquadGameInstance_C", "PostInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SquadGameInstance.BP_SquadGameInstance_C.OnOnlineServicesInitialized
// (BlueprintCallable, BlueprintEvent)

void UBP_SquadGameInstance_C::OnOnlineServicesInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SquadGameInstance_C", "OnOnlineServicesInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SquadGameInstance.BP_SquadGameInstance_C.DownloadingModsFinished
// (BlueprintCallable, BlueprintEvent)

void UBP_SquadGameInstance_C::DownloadingModsFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SquadGameInstance_C", "DownloadingModsFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SquadGameInstance.BP_SquadGameInstance_C.OnPasswordSuccess
// (BlueprintCallable, BlueprintEvent)

void UBP_SquadGameInstance_C::OnPasswordSuccess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SquadGameInstance_C", "OnPasswordSuccess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SquadGameInstance.BP_SquadGameInstance_C.WarningAcknowledgedHandler
// (BlueprintCallable, BlueprintEvent)

void UBP_SquadGameInstance_C::WarningAcknowledgedHandler()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SquadGameInstance_C", "WarningAcknowledgedHandler");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SquadGameInstance.BP_SquadGameInstance_C.OnSessionFound
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FBlueprintSessionResult&   SessionResult                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_SquadGameInstance_C::OnSessionFound(const struct FBlueprintSessionResult& SessionResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SquadGameInstance_C", "OnSessionFound");

	Params::BP_SquadGameInstance_C_OnSessionFound Parms{};

	Parms.SessionResult = std::move(SessionResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SquadGameInstance.BP_SquadGameInstance_C.ReceiveInit
// (Event, Public, BlueprintEvent)

void UBP_SquadGameInstance_C::ReceiveInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SquadGameInstance_C", "ReceiveInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SquadGameInstance.BP_SquadGameInstance_C.StartQueue
// (BlueprintCallable, BlueprintEvent)

void UBP_SquadGameInstance_C::StartQueue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SquadGameInstance_C", "StartQueue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SquadGameInstance.BP_SquadGameInstance_C.JoiningCancelled
// (BlueprintCallable, BlueprintEvent)

void UBP_SquadGameInstance_C::JoiningCancelled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SquadGameInstance_C", "JoiningCancelled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SquadGameInstance.BP_SquadGameInstance_C.passwordEnteredForced
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Password                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UBP_ServerPassword_C*             Sender                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SquadGameInstance_C::passwordEnteredForced(const class FString& Password, class UBP_ServerPassword_C* Sender)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SquadGameInstance_C", "passwordEnteredForced");

	Params::BP_SquadGameInstance_C_passwordEnteredForced Parms{};

	Parms.Password = std::move(Password);
	Parms.Sender = Sender;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SquadGameInstance.BP_SquadGameInstance_C.OnConnectionAccepted
// (BlueprintCallable, BlueprintEvent)

void UBP_SquadGameInstance_C::OnConnectionAccepted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SquadGameInstance_C", "OnConnectionAccepted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SquadGameInstance.BP_SquadGameInstance_C.HandleOnQueueForServer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASQJoinBeaconClient*              NewJoinBeaconClient                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SquadGameInstance_C::HandleOnQueueForServer(class ASQJoinBeaconClient* NewJoinBeaconClient)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SquadGameInstance_C", "HandleOnQueueForServer");

	Params::BP_SquadGameInstance_C_HandleOnQueueForServer Parms{};

	Parms.NewJoinBeaconClient = NewJoinBeaconClient;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SquadGameInstance.BP_SquadGameInstance_C.On Origin Rebase
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   OriginLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SquadGameInstance_C::On_Origin_Rebase(const struct FVector& OriginLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SquadGameInstance_C", "On Origin Rebase");

	Params::BP_SquadGameInstance_C_On_Origin_Rebase Parms{};

	Parms.OriginLocation = std::move(OriginLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SquadGameInstance.BP_SquadGameInstance_C.Set UI Data
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USaveData_UI_C*                   UISaveData                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SquadGameInstance_C::Set_UI_Data(class USaveData_UI_C* UISaveData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SquadGameInstance_C", "Set UI Data");

	Params::BP_SquadGameInstance_C_Set_UI_Data Parms{};

	Parms.UISaveData = UISaveData;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SquadGameInstance.BP_SquadGameInstance_C.Get UI Data
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USaveData_UI_C**                  AsSave_Data_UI                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SquadGameInstance_C::Get_UI_Data(class USaveData_UI_C** AsSave_Data_UI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SquadGameInstance_C", "Get UI Data");

	Params::BP_SquadGameInstance_C_Get_UI_Data Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AsSave_Data_UI != nullptr)
		*AsSave_Data_UI = Parms.AsSave_Data_UI;
}


// Function BP_SquadGameInstance.BP_SquadGameInstance_C.GetMainMenuRef
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMainMenuScreen_C**               REF_MainMenu                                           (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SquadGameInstance_C::GetMainMenuRef(class UMainMenuScreen_C** REF_MainMenu)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SquadGameInstance_C", "GetMainMenuRef");

	Params::BP_SquadGameInstance_C_GetMainMenuRef Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (REF_MainMenu != nullptr)
		*REF_MainMenu = Parms.REF_MainMenu;
}


// Function BP_SquadGameInstance.BP_SquadGameInstance_C.Check Mods
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USQSessionInfo*                   SessionInfo_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   In_Sync                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_SquadGameInstance_C::Check_Mods(class USQSessionInfo* SessionInfo_0, bool* In_Sync)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SquadGameInstance_C", "Check Mods");

	Params::BP_SquadGameInstance_C_Check_Mods Parms{};

	Parms.SessionInfo_0 = SessionInfo_0;

	UObject::ProcessEvent(Func, &Parms);

	if (In_Sync != nullptr)
		*In_Sync = Parms.In_Sync;
}

}

